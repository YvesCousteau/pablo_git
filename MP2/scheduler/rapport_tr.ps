%!PS-Adobe-2.0
%%Creator: dvips(k) 2020.1 Copyright 2020 Radical Eye Software
%%Title: rapport_tr.dvi
%%CreationDate: Wed Mar 31 13:33:00 2021
%%Pages: 2
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: SFRM1728 SFRM1200 SFBX1440 NimbusSanL-Regu CMMI10 CMR7
%%+ SFRM1000 SFIT1000 SFTT1000
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips rapport_tr.dvi -f
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2021.03.31:1532
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 4 2020-06-09 08:32:19Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.30, 2018/12/17
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/Power { %  a^b   latest ghostscript don't allow -4^-3.1
  2 dict begin	% hold all local
  /b ED
  /a ED
  a 0 lt % prevent something like (-4)^(-3.1)=> 1/(-4)^3
    { b 0 lt 
      { a b cvi exp }
      { a b exp } ifelse 
    }
    { a 0 eq { 0 }{ a b exp } ifelse
    } ifelse
  end
} def
%
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/addCoors { 
  3 -1 roll 		% xA xB yB yA
  add			% xA xB yB+yA
  3 1 roll 		% yB+yA xA xB
  add			% yB+yA xA+xB
  exch                  % xA+xB yA+yB
} def
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian (original)
/PtoCrel { pst@angleunit PtoC } def % Polar to Cartesian with \degrees[??]
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
/AnytoDeg { pst@angleunit } def 
/DegtoAny { 1 pst@angleunit div} def
/AnytoRad { AnytoDeg DegtoRad } def 
/RadtoAny { RadtoDeg DegtoAny } def
%
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
%  x1 y2 lineto 
%  x2 y2 lineto 
%  x2 y1 lineto
%  x1 y1 lineto 
  x1 y1 lineto  % counter clockwise path
  x2 y1 lineto 
  x2 y2 lineto
  x1 y2 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul         %	\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Helvetica findfont b scalefont setfont 
%    is set in pstricks.tex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
%     /NimbusSanL-Regu findfont b scalefont setfont   
  /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  dup % run loop two times: lines and labels
  { i dx mul dup xGridOffset add y0 moveto % draw the lines
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  /i x1 def 
  GridDX div ceiling cvi 
  { i dx mul GridDX mul dup xGridOffset add y0 moveto % plot the labels
    b 0 gt 
      { gsave c i GridDX mul a cvs dup stringwidth pop /z2 ED  
        w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse exch GridDX div z2 2 div sub exch 
        rmoveto show grestore } if 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  dup % run loop two times: lines and labels
  { newpath i dy mul dup yGridOffset add x0 exch moveto 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  /i y1 def 
  GridDY div ceiling cvi
  { newpath i dy mul GridDY mul dup yGridOffset add x0 exch moveto 
    b 0 gt { gsave c i GridDY mul a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse GridDY div b 2 div sub
      rmoveto show grestore } if 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 4 2020-06-09 08:32:19Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.06, 2017/12/03
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/concatstrings{ % (a) (b) -> (ab)  
  1 dict begin
  exch dup length    
  2 index length add string    
  dup dup 4 2 roll copy length
  4 -1 roll putinterval
  end
} def
%
/reversestring { % (aBC) -> (CBa)
  5 dict begin
  /str exch def
  /L str length def
  /strTemp L string def
  /i 0 def
  L { 
    /I L 1 sub i sub def
    strTemp i str I 1 getinterval putinterval
    /i i 1 add def
  } repeat
  strTemp
  end
} def
%
/concatarray{ % [a c] [b d] -> [a c b d]  
  2 dict begin
  /a2 exch def
  /a1 exch def
  [ a1 aload pop a2 aload pop ]
  end
} def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 4 2020-06-09 08:32:19Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 1990-2020 The LaTeX3 Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
true setglobal
/pdf.globaldict 4 dict def
false setglobal

/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
     pdf.dest.y pdf.tmpd mul add
     pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict~
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
           pdf.count 0 eq { exit } if
           counttomark 2 roll
           1 index /Rect eq
             {
               dup 4 array copy
               dup dup
                 1 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add sub
                 3 exch put
               dup
                 pdf.outerbox 2 get
                 pdf.linkmargin add
                 2 exch put
               dup dup
                 3 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add add
                 1 exch put
               /pdf.currentrect exch  def
               pdf.breaklink.write
                 {
                   pdf.currentrect
                   dup
                     pdf.outerbox 0 get
                     pdf.linkmargin sub
                     0 exch put
                   dup
                     pdf.outerbox 2 get
                     pdf.linkmargin add
                     2 exch put
                   dup dup
                     1 get
                     pdf.baselineskip add
                     1 exch put
                   dup dup
                     3 get
                     pdf.baselineskip add
                     3 exch put
                   /pdf.currentrect exch def
                   pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                exch
              repeat
              pdf.currentrect
              dup
                pdf.outerbox 0 get
                pdf.linkmargin sub
                0 exch put
              dup dup
                1 get
                pdf.baselineskip add
                1 exch put
              dup dup
                3 get
                pdf.baselineskip add
                3 exch put
              dup 2 index 2 get  2 exch put
              /pdf.currentrect exch def
              pdf.breaklink.write
              SDict /pdf.pdfmark.good false put
              exit
            }
            { pdf.count 2 sub /pdf.count exch def }
          ifelse
        }
      loop
    }
  if
  /ANN
}
  def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: cm-super-t1.enc 0 0
% This file is generated from `T1uni.map' and `glyphlist.txt', `gl-other.txt'
%
% LIGKERN hyphen hyphen =: endash ; endash hyphen =: emdash ;
% LIGKERN quoteleft quoteleft =: quotedblleft ;
% LIGKERN quoteright quoteright =: quotedblright ;
% LIGKERN comma comma =: quotedblbase ; less less =: guillemotleft ;
% LIGKERN greater greater =: guillemotright ;
% LIGKERN f f =: ff ; f i =: fi ; f l =: fl ; ff i =: ffi ; ff l =: ffl ;
%
% LIGKERN space {} * ; * {} space ; zero {} * ; * {} zero ;
% LIGKERN one {} * ; * {} one ; two {} * ; * {} two ;
% LIGKERN three {} * ; * {} three ; four {} * ; * {} four ;
% LIGKERN five {} * ; * {} five ; six {} * ; * {} six ;
% LIGKERN seven {} * ; * {} seven ; eight {} * ; * {} eight ;
% LIGKERN nine {} * ; * {} nine ;
%
/T1Encoding [
% 0x00
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
% 0x10
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/afii61664
/perthousandzero % PERTHOUSAND ZERO
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
% 0x20
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
% 0x30
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
% 0x40
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
% 0x50
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
% 0x60
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
% 0x70
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt % HANGING HYPHEN
% 0x80
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
% 0x90
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcommaaccent
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
% 0xA0
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
% 0xB0
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcommaaccent
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
% 0xC0
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
% 0xD0
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/SS % Germandbls
% 0xE0
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
% 0xF0
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls % or /germandbls.alt
] def

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: SFTT1000
%!FontType1-1.0: SFTT1000 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ectt1000, tctt1000, latt1000, lbtt1000, lctt1000, rxtt1000.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Typewriter) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch true def
/Weight (Medium) def
end readonly def
/FontName /SFTT1000 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-208 -360 1374 838}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA1B1ED6A435B5950D131BC48179F5BE3191944DD
8626DE76AAFD8EC4DC8241F2ED33E10698DC7741D6E45CF5A02FC6D2068AA205
EF3C4FDCDE803F4D1D4FF03A079CD4FC4BAB3C558A8FDDF53D34AABB7D89E4E0
CF76F77ECE57575C27718A8074CE275DDE4AD245220A8236400BE47BC76DE13A
9EDA4BD5744C71DB407BCA39DBC9D857122A1DA969E6D0915FDC1622AB8BB88A
93D2EE72E9A2FA73193D6CDF254252980674DB644EEB36A2036E04DB649F816E
E70C4C43E88609C8E8B8B84A920CA933FA00F41F2FC3C867825E2AC658FA0F7F
331323E22BD193A0A8009B3F0EE6D55281CF1076F1631FE509E79941FF08D0B7
ACFEE566C76FBC09F3B4AA57959D4EFC34413ADB46292ED99CC8EC4436DE2CAB
86B8B48847353E826F5346762CD5D353727DBB502E08B934DAE4E99894706BCA
DC35AA52C8610137C7E336009D564831E1E7936600CC3891D3A58A539523329A
45DD54B8D76F43582CE621F74FE7F8FB06E32612FB06B66CBB3096C0DD63D097
08C206A620CCC9ECB49CDC17295CD0B3C9D2DFCAACE46137490589D72A6A57BD
FE97C0CCB9087CF31EAA7860444C0D2A1B230F1879B1CD80CED3863680AE37F7
39A117963BCA696B1EFA8EA500DF5B1C5F6F42EA16D46CC0687DC684B2AE28CA
8511448362E82092B10FE5EC94ED5667ECBC015A6817A57769EC9EEAD9DB20D2
171DB059E96BD97ACD9D5EF4AAD6612EB7D1A0ED6DE0C7A5BB6A1796DDD98278
F2222F94C2D9FABB1DAD4E9D5260EE9B7A881D2F26EB1EC11D1665CC06FB71F8
026DC8EE4278EC008A25E4F5C4D5D5090888E2A1732B36220758A2DE86A7E5A8
6B8B6249A125B0BEFC25A4A5795647E45B3BE2C9DA00E7EA72C25CF8C7E10810
995360EA2FAB43254E2F2B858DBC35ADD9A094154193D0526C198FC570C89C3E
209513E8D5268B987C05C0B9114B3F340503E3B35852776303A1FA1AE15E98B2
DFFD072B9A0B00EF0A7082AE4B7898B953E96400983B2A476965445B33C16B92
8D96469645E90DC393ECFD1F0D1FF1A494D7774DE8818BBBB81149773D0DF63D
5E2BDD7F55340CCAA2C29EECB5A9AF76FE1B7195F7A89A4DF974AB2D341C70A2
A97C9184CB81320DF07DEA87EFC6AAE69F735565B9A279C94711D7350422FAC8
2C374D5DA2920460CBB67DCFDB5A885DDDE88C9BAC3F458A51932D7AA774B281
2D6090FD4B1D4EDCC43816AD379AFFDB32CBB7DD7BBE902840B0E696B909C937
323EB4D4D854478CD058DDCA8F6F19DB4EDEF832CE2A982CDDFEEE1C519D6230
37D39EDBF54B68FFB571615C0EAA8BE59F75A9AF83248D170CDDA5C1CE6E9161
790F05A8FAEE3A845A1C9040D6F16668DAEAC582E46E13447122B95093F816F8
94ADD420E1B5749C3EB71C4EF774A5D79874B743292E0E0B6EDC2A19EB425740
49DCA5FF3091840199E01D25E908E4505E84517C80983C0D44BC29B509DE4C9A
4020E0C99E0D74BAB0E1025C33C1A6A17F95859DC19929F34995728F4B225616
FC555CD94593804226B0191860A062EA1FF4047A2705D72210735BCEA5735DF3
16A683E49F9334D7F1339D898038B50C0E552040F86001CA4EA354E74DBBE94C
AC3E80E5F5127AAFB961C0BF1CF18DF16ACA8D20DC033451BD6A6A518777CF2E
2BFA2AA697F27FC4CDD600A8B30CC8AD97D85580D34B6D844A30A5CD9A2B92B0
0BCC6B4C6F1E4B622AFFE3B187395EF316196C9D4FB2F587BE58063E5CE124B6
A09DF443DB066FEE28F67CFBEB2EE4AF7AAD78A37E8A29152315F5CE6E364D5D
18B9C5796A7BDA946D33464E7EFF3CFCE4A3440770BCEDF28AC65210C3652D58
9681C058059DC2EFC61EEFC10FD101B48FA7CFA74B5C88F53908837FA899E3FB
8440F2588CA7826435CFB937E6CA5478991E3259C878F260DF0DFBD65171980C
9059C488192AF1FCEA7C2E384AD62F4436EC6E9E515AF333A7E2C594F568B0C2
59DFEFFAF7CA831A87E00B4D60B2CE8882889AB4FF6866C81C444AC83D31838C
15C70405D9C2C0886337D8AAA2B6937BE5560D808C9D96D0D7D51FE92D52DE09
8194D4C2A9E505542ED950A6D66AE823D871F2E83D7D3E1F216F33D02958474A
A95A68C4F2B71336FE2CD78F24CC1B72CF4BE7BAA7B108793BA95659C2679B05
EBAB7F318DA3C65B7B737669EC0272C7BE8C807525631A459365B7FD44E96228
E2CB7B463B77FFB0D7A5AABDBA6E65A7C94A8FE239D01F59EF9D1F2A12D10CA0
6A9190F656724239EA5AE88B7C73FAF13FF8D90CC02040AD4102EC84DEDEECFC
D5E0AEB7E228F211E5786CF498EB271C57922952B5B7576890D0823E35D3600C
FE96CF3CE7F41DA9ADECFA259D1ECE055384331171DE95D29FBB84407FBEA91A
5C1849A85ADE38E1160368778A557ED09C2D3375EF314567EF7B00886ED9D52A
210969C8E350CA0CDA66B5FAEA03843BB4FDB905112EB251E08434CD1FB81B89
61F03E096889DC9024509183C63092B883926A3CB77DDBFE0100C486AD8B8E00
270682BAEB6C8A987D61514F6DF3B26B7144D84CD719A38F17FDD7BCCDD5EAC1
7A0786773F9120B365BC6033066A1F98CF444DAA16F66285778C3E2CD4BB631D
9C72C599B1D2CE99909C468AC98EE0E7270BA9A20E60B8E13F999A8DC745DF4D
00713E149B33B185AF2472E5C865FAADFA4BFA5AA1B6CB8CFFDCE0332FFC2A13
7FC9C9A850A7C60B8B4A6F4504FA9F8BCF9EB99084E8462D20F60E926E8A89D6
B76291894C0FE6433CD52E6731324FDA332655A716F859CA887CBD806310E1AA
F04B2FFFCA909E51811AB88EA5B505B5F326E0FB05FFC0DC492F4D7E318426FD
7CDDA75A3B768BEB3F2A33A63F5AA84626BFEE93BEB58046B83D590B463BCE00
9A580D00CA8E697ACEFF707C5CAF286F4322314DD5C21065327393CDA41BCECA
4E783D502D1FA1E0C5A1493F36FEC0709D6C33F0D17D9CADCC9D128B77574C00
6312B2570F43B154DB14220C315FEAF1B7B910D78CF9A22790A020865CCB496A
756436E98DA00E305CC7017EF7A7C42886C1EBBD183C0573B0CB9C97209ABFE7
D49F806F12DC7717560F9DAF72D09F8A5DEBB9CD4753C97BBA78C35D75E934DC
24A3D079F74410EF877C07E8A77B371B2E51404282845D720CD9A15C53B2A644
FA3DCFBAA6C5342A93321ECC688DC91D6A1A26CF64F60AED726D4253B1FAE43C
4BCAE40A8FF65CDAC34AC084B6AE0200252AE48BD87582EB6C88467D8244237B
CEB7CC260BF3D314DE03E8E6F42E7E490993A234B2DF61C2740A8EAE4450B763
5C939383F822C9842C5D0C6D95098E23536CEE02E71ED78C3F33FEB612111842
8CE6A1F159DBFF07ED4DEE51ADCA94A329EDE034A926A37B440D0A65A6C56CC5
D185F48FF161952FC9B7BBA1E0C9995F56030748279871E0171FF389EB30C3CB
CD6EA6948863F98AF49114133CC430BE71C9771CB880E51D42E4773BC9FCE759
46AD1EF858DC7CBDCB8F06BA14CB71FDB322ACD2143B36A5A0F80B0E1C5EF252
AD1B1D89E5835B0DD4B8AD25EB1EB36DA1A87A2B87A6A577651BF998F965C694
BC0C532891D2007CDC6DD09BAE86195EEF7264E6122A16D517E8C75200E44A40
AD5E73AFBE8CEE260B85C98BEFD29BC5C9085AAF00D000ACF7891ABB0F75E169
6B9FFFE0D1F7217AA400E50BBCA640F35896FBCE2E543520C013A368FCDB3450
4F017FDBB5322656862DDD7C3552C0B76FC6532659CF4EF37B0349DBFE5F743F
FDA8A8C167223A82E9239921FE58CC0B13B522B9F96977DFC55219895CC982DF
737EBFAA0D75CCF76C27A2D8AD61CB386C420D073AE8A72E5EB496665AEB27D6
DD3839DCF6BD5546C277FE4EE6E04C23EA07681C391F7CE0BB3FB9B0943A23EC
7F45612CC46E07875B27F853CB24E335E4F903E2BEC959F88C7FB945614482BE
E6C96DA9D0287E9C2421C1BF1EFA8C970B99310912F82C15F455167DED9D3777
0EFAF4DB59560F078DE4CF1E923CD41AA80955F86226CF381C72291EBB15610F
02C9986116DD0BFC419F724349DB4BCF0DFC91C23B8FE6B993CDE3133136F8BE
ECCEFCD41E7BA921D367B0F308A0BA859BE590A4D7A19F27444F05DC7CEC6D1B
B14993FEED7FAD9B7D6034EC2EB5E8B293C2B02EEFBEA5E17788F8D3C4CD4D1A
67BCB8C799089916303832B169786F2D749F10479516B3AC98E3C7F55081E4D5
F5DA3AFE742168EB971DA5FA37D5FA489977374C6F891A45A5C491B030C40E1C
727911FEBE1F165416FA9DF533BE64F594DD09F82CEEAFFFFDC70F4612AE90A5
3B0DBB1E882AE82292FF237556F04E0FFF033637639E26F1AC1603E753135452
46CECAF3EE1260CF3AF1721FDF376285B1BCC769425271A5E5B2F43DE4E302C4
4D08884689FFFBC3A0F74BA87F716315D0372E051156392E5295F207726537E5
84D7D9A2E145D1D0961BE703278B2023F9CC59C7D77E8CC2C54BFB8F5BC45BA8
1B0A8A00AD7FA9FA045C41D5986EB0A40B5CD95503478383863D4B218E597A37
B05787E100FD3C54002FDD1DE1AB5EDDC5A75360379AD865341C849E24353EBD
8A0B47FE17C0EFF2B0525CA523E6133B2B7CC7BC55ED73AA86828C9D45CBC37E
59B1DA90C247898549D3F36F6578808AE6489B9FF8C8C495C812E1BBB4E3B69D
DF28B55563D721660682F826C4E399F7B9BEB0B0192EA36BECCB4FAAEE690057
725918DBC5EAA17E79A2B3872A369DA7C5EA4653F83CCE1C184163D096D44981
1B8522B71513DE5D75116BBDA4B92CDD78FD3ABF42F521ACD3E8F45B56587CF8
25E7A60319C24281580105AC3D461EF59E7A6619D1CBEF62F82D0B50B7D79630
EB1BBB88603823EE8094625D5F7DF0EE61C185EB5D6C1CCBFEE4EAC0A5DE4ACC
F88DDBDDAE335E5073B23BEA0EBCF391BE9C945E7C3C9F9A46B04078D23572F8
3B2966D435FBEE582D0048908980BB7419C397B0B4FA4637B63C47C0AC7CE269
02FB565176F6C03190B02AB80069F7DBCCED8901F90F6CF2952F1238F1703528
1FF5EDEC9711F4EB08F9ED7D287D34A1CF9A6197941B12553F6462E95474D786
C8653BDE44F361E78967BB388E6BCFD1970E0DD4CB2B87834E45898C89330BC3
3E551987556417071CADB861D08C2F4DABBFB9BDCAA486B13F1E17BB4725B467
535AC80C18F244ABE9F2A95589EBF6B45D088CABA8D7F062204B651E83B1CECF
7227BB9109CEEFD2232849FAB1495E0C5EFA06069181AEB9DBC6F45C8A2EB583
47F31E3357071F763654680C500A09579E63EB6087560581E095228F59C50C5F
7E3119B289F072A9B114AEC1CA30A07C4C11B816639107AF64E711723807BB0C
9B27AD6231DB5A6CB507C48E6A998DC7088171FD000B792F983538F5B8BC1F74
F77C197D9B33CA1B374625051960DA427CBB19FE1F2563A7085931DBE1FC4705
838E516B1B4021598EA77954D98B78E17BD39CD5588CAAD1E91CC8A6715DF579
FCB3A2AA4E1B7B86948DEEE2ACD71ED5F66EC3B41746D69F860DA40767605D19
2C7474D68928C534D63F193DFDD31C5ED07EFFAF392B53BA0BCB0E709B7FA934
65343A7151BB70D36F0D1BB4C97D37BED40BF37B56363ADE66CE8EE2BFE7B05D
F417D39587518860C9B05156A54FD3546FAEE08568A98B1E0E8BEA41318D849C
05B0E24047CF42873A113116359FA58D44489E2A7F295A22390FCA60FC701F11
1B48BE85DDB773A45531FCA6A3415BFB34610D1A4FE64ADAF91D18D83AF7BC14
8498F04F23FCF151D0F503B4B1FBADBB424E8DEB9AFB5DBE3FB49851973828B8
BEF905E8FA521F1C17881008C268C635704A93491A61ADF484A1640C6CEDACF5
72324DAB9A7B6FA29987C4C2C750BE37AE380E3D2BE056D20AEC2CBA610716AF
FAD6553C6AEC02ACA484EB4BAE6582A123CE4EA6B9DA529EFAFE44BA7940D223
9A550A850DBF632156B715159828F2ABEF44057BB1513B35426515EF0693628C
05D6C447F86C8FD91B7D1DA3259676384C92D65E4480FBD0632FBC68F00AFFEE
9E086E6450E3FD123CAB6EAE2DC063095DBC491C8D74793648763AACFB3082AB
0165E0F936FD9673D0416BAD3A3ABA18DF3377AA039F2E86A65ACC7E68357FE3
59398F2D22223E9AEA8875145155CFE3CABB35BD346E2040F4D9ED7E3CCE3C55
2CCF8B83ECE8517C92C0A3D63AB7D27CC05C7690741C83302ED6B4736E2BAF09
2DF5E88D51C674C818C773AE158B3F90C1DEA8246B855939501C04F760F08D58
ED1885E0977B67C14827EE75E26F90FDF4AE8C7C58D60E9F2D6F8DD5A7F2B1DA
4620C8AA2E58E6E86824F23F695A1691CE8CE57ADE11B56D5462F2538DA561E8
6F95EDC4010AC0B6B1D7F33D5B4AB16301BDDC6863AA50AAB280D18F70784AFD
98523878C4F5C8E87765A9AD5648C12F4C9016F0536D8D5AAFCCB3016C566B04
255097450DB147850DC5BE7A268C6B0B4A5E0E8319C667D1FC30CFBBECACC0A8
28A47BB58CE1DECBA918C05E79FD1157F31A1B749B5B194646FAFABFD516F8AD
9BE81238310128E4CF44FB6CB84CF25321B119518F8915D26C7F5BDA42B2B422
8CFA829EB00947C8D9766E811353D344022AB91C8A9ACF420F2CB30D1B5BA2AE
C0F487E99A654615785BCA695E70AB0F47CD15D7207C7A825D08BDE7E506A2FE
66F68DAE9CE17319CC2ECC68C4355021430DDDB5EF76C8A9A44C9B04554AFE96
84ABB0991D20146347F5E03448350DD8CF4DF4BED62AE20551845A3706D05EB5
6DE5662883670E6E54378D78B9A9DE9BCC72F4E5D0BD1C80AC7D28BD9F35A475
A7A72FECCDDD6F4DFBCC8A504273FDD95DAD8DC0D480AB8DE8E7561404D5B4E2
46EA4ED93F0051B1E1E9631A82643ABD4A038022759EBDF9EB35D2FC00A0D947
02D2F9D1A136CCF816E7AD2773295B40002BFB9868ACB8C41077C9D30FC064CC
6CB30C552FF981DBB08EE42A76F11607C84F944D3FE5126940887D334D5F9E8F
791C86ABBA55A956919D8BA9F69A5E5657C8EF4E71C826E5FF81AAEE632F4D54
104FDDAAF375BE56AF47F976E659C31B4CA1D1428FA0E147553296D3BFD3E6C4
75674491455DA96CC30555FC7A40CECFB8CF71B77C58443770FC71B2AD037F75
9B86E08B5ED6823AF1C31B704A2596B53047B1059986EC5FF4A8073376B5C153
3AC8345E3D53DA4AB6E11E3ECA1B860FEF24B74B2502B9C5E232CB4CF649C350
3F08E2C7C8E1ADF63DFE9E3BE2B2ABD660D2B603B5A400109BA195BEB670F0DF
0644B2E6647268201063B1E386E6A2738D2A61D155583338E2829AA470A1CBCD
A289CFE59086E8E7043BF9C355A5C29EF4F8C47ED334C810C3E2AB48E6DC9400
3C96C3C084F337D1CE5A89C7298531871D6AA60DA42C5E456FCED1601BF5C457
2D69A22EAC5A3F9D962EB8CCDE6D1A394EB7B7831203194E76D3726E3F50F160
EED71843B9EA5A218FE065BBE91FAFB6680255D29719C192CC65DA0072523797
A0AD0CFE9A4DC6C58341B6BA6B08D1F074FFD2356EBF7641727AFF8DF1AFCF13
A96A51D398662F553BEDCE5B6BA16D5ECBA6603CC2C9BD3B16AB6F3C877462BB
802F05CD6EC3EB7E978B7113541C3B84D430DDD78479CAE6B97B372AAEB7D219
6F268A6650371F0D4BFD284560DD928B97F03B930396FEC2F9C91DA0DA7DCFA3
3037F0AC98670DDDCEE451D0E504C5A23AAAC107F629D885CD0D47132C98D9C8
C2E10FA573F2D6D8C7D8F1E782A3ACD5F34209414E329D0F063BE7F7D60B2E14
33CA696136B6AD2D692946ED079E83C8465632828C8C98FBFED958FBAF87FF44
869494B4028B4160979405292D01E9E43AC623E3D8C713E7BB5FDB28489D8877
423FAE4BC6537C670FDC930AC97D84290A953A235F101B670A6EE75D274D4782
DF9F213BD7DE8CD18C799992D38EBF207A83CC396807ACE71AD8C3ED8C840F1F
ABE7147F7EB2755A6B2434BCE500F78A24C631A1595871E3ADD1369E83B1F17E
F1407F512C2591DADEBAD154BEB335CB8D7296D7BC8CAC41419555F92E08EE7C
8370B7AF18CD4CCB756A12B6560312E9A207101BD32328BB512876A0065877E4
FC0E664FA67F0C661414952348DA7AF58914F54313F10A3C06E106FE0B35A70F
3D24993B7603C32C1AD88A0961264187B02C5300952D0388BB946C08C09C2056
86F211CBD4454AAB910BE8790D2C8B4E500D7D00A94B1DC4478067DE503BABFD
012A0B89374380B9DBDE997C279757CE1CF48A174E63E97A47825AA8182F5C60
61535199A8147612F8FE12D52CB2FC743407F97D94749F379E83EC049D3A6015
12F42E4C713D963466FE67F4977F31461F60C68DB63BA09D059967D0E2F84C30
5EB699EC1F215A3696EAF26AAB74E72E7A018DCFBA7B8DAAC562B406A8E5451E
1A21C3CD2629486D9658739F6712B28EA3CC399EA913581A462C300C919C9284
F51B59DECD77EB6DE0154777DC8C1356CE769551AD0F5BC948225A2FBE7A914C
456336CF8196F477E3E521119A06B3EEEE1DB28D47BCF64E4E92CC4FD0A896D7
D0636C61A8435E9E697F49E29BF23132364003B089656A8505EAFB42C4D3C509
3E0886CDF5154ECE945C37E8C3DD1B8B66C0576A01EDE4FF8029ED26CFD36869
FF970CC72340F02646EFB5C6A6D4E81D1E947BCEF3E7194022C27E4FA14EF0E1
433FB5D4DE363457A3B4444185BE81B08E09C8B30DE6764D2443EB3A0D834380
3E1D7D2B8C90FDAC2EE8ECB4D53FA905AF046AC092DF0686F0383670A99D2CF4
766FFD9EF3B35C2DBB6489677B31D3CDCF6467CF7EA72F4FA57E61725FCB8452
DD363CFA39A8EE6EFAAC3B1D4A86E70CD8A155D086FE17DD515FE0CB61A4A575
AEB7D488BF26B41DE77028F82C47E9D26AB98314281BA672505296CABC741A68
097B60E1B7C50249F7A595641BDD5B11833E4AE962A68C040CCA48C0DA166A46
9F67D70D8AB7DEDD6BB362CF629CE4DEA3482DA2E54F4224E8FCF854908E81BF
0ED2FC7A7C0FEFD235442EDB22BE291F9BA0187CF78E246AFA81ABE5149C2ADA
6B6D93D1E88439BBBAD6104690D7ECBB8E8FDD8D52B52408E3E8BC9125511638
5BA6A4CF3FD8B389526B0192B621C2934BC165F96B069EDADDFB64B9D9445A62
8099BD3466C25ACF8800501A3B32335894A1A69F14B82D4850A66762967822C0
C4D2B4C22EE38950733524EF1ED2E41BDCF4162689B16CD77F36A5AA76BFFB1C
07D20DB0DBA158EDC89F25681FD2C7D0028382213C10927E3AE0A422BECA4833
B16F5BD1FCD4C90D9763DE314112E205F0733AF9680463C80E9AC19292B608C9
A6C12109CA1945FCD0D0FBEF707B8FB92EA58FD6661207C0049559197A2B88D4
2AD04259C849EF6227B0E83E8010294A833875F9F16E68C2BCDE58DDF0633822
45754FB9E2D79AC4B8DEDEEB9E09B9CD239F61DB4FFDD73F1821C85FF0C075CA
3614956371CF4136782135AF79C5E2D69B687526B54DD18F96E8AEE399DA83C7
C5AC0BFFF33DCF47D772E8E2779E6DE0AD0AAC6F1B527131E7274EEEAA28E09D
B1FC39191954A6EEE713D22A147E3E44E11DA9A291FC9CC8D858B3A16EBBC716
4C6178CC7F6499CDC87F4B2107BA9A666A06FD2F798976DA5391E5CA83375DBC
655C61FDE0A9FE5FA47F44C4E2F2655CCB85FB2974B997536504D777AE66762B
CEB8AB14C84FAC3ECA2CDA6A11035C2C79442052A2B88BB126BB915C39778C46
34D3DC68E1353BD5BE132AF5A073CDB6B84368DFE42F76B007B149BD779C3C7F
4523AF2038AA1A96A1CE94AAEB38581CB95FE57D96AAF73F063FC1B9EF56A8CA
2C617B51DC4A2BEE307B901B0CAEF5934B2AC917DCFE5E9119FD1EA072B7E58A
FA6CB89A6F5A4285662526851CAA5746B746C089077C837925205CD1C2268F43
BBE3DAA009079565F6F5DE725EBF15D51CFD5153FA8ED05C720D28393B9D463F
5E2AECC961B0B1ABBD9239C9B660518C4EBDC1931641DE390FE8B21B332AA4BA
88CDDC2041A7AA53599FA7FB20654D9E97727D40A589699AD9307631BCAA8C53
4D966D44D1D906DFA78D98F352F67530DB5CBBA6E3315BCAB0E87099F10BE8EE
6D3C73FE1AE44F7FC260ED0E596CD2FF09E7A787826AB13EB5A93BD9CEAF5474
6AD6FB4289EC577C922C235BA7E7A47DA727CE1D9AE53BE7071E9BFE91B390F4
D303E06A2EC370ED603DC71B70B13B8CE9C2702D5063750404EC5C5C6CA74328
9B5086F392CDE3A0E93D890DDD9B1A016B74BE912B8256839463E14736072949
3C659C9A92A95D3020EC756F18E03916F8BA3DA967ECE11695BF4AC2EE65D1C0
3170E17E5538CA00FD78DB6E47E385A9785F3284DF72563F825ED1D5BAFB1ACF
918D43C409DE36BDFB17727D2AF7CC179189AB337D2D1DD78D1B7A61C739AA11
8EDA9511A3B7FC77303BE9A0B5873B8B67394830CA8076C9E7438E016D694168
6DED51A3C053760EB481A8C18EFBEEBCFF88C0DE48E2AFF3AECAA9AFABBAC2E9
92416B7B9BE2D8162F21D016CC773C94450381D6145E33570ED47FDA7694AED6
9F8621C034DAD9C193D44F3221D2A9C46CE0FC99A106F63E9DAF71F626757011
BEDAFF826D036E4AA12207A6C2D3D467A8805ED5563F49920F9A073C3AAB7129
F6D5314F0B7971AD959C81143241CEF6702057D971DC24C2F805F7A0245F6A35
2BE62154E3661B0247E7619B8C69F19A3EB77A62E0823D1B9F753B28EAA745D2
F3CBE8EA243A5B05241460A6A05BB8C3A2684ABD37B53E1C57888E4D56DBA877
CA985BF2B599D1BAD7F631E2DBFA6963E77AC9A19907AA27D00FC181AF79DDA7
EECB0F140507D3627F462489F20E18CC4DDB0863C810B37DC4189230B567772A
87A49751BD71A1F38E713EF90BE637054099C139BFD6E7C7289195CF3B2D50C7
84E00210DCE05E343B12232571BEFAA03D57A9BD44CA1B3C86218E7CDD30884D
DC2ED5F6E090F48C5B1A77D2FB5FFF2C2FBC2287D254802EBC92CC96421EEB20
715A0647DB52992DE617DE4E576CF98554957799D9BAFDC0D26222FD26B6B7EF
589F0BEF87390010A4EE2ED540CB493D9C239239224691640DCFC17AEB484920
133999E9F0BEA8418B63CCA4D5C10FF5681C7C8437DE05AE2F8A2DE569626641
AC490BBB2513B3555063C9BD12AC5931D8E1841DCB1EB7D69FBEE9B214EB7E09
1123B08B6D485057BFC6FF021416FF12A6C27A30ADCAC094EDB63C28E8C0D97A
1A00F90F2422EEAAA90590755F5CA769403C3B8019E9DD30CB28A3D428B65D31
49CCAEE98C1485342BD9BC2AD969EBF9F252E93E13CA2549C69765A56D9D698D
21A020F6254C627A1CF7D1EBE1F5590A1A07C4B84DBCAAE4DAE6BD0A302F7E6C
E0C639ACFBE7B481110F999645D8D464C94C6EB71D5311987CE12AC4C4DF8A08
2DE209B25B7B2A37D4B3683E1748E3B5803ABBECF27C0AAD52F75E9E3A6684A5
3F52B4479B93D6997A5F8CE5847F73692B2639CA73DC1425E44B39CE5265CE43
C38E87B56D7804B46E66E2111FF1EBC2531C890DD82F105E06B7F900B9940DC6
832EB967C32BAE3DD25B7FCB919DFDADFD2B68A5E0ECA0C520A7470026C7CEC5
60B2C88AF1BE6BFDE0D3BF7A096CC1FA00C510884851B0E2283FA61818266342
C514D418E4AD8365E1DE13C6A837B12C4CB8D969B2680DC6BF8A26B3C704E637
F8F4A6F6A1C0F6EE78C1861717997A857CEAF1BEC424C3BFC8A2F87023C435CA
4D40049A25249432DC77C55498FC2D2D9BC381606D90DDBE030314EFDA6B0F7D
F64C81DA33E9A68B9B83487417798DCDD9AA169A55757084EC1B33C8D05413C1
E1FF0E034D80B2D8860951277F5C187AD5A068F6A42402BA3967B10B0CCD4E3F
BFBCC88F46110E27EA040586F49FD91D3F426788E91AD157B10FBA9231251939
279DB0E47E7F401693E83C45B0C95D4FB12232E8A64E9A743D99995903EE120C
7BA6099EE2A9E0C84A9F4CBBD52425D933E8F581E0579781707A1CC19509B048
CABEB786FCD3F8DF86FCE519E27F26A8144C7D57622D3612F411771C1FEFAFD3
5068061FE700D2919F2AC80EEDE74532E61F0A414824E7D5B7136CF8A31CB87F
F36AA9AEAF76305955EEE57273103CC038A63C04DC4763D04D64088256DE3B40
8336BFCDA2D4E24B5E8CED2AC26C571264B72348E43DDF50DB540EE1F145DD58
3F7E287815E6206F29BFA9DF26B0A600056C5FA29492AEF376A4A16023895AA8
ADFF905F83E5FE32518B3904FB96CEE266FEEFB930CE01125F3499357EFD3BC9
1F5D7AABB7E74FB92BB94E671FEDEEAED379A9083CAD660AF79E4D36B4A04E50
63B2915A413C6B889393D35EC332CCEA3A27024C2BD73471C771FB388DEBCE8A
AE26FC92F53AE9CC5D9F226359B0D0DA1D46AE862B99365BB9D562A05B63B409
DF20C182AE98CFFEDAD0A7D875D0858619040A107D9250FC73D9DED2E393368D
5B739EFE36171714DDAC00D3D25D4F05F076C55FB467E2F3B5FE4D85A318B05C
E464122D7FBACA70F73E43D0698C1656984DA00263F9FB6D04779D328E10BB34
DC3834CDCB16D1DC69B5C9EC560CA9C17F6450F89355BC3919EB6C56390E5C44
CC8B80DEA278876C97225899D54679E2CE3B38F9072EB86D70EAEFF2DCF0028A
99608FAF943F41B7B6C7F29214E8FCF7232EA54E284D328926E00054B156921A
A86EB1323CA2AD8E0DB2B759CCD879D1FC8BD7BD5F2F0A4765ADEE5543F1571F
F48BB730B202507B75E254B5CC1334FE0A4ECC91420C848C8AF58B7309BD4AB8
0818F6C1C621BC6443CA56B09B90A74E190EB9D38748CF8CBBDEEE31883DBA8B
465207ACEA1E0B494ACF836758C3ABE7A86423F31457241BD76FDFDC4AE5E733
2BE4A6387FD8136A78460F2877A5F2F363499119B3493927E3160A1B02C1AE80
96DDF287E5D3A8CC567EDB6B6B56F9468BD27FC5B43A2D7B3F99DAA34E24DA9A
E789E42C389EDE846293F4F569AF37DB5A86789194FE988F5FEA5AF653093205
0F7BD455BE95F0F7CEB2BF8873C5ED71B56755DE5115610081CA4A3DC88377E5
A22CDA99317B086BD8B9189F1E95F04ACFA0C1E4FF502E773FFA380C42E6B070
A6A4329A7CBD8C66063FB55558FC58F8545711567530F6AF4BDF1543BBB1D0D9
F5CE5A90457DB09B591DE58DDF8D0F137FD09BD2E5412FEBED9AE61AFC1AF1B6
64E9BBAB13EA909D2AC98F943AAD126C6C238DE24F302B16C9CC09D96E7C7BF2
38622127A46E9DBC2B4CBEE38C4A5BCDAD888ED4BAA94F5957F12DFA574891D4
C93B609A3F376AD9409A5B40EDBBD3E7DAA27A7C08F0BD440CF62DD47E7DB9D0
55B9B5BCFDF4A396768284C667789C4F69C6A2FFD6EC4C4F3F841AE34885BC6D
6478202BAFF37B9C64801D47F41F722F983538F5B8BC1F74F77C197D9B33CDA5
2D689C35EFB70E7B391AF96354CB9740D07D332A3F1001D0D6072CA4B5D7338A
98789DEA96DA066B2F857D302CD728BC91BA089383208487CDA9009B282362B2
7ECF07C3B2C31B8FE7475736AE1662D531C6B5CB0859B146CECB8C340B13DDE4
627DCF4A8009E2840AB5F85F043CA3DF30886B28EBAF7DD784A959FB5E27C9F2
AF13E89BA11B9E5E8A3464BA9E9E48FE80A674B365795F72779F39FE933C9C75
2465BD8065F100485D9D554DA591FD1E63E93FA5806E6D33041F6109E96E0FD6
BAA8434094A5AAAEEF347C59BA39267F83EC08B4819411F01130BCD5E5554B6D
9BED63F0A8928C0C06829558B0B4A13D01B3DFAB38DFE99F8441B5B6FE9D7016
3389CE7E8A42E6842DF9D4D8E41706BE48675695018FF1765181852CBD82C781
D0648068F92EA79BFC91EA5246A71EE8310DB143A81F77615AD3E07C8923FB4A
F9CA17FCF77C1370C8BFE081832EFAB5813E8B952795555EB2BCB6DDCFB6792E
33194C43B68F8C6A9CF1E5C7245969AB8194BE9FCC657773EAF77A490E66977B
B510FA6AB5593076994EEABB0773F24A6BC3614F7E4C800CC61AC9E1561406DC
D0990EDDEE2C8FEF8208CC95D93C80237F52C50735438650521E082285F82214
2BB141B6FAA51EF6C23A5B8376CBDE8014C97D9505D9E7C7EBD59CF84FCD4C82
DE83BDC6A2125923088427475D6F1D88EF5573B5DB16572FAA7C4150100EF093
59A8CBAD1B46F2247027EC2EC8D96C49C7BBDA08EB1D3FE1A04FF28BEFE90531
0D848C8AF58B7309BD4AB80818F6C1C6276D0ED1EA283F58EDC99488B1A3EF45
EFA99712861A178802C679818CF8DF891E57317AB064E2252303D3DD4FFCFC95
483BB2A47966094DAD9B9CB52647ED165AF16EF5F3437DD80080627C119AA2C4
80AD837EEA8153B67EDF6DD029942C0B8F56A07C34221E7B618737885194490F
2D722E83609860DA745920AF52DD268B47C96D6801FDCB65DFFC4B1D9B837FEA
7764C5F02623E0997F84E47446A0E6D4B255D28DD1E80A91B1917B3B82F7633F
B174D178F4D94FFA70E5D14BB87B5C6D6132711F1CAB3BED624E3B037A3D1E3A
7F7C41E3074A5BE044F42EC0120C3C917A6ADAF849940F70238F69A4CE6D6AA6
CF3BEA450C7DF727B8F63BA7AD48009B9964F9767FE9396FBD2461D974DC68D4
E0FE6320A138B76191B06FEC97AE75953CE329891E0C6460249830FB1B873BB2
862DED2A90B8A2767A10BA2425AC897D19DF7253F9D0D23202142E52C14B3245
C688EFD09F70A9AD0E601FF5BC6A153AC5E32865496740F3FAAE650DE3C61569
8EC35D335F67A6511AF3970E6072477C0B90BCD0F1E8684A7C0C613A59A3EEDA
53854FFFE3D9F9FEFC23DA9A35EF64C6505AA73F91C02B6F1F52C0B0D1CC1F31
0E237C6DAAA88EE6187BED10FAF0AEB6AE1EE6D08F1E6042DBCDB9CD0FC7FD80
A80D1197D498923EEE9B65C9D7CFC9A77E940370E2AE269E64BDFB0C5B83408C
75FB1DC7F93E4C77E5952539F63C7A3A544C09EDE2B2B98457A95E71219608D5
00C80D9847327517EA65F75BA912618E0485330A41661DBF2D227AB63F1F98B5
3B1F4A09F1054318137DEEEA579DE0654DF90509FEE43B4B5BCECA6B9BF6A258
7F0A3B6EAD4783E0DB032B1B4581EEFA264993D49FC13B2B6DABCC9956F75DE1
2403A443527C5A3F6362003FFC561F3F3C91C1AC68C552D7EC09625E82893344
EE4CC83176CE2D14527DA0395A985015EF8CB42BB7DDD628815C8C74880A7413
E8635908D0EAD76F7633803CFAD6F8EEE3FBF9F74627F363ADCFC8B37F4B3BDF
D76950BB0C1540AD102C53C170F7176905567F1C8F69A4772B854BA757DE75DC
C1E837BC90F04F9FD3511FD8D1F0D3F3C798609482147DB6F8688CBB54383434
9255ED02837BF1B7EE0271E2233F7C2897FFF19FB1548383A968EA5D22124C4C
A56A458C1C4312DB9288A39AA9CEDA8871E8C7ECA5017CB3D93D820105BB7CFC
9391D989537AFCD7FC3E5B0CDFCEFC68FD0884E5BDD0467F33D14F29A29A5917
6CAF28B51272F27F1CC2B577766770EE23C52AA384A52C677760B57ABFD9C03B
07B035520A5E8CDA4261086E6FEFF7F0DF0E29D2F08BB2EE9BF88555F9928901
D24CA03B7E474178FC042921654FF33BE61CA7707EDED071FC3569595869BEA5
988D29F9D548961D27DC0260B7522E601C15F64FE3908AB3F675FD2DC35A56E4
B7681BD2A4E6874D9A0C4A7C4D1C0D54560A8432217301F3C0772DBD37F47D05
C459649AB45977E51B59C58B51B6EB2B43FBB29B82334A019B46D37F5DA1FB4C
0E145F747754CA79D8F6EDECE0E8BD883C606B8C153F0EF062F7495F9D9DA1AD
BB8975A9CAFA807DB3C40115C7E339BA3F435E6E99E851E6312F444E7DD3F9F9
0AE539D405FBB67F546C1D4B98BE2815F6DABBD78875175DED074B727868B4BA
C5C9FE00B14005DA510B139C96A4D8D3840792065DE8B7C4A49CF17C7AA412BF
BDBB6B95C298D29319AFB430AB8928C1428BD35A79B6D61069FEBDFC734C4FE9
AB1BD41BFD7640789E0DD3FF4A53F378A3F41513AF7100C965DAA8CD24FFFDC0
5DD565E5C3596AD5B763271552DA5E42054ED0AF8973ACB054DBC3EBF210A12F
FB5346D7A5C5127E1F8D696AD10EDCFA603F670B60B2D051C6CBCC1EE0BB49F7
FE6A5F23081191152C01A7DF2E63C2A04F6B12A850C0B88086C8B2BDB0B3CE87
004B3F9E163335F9B3729CCBD175F000EB04A52DA07143B91633C8A2EB23C7AF
C9E98FDF16EDAAB4E2C0FBFF0293C0AAF406FB3FDFDE631E094A1B65C13AFB62
72363D2D02FB39057167461593C87D090E04997FAD4AB324338B8723DF80E5B8
9A772C8480DE207BC8D4C9A35C96375DB94FE91E079DC80120F9AC55E7B70876
C750BC1FC4988F68315BA74D248BF012B5A18F9F993A39F71293845E57D5C51E
B9597356CAD657DF7145043C014A0C4CFD2CD60E22B004DDC9273442B4CBC2A4
82BE556600A300B8CF4ACD397EC0D24DF2716FF77F30AD5A2B83CF7E2BAA1C33
8259F0860FC065DD42F6C1CBCA7E3861EDE32B55B02AB53D4497937C92121303
C2266319613FB350942BC74AB503E55647E47290FC5D557DCAEA201F59DBA1A1
9E97C7D52A4641E53CDED8D74FB698F2DE02E9B62F5859E980CB066DF9F12B44
87AF410341D29407B28181E42E059FB6769E965F6AAD9509CCD8A77E38A4722E
9ED04606324FA073C1BEB10E83AA759CCA28A1E598E87400677C92FC9CBBBAF3
A1B132A68C61AD4FF21DB4DDE4E6894EE0F8A39060F99EF668692B7B1FBFD118
4D2F7777624B250F783C32B0DCBEB38BB5A39D16C2D43E99D94DD009D9A7996B
6C0DB5F2632126C001C23238B601C56AAD4FA0B5B7A967327FCE6E18A2140570
375556076EE6076E5212A2A2F58CF4C075CA3614956371CF4136782135AA709E
9270BA85FC78746416976328E1F0D49BEE1886C84DEBDAD43E75A878A64E913A
41F60C4AABBE388385AF7EFDC635611ACA260BEBA24915FEE4BAC95878C7F346
027F02A52AC1A537B5994E481D5DC2DE545CCDAC7ACFC5CD8BFF8C851CCB36D2
E15CBE3A2A3216A34CF47B5465BF471FE3136A120736CD964682687D561D1A2C
02385E5E7280471672398D67598FCBF3413DDAAB6BC6B8D8BF6EB75815920242
0D4A8E9F99E97B1A3605A855FD1A009539525DFFAFAC1DB7A4EC42919646E362
C30D789C9E7B29CDC48A75712BCBD9E67963016A1C77555FF8EC6F39CC66B4C3
4D09ED9039232440D49C70156511B49F95D2823F429EB36CDCD11C026236CBFF
41D4E80E24D069E6BC0989114E28A4E64D519F1957F990525B85A4FD24540AD7
1D9D100EE28DAFF7F66860D0038F6DAAC43A0057FED7D5EC27E028E83B0E4C75
8D50552DD84C7ECA54E95EB4454981FD0F073897FB783FACFED58772BDD4978B
C0A27D0FD1B80FF05BE4B5F309D748F2A53ED0299C1DDE7F8CEFA84D08D88C62
EBFFB218D23A0C660E38D79336D47A4C62566C08D7004D09B071CD8AAB617594
F0F8B26E985765D121CA3DDF124F804FC1368BC2778AB577C5BEF53E143E4F78
9CE0127CCE8405DA733CA2474A200F65EF55031CD38EFC48EBD2582F9528E412
DF0177A3862D93DB9BE58DD24FAF966BB77F57B4E1074C234E362A91FBF5D3FF
0733400997B2A129456A6B6CCFE54FBCD6E6C83130A2CF3B1CF3BCF8CEE94B29
CBBE863BDE25B2E470769CB56BFF435FC0ABF78D421998F8DD0DC2ED0F385882
27F7778D16FADD1C9318D860BD87BF9D6A2AF28F53FBA898F6D877139F78C628
0A58F8BD0B6B2DB2943BEFB94955CE9DEAEF0BAA405A0C2BABF0A2EB2C3F904B
D0E9E9307B61A664556C13952D6B15483ACC4016405B0A287AED44065F0596BA
AD00969C92D66E125C0EB1272CD354E43706244A8CF0971215ACEE5691E311F7
4D5D8E1B4A20F1FE41263E3BC6C1F14261F31CFD8519CFF9545877D6D79A48A9
700462FB215AB875FF4244C67E47A2910182DE13CF8447CFF335C364E32E5A86
932CAE0767AECBC8DFD5645313CD05ADA2352A43212B50C0673594882B491B11
F5A6B088C97FF713C6DF5182E14D08DD56B6C89E09FDF1901D8A43B67E620200
B66D77B6AAF302D1375E994E2E05E600E47023AC156DDB039C2E6E9E1449CEF7
9998C6F4DCD83FA0D7275EE9FCF97754D643A8EF8A7F6DA75FE704E26B4CAA7F
027E95F0C225E9C6BF96D598B545E49139F5357499F1442622631D967DD0B8B5
8E8E24D022400EF8F2243C0679345EFD56307165AEDF16E6C88AA3E50918E57C
288783D93CA182B25F69BB2CFABB64E7CC0E29D0433D1F9AECDE47A187E3797F
3A9CCA1B21F6246BA012FCAE85720C7300E1D7C5E3D6161FF626461DE5AC5602
2AE04350D46B4AE6895648A667812B109C7A2A808449F44D04C8F05A2A17DC88
804923A00CE20B3FEED7BD0DDCE24912C89A0255D652B35B7A469AEAEBB48599
844DB3680FD2726E5F8C4DA03A85ECEC28DBB54C017B65D376515AA0D7975BAB
77F013A0E601EF88B9D63C0291AF8BF87CDAC9422147B0D563212768A0D9561B
40E5116B86F40EB540CD5412CFD52D3F1182C98D47CD1410C601C40B29AB5605
E342BD803D0DC48342AA2D163C7B3E55A4FD0226042FFBF4A18B49B70483C41F
0EB3CBDF30787ADABE840BD29870227E64D41231AD088E61815BA0D589518432
DA2255723623D895FC952E62CCC5BAD17B2B18C998160FB9F141E44135C1FDAF
A7C07D006244826B7BD440D8F34690D606409777B7B50F0928C9D818F5F8B9F9
539CC6DDCF3C0721DCAD60E499F79FE0D2B8482F6436150A2596E303870CBD9A
5362AD2B23E207D9ADA7CC349EA80B8EDAC35E1C0A7E8398C6A49CF17C7AA412
BFBDBB6B95C298D35AE36C613ECFC6D45F18FB7FFAF275CFB2A337DF44164C51
6A24BAD59710AF2F9E26B72B1B45554A1B05B70731889292851E864EAFA7EAB8
7C34A0A211DAAB7DD202746FF907CFA830F39EEAAD614EF2470B36B6DE81D5E1
1222801A05B686BC98772CD7C7AB833B83D4A0BA520611DA305812330D6A304D
6219C8AD137EC34FDF41F6EE049BC37D4EA4AE0B2C9F9D2011B5B83876B8DC19
F76132D093520A87455633663995CE61372DDB91047C6B3CBF937C0669221987
A70CB1E44224792D078E9602F1AF100AB715FA4A9D63B5EBE3D7040150184972
2036D41DB65359D41F58C1FED947B9EF7A40EA032F267FEDB6FC7746D687300F
90ECEA17F062BAE25D31D9A905EAF2784E82A6DB8732764AE313FFD59DE61885
9702BC64841BC9B7B76C651A2531095E3ED4F25E002316940BFF12A748FDE6DD
D3B3023C908794666459C853C8D0C05E0D26E81E3E438D82FE1CB5B571D21F6A
B267545DAE84A4B76A65DD7F4C2FC1B898EDBDEB042035125FD4B6287B38091C
662F99B80E850BF7447E411C842A3D61C78F87ECDEC66BB795A8A4C51152DB58
6338B686D37BD0C741CC63A67EF209D983D27814C2340435FD1FBA5F6932475D
88E0740F8195C96311BB8F5839390051B14471214E5000B8F297D0774E40241A
2FB8C7178585FC7A80EB4BB4255C3180B99D68EBF1133D168283351D6BC6E118
D43C83832F227BD254633BBD9028F859D97AE939EFE603DAFD54B8C1638D1920
ED582E646B346E4D93FE54694EEB72F9DEDE325BF0D0C7825123F93EB424BE47
899A349939E0945B381DD521713E79CF0225870E66F8C455A8629D8080DB85CE
6633C687FC28FA4BC7C7EF4A09CA19544514587134C3659C56C59A0D58EA90EB
13B8823BA39ED610AB4182DBA636FA5D68B90E1AFE75DC0FE1D59B63046CE650
447902EEF917E59EE6BAE3C8F55321E3626CA59318C017E0FF354767945557C8
3CFE01B608B578EF9EF864EF4BAA48049AE9041A7B86421445E6E495C6125084
A8733DB33DF01FD60550103E568043D0E4A1F25D25149B2F24EDE39CD72271C4
06BC3B152A668CC6004D041938FC84A195A2ED60781C858F6E6E37B1F32CBFDA
17DD88590311DCF8123E00A6BBC26F39EEE5611AA45710AD37D7151232F1B4AD
16344E1E1A54A3B9692D7508DF9821E38C8E17D9CF526D742E4B82F6AB7B413F
ACBCDA3CBD6099CF4C958EFD2861DAE169CF963F4C33E97C259D5DE3B4D0A48C
C30947C132C9A4869AAA1F0D6E8E16878F50F7F833E80519B72D1133CA91F09A
304FA60B5322283D89BA0FEB1FB283C288175E4814185D6B24DF3F043A2B59F1
4A7ED8305E2C6DD09878B36E5FA1B84B0BEADB59314AE0F2F22AD122D14B6D6C
A60B1F2A6798356790AAAB6EFC1D1F684B53A76824E0BB5EC02D6E94D98F06A6
6F1624617A2359CC821E8C0889CD074DCBBB4C18FB9FAD05CE005EE54B854868
9D0C992D3A09B9EDD6151D1ED96929E7FF2DCCD5E65FE5D0D853964F7B2985F4
90B1AE16FB65F67F8300DA8C0331BB6CA78B0607600C76E52D039918CC61F846
AB515A3FC267C82E69E354CB6912CFC875E95DF937AA6A545001700752AD3C39
D0BC5ABF7574D2ED19DE33C54EFDEDF29BF648524789E68361D67D8AC463A40D
2AA00E1C9F5288A3D9669492B3C8301A7E20BBD0D266770520FE706C1E5E4C47
2AC78E697DF83922EB9FF7055A867CB54CFF70407209CC3E5EECC5B616109EDB
15F51F913902BE373769E6B9DB3E9B74C35D82B6449DC741EF7BC2255E5832A1
E19D49C30EE998A6C31FBB56C6668E137F9AC6F5E80A63621839743E78CC2850
D8271C42FDF8238CF01555A01B277FC53686C88E22692F3CB62A89F00CA36D0B
37F7BA290B7E9E377E689289E798890AC46254D0065F5BA41AFFDE02B462B0C6
9172A7B287221E97ECE274505969B336A5C761E7EDE65F0C6679563F07E9148F
D403DB83AD65D6B3F591AB473AAE1215A28E566DCF5A1FC81D6B9BDF74EF6E32
0AB25C8D7CB207D8E708355C1C943C64A342974F559E6E7E1D6C07A83A5EF321
A8281A2A331FDCB593D04EA9744C5C42A2361CA16F2E2F812B758A9C1711C649
87F435CA0D9FA5DA0634353660FDE9600E3C0F40F8EDDC97C6D58E532C54E0F2
E5C5A13DEA2D839B35D99968475ABD910F92E0A8771F8B7A205499F2F56D8C0C
5A52EAB678938BAB840852C692C8C40E20568264FBD43A324AED065383A3B825
D07A24B8FCDF4B69A48E8FFAE3361ADF04531219C0E8FE516ECF44C196954CA6
58AF8A421B17DA6E3EC8A3402E96023171A5250277AE0937E0C3DDF3F19FDF6D
CFB615F20E83220271657FFE45414C6E3C488D8394972C1086C9A33D07B9C4B8
89F3E30FE67508A66B071CA1C6EA7BC1CCA7866F6E80A031CCC6DA18992CA8AA
2783E843F96956A46F0635653B0B2DF457BFFE8DBF1188151D28AA70D2B82175
22B96396E29C4382CC648B40310965DCFD6A6D09FAB24933ADD34781B7FFBB37
32E514AA54FE5D949EF76873A6719D37DCDB893EC10D2CB30D2C02CEB0144F21
817B57EDD61DBE6E378C54F419FAB7C9EF758B00ABFAA687A5629FFD77565DB8
149A01DAD464B6D59D491A75894FFA03883486DE3219B72543D280D64069EC95
D6B59D2CB817B5FA013C1CE63875D761518F44464C4E18E10CF28F4FA31BFE65
03DC094F76F41FA769C7C664CFBEFB5381872F693579F6553575C52C641A2487
946200F3DF8CFE5143E512F8E9BFFC20FC3B0E77403C5DCEF540D40457EEBB0B
78D8D60A180F403541921397D34C6982CD703346A4D559F4FA25F839110CA2D5
AE2A2437DEE8A2221462479F2EF50B3A2E91BC621BEE0D0A877F76A6250B4D6D
4D6534D42E40FD004F325ADF1F1D6A112E7674ACDF86579FE6E1A782BE7A11B6
4CA28661068CA246719487BF8F4754E7E3E852BE901645582A7D2707F5F04ED6
8C27DD8E6725C661DF1282BA2644E1BD70C1E35DAD2C7386C1379CFAA4341684
64FB37E8F702A0B788D591B5F8D8E9270F84C3A17879673A98260B18F601ED9F
6241BFC268474EA537FE79C271A2C17B65B7B83A70AA730E270A6065F8F487BE
E65F053935C4A3E1DBD77B1022CD9EC293EC83191467EDA173A2ECF842CED874
A9A6E65615E8F2F5A518F7E33F6C9376AD252D330357056F3745582FC05DF649
CAF72395712B5F85A86A1DEAE1316DCBEBE9DF3E539817CB0472CB805AA9AC6B
B45FF1BC2B9576132EA53A7AAE17395A3B180AF4404A212F1CBA96FBF72CBD3C
EBD6CE8130F2C84EA4714A8CE6E0162331AA9B2ADC007B6A166E717D41646D83
D40550F40A67AA2AB0BCB734AFF841978E38D6C7498D484E22408BA5D2BDB31A
8646DEB041F7006889DC9024509183C63092B8839265C539050BCFB9D5812277
90409178AE628A8A4EA1D334992E49D7016CC28AACA1C4677C83FAA0609C95FF
30CEB3DD66C24C534900BB636207F5118ED71D4E4DC06C800A606A6E6DC57E06
4B720D7A590105FEB6F0C85447806EEC49A6E2C413ECBB9A046AFF04F1BBABBC
AAFD8191F6B8223626B77355D1BC643C39C6310DA685ED5A075BFE5BF75C6F90
93F344BC424AFAAAEA7CB081E7574A6C85155504FAB47609EF1E5970E15F03DE
B0F43558CDB8ABDC3432624A248CA1F54241ED7701B4AFF41D447B4D27FCFA75
445DB262BC4349AE91E77283AD6F96CAD714D4BB62AAC8A7A6688008EB79C448
DE8D0A6A70121B4D41507BE2BACDD2C33511AD8AE5C3E7170962E5FE37337C7C
F7E58E627CDC96E99B7AE5A0DFF2CDFFF4C330422EA6C04A4473C1618DF34060
043017B3ED98E75CCF9408254D3E3089F5BC891653DA6DBF48C4A9C609BC4CF0
9EE8C6E41197EA8B9849B8B39A244DF0DB86666F4B7EA87055C4AE8967A398E1
5E461C37C3A3F2189D9BE6A61627B822877C4ED6D5C8B30F95BDEC13EAE67D7A
C8C5A90D47F7DA125579AC46C53B5965CD3BE30570E6B252F055CFE156D33BF2
D184B55AC1CB0172BCA0F8DB4377CD168B22F73ABB8ACAC08C124C2C8F4A1B03
210A8F189F894A6E1140FBC3800C3AB16FA4BE1AE5D4C34139973BA00CB10996
9812C9020D56E982500EC026511BF3BF9328F039EA8AF78C56F77600F8C725AF
EDFEC1EA2FB83EAFADE081959D7B642C677B94D3EA89E906ACBC70DD85234374
9242714C61BA750574F346A8D1B0056A4F3057FB802148C943278CFC4D30DAFF
BBE1AF1E95D49F60225A5A5F9BD92EA316025795683F27DFFDDA2A52AA43F8B5
20D6DD755737BA539F4848CC6F2E1CCF0E9F61284DD05248F264E9CCB69878B6
2F1DD5F63C4253C6934CDC7E0301270608CABB72B73A87B8C71266553A991C7C
F019BA8E4EB69B4ADCAC14129D09BAD69D46B5B00567877BFA0B98AC8EC134DA
7DE2E7E22712233F9E87533E149B874FD118F0483AC7BB931494D07E5F806634
01C62AFDB7DA93149DA75BB9DEA5DAEC1FF5CB70E6FCD8EDDCB9320664BDDEFB
FC941F2C2A48DE0506D3A8CC1A09D26DBEFEB565D32493F40B597FB63A3FD4CB
63D85BBB12BC05DE8C4E9ECEBA2EC06F3F03FF65108A892671B11DD33CC102F7
0F1D25F46670D7F32A2E91800703C134B3C72D5AD012584B2847248D320852FD
5C5DD32589AD2AD073CE41E565D115026244CF27418A23AA23E5DF04DA0EDB94
63F082128B3C91D6970E78C2265000F53914F1BB6BF653DCD4039DB729F3ADAD
09EA3A066BB96035BFE91DEAC542888C587ABB5E84E275565EAB194767E00C46
3AEBE2BA17CA23B9E19F6671F34CC1A20C1DF7794D74701E158154D100527795
76E9C349D20D4CB827FCDE7FBEED1A5D999CF279BF9451CBBBC0218468AAEF39
3E9F2A3B7A3E42525D21F714BC19E3E969993A8EC86C95BFC3E9B0FAE45A6D44
79CA0965A7A918BFCBA0E1F37007CF7566A0F166BD693295286B0C5DB5080C8F
E72F1C35C614E8EF883AF97D36744F79A6C877529E79E1991B948887261333F5
C4853D1669C8B79F15285EF1F9BCE36809A8E21599E7945E6D9BBB8EBA6FC48D
F282A0E247A03468421905A65FE2CD4FE6549CCC664500525EB145E60EB20BC9
0EFF93FA563F97609683FE7CA89B60B29C99F7383172A08B60EA88791C93AD21
1DDDB1910883BA36F9633DEAE9CB386A900C1CFD1FC532882B2163064DA59C84
58022C86E54E370F2F7B919D4C7EB7815565335CC40D3869B7E891089B21D067
DDF9F86EF192F5D043E98867137866C865F4E8A0F9E54476B4C1F4FE76335267
42107AB6DE72748BB9CD7D8E086F42E89946254DDF4732B5003F5D1561DF45C3
1064B0D8428A78C899C531EFC60865C359B9DCB171304BE3E30E1D7D90E6A440
3865EBB1AF794A1DC026A07D7611848FD0A4607BD044B9FB57107BB8FF0113FD
8109C996DECB377148ACE4BC2D3D657653EF7E3C9DA3019F9066FD5AF41A8DB9
1E69DECE992750337419FD7B9D80DC2074E440F4C172C9373CC8A7F947B5895E
3B48C80031DF16BCF3DF9472C51FAD3633051902E0CE521536972A6E87B49F9B
ED16FD84877FEA01891B5629211C406C2EF20AD09E2C4CC14147E427F2B74AB4
A220C536296249E19814B3E6F6DDFD318AA820D99732F5AB8111BA12D6ED54BB
A43B13673BFC17C33D8F30B0432E92BFBA593CE341725972F4E38FA4D9C8D430
5C56B6562A1B266C2F6878263A74ED15611FE6765657EC89AC01CE58A163E2E0
753A66DCE85044DD30690C9DFE7E94712ADE111943B874CFBF68DC08E5964C2F
2CA1A1E2DD9532036DC29DD6EBE1F5590A1A07C4B84DBCAAE4DAEBA5DDC9BD10
0725793C642CBE80A48A2B10D0368B6D55735928F0BDFF46F1AB2C3BD4CAA2E7
7CF8106836E03BB6DE888AE4DEB4A47C0F93C0BCF86AAEBC2707848BC89022BD
9E939FC9E3F3C8E78C6A13CD716D916F9315986DF2743645788161E8874E54DE
360293F9FE67008E94F95B5BF2A16188D24261B320A84C1430E0CCD1D519F155
019150AC9422E3ECCD12E57F97CE085C84C59384AAD5AE3058A6A578FFE769BD
E940DC778CB65031DD65D6612941A4B2E67899BFA6B9A40A4942EF2274FDB0EC
076A1EA45B1E4B5AB7B9C890F9D6568BC43C282836EE37A506D567B78FC23A6D
F3D0E77D9071466AD5A8F997152ECDA618ACADFADB86B3ABA612704474321F07
C98B884F57E93FBA3A3965F71CE010EBA01F6293B2E4B8E94D2D8BE9AB3C8884
0F5C12D91FE68158CA53371C78ADF1FC17D8E397EE04C0C5D000D37BC6980AD3
441BA85588B0F934C832987A61FC05DFEED6008DD9DEBC54EFD5548C48E80864
900B68241A81DAEA5CBF522B744E48AFDD2567108B0ABA1635BF1A520B1B67BB
5D6D67F5284C7C00367148FA5F2AF2EDD421509399B291E90232B8D5109E9B82
D49241B0C0DB940899F92BF069E51DC37AC9C62DC746F10CA426C02123015887
26973BDA75735F681FD72A84710F0225DA13A470781A325F37A141F8A30192E6
7A8EE15EB35398B1DB515AE307891C8CF9FAB8BD3B084EFAF64BA95B4BE4CCBA
2606DBE4E6D7FBC8BF450D19267E31D8512B18138F314122AF2335D915CFC941
17FFEFBC3A0040AE3C2035C102925FB4EC9A214C8BEA61D5FF5611A9E4259A7D
68BAF10B97DC6AE3C07E38DD0A435B694C2B6BD949559B43393CF1F6014DD80E
E004BEFB4BFA8E2E4B642FF7276F3F852B5091D00B75B6D90E171B1849E91AC1
B76DA757A660B9DC5E665EDC06AC7DCAC9D9F83063639C1971FB232FCBE3C720
2C9606B29CA07B7C1B0C962F06DBF4356F4CB48CF6B690274188DCE72138258F
E2EADF512B830B842729FDB9E2873DC545967F31190EEA49577B2E68B3BB5D2E
E89E1490EC01CE4894CA0D6474B221EEF13385DF7E6A9A94D66F842E3727C158
E3B60B2B48F1EC9818FC830BF10B38092D309C213D70F8D476728119EC377DCB
CA30CBE175FA4C3B42149CCA7713C567DBBE13F9DC35C339CC467E4D22C358B7
3196896763762F823B69309D48EECF0C69036E9495F58344316BAFB51F86F8A8
217BDC85C22B045DC62334EB6FD4A28CD0DC56E9BC4B1C0AFC4AC8654C33769D
65985E5AAD72FA5E356AD6809290DF2B7694F0AA3E385D1EC21D1A9253976275
2C73293FE05B5383C49AD96E150EEF57976CBE473AE51BDCA467633981828D1B
AAF6475E0F7B50A348BD2987A45AE742E8CB5CF40E8069D732A9531E04342350
0065E285536FC1BEA5D5FABFF32324812A3F3907489452E2F4693C741F137C6D
E1A7DC7C5761CCC72979DE441750DBF4EEAFBAB0550FD7BCCF130D699B8E17B8
ECF398DF335F66E7F073A95520E488C82C6BAAE2FA86B3B7D3A09203AE23CAF3
5F1B62E7C08FE64DBF2CBB674BEBA51267F003A97491E07D57C671D7605F9D20
5962BE518F06A518770F2E25DB51F220ECCC24492A6F559EDAF5779D2B205C39
C40D9E11850737726CFF64F6A777DC207E7FAC2596297C74DD114251691E4207
D5936E75D5EE119A6569A467C0F65D89FC7AEFB909D80E2A4707E3B0115108AC
AB6A001374FE99A300E041D441AEBB842BF5FD6C097D80179D2EFD2936C1B63E
D35DA33EA49B2859775D4D411FE04B82E49C7F9494FDFD167C8EE51ADE0FD2A1
13DD25655CB6E7C5A9AB11C737AD33D22F4032E1A546661BE57A821D802704BF
B6A13FB6FA40C68B8DC6145096B54FF6E5BDA1A741023CFBEFAA9553A96331BF
E725DD4D7F5438D7B87EFBA5455638C8F85A0B741C24571E74ABF75AA9FAB075
7EC0E9DB507F1DC32DA7C5CB636C5E19C9051337E7E7EE38407F65E8821D464B
CC6ADDE9F487DC9322CEC536921C36397A2A2D486B56A96331BFE725DD4D7F54
38D7B87EFBA5455130B3C636161A6A36128FE1D84238093D36696B5D06E8C9AB
4BEE437A3BEE988553DB1727B1517B74615BFF5B59CBB58EE2E9E2BC6DD75113
9B2F24AC5C1155FA56D641701E873CEA03C02CB58BC77F4C05B07E6D9B4EB5EC
E7628A39573081E9B944C0D4B5C158C668C560C4F76F2DAC3F810165738C9290
00F8C0C3370EFBB304BAC7D7F891999CE6AEF7E9165BBE969FD5273BDB95FE97
ABA2FBC724621D68F593B35D60D396E46AC96F5101EEE86C7407B252217A322D
EBAA660AA76761B22CE4DF82F0CEC84F7DBBD1C8A82941A3BEF0FA85C155E31A
13CA36DE0689849CE875B37ADBA95DD1E40B04E16AE0D0AC17A9A15E0D698D57
439D71B91328BDC9D872F9879644D6D06B280E4133226C5E093B735437323525
054A3840BC18D10AEBD544059FDFA4311C72972E05FD480DB11F311CE63E0D94
A75D85AE1BEA97194F14F93E5FA52AC2C5166693821F7D563C43EC590F9E9D3C
9E66FBA19417F8DCE55956FA21D52B1109CD02A66A36E0EE064E3D180A2E9551
358D95C01F308DD08EB6CD3ADF46393E057EA72C5A2A1DD613C7C6BCC3FA72DC
1B328787E8B6349001835F9FA687F8AB0735D57A6B19CA28C4F60DB918C5E11E
1DFFADE7B1870463A1BD4810292783D4B6B449E0181D69369AFEA1871E757C43
0D07C67621BFCE390F10FCB650D68DEA6BB9603DA3B1F3271B5345C44E1CC017
E96413271D137379FECD9831BE0D734DDFD447FB628B3BBCC032FD49D5AB137C
172F3A614F5EB021EB15B7A26CE0AE7631B5E076CFC2E9C5A76273129D408729
28802611B4AF3A452777A6D776291AC5A5C68E3509FF9C751032C2D41AB7F3FA
FBC3E31FCC9E7E83A133458A5456358B9B0228CABDC0471ED87CBE80E8F0C181
9320B766793F249827D7B0C795CCF24C1A4DCD5737A34C787086EFB76DD810BA
D34B261C3AED3F2EFF8D5513665633A36D21612CD0CB0C17E4D0C8675669A84A
66320FAFA3BB454E7250D2DC0B0A726977332CCC6A18ECC3C2EA2C6CA9D786F6
FC61B7C9EE6274BB804595E61DBC8A3D496C55FD63A4DFA95B6C03B067231776
925E69DF886F18E7DA657235D3C9D463B2A69DBBBAA52E5D9994541D994D8968
67307D401620C503DEA5D79632DA3A73F8B8AA111E399EABAA6C313F168D1CD6
837363C40757A05DCA0F6B1978FDC55115DCC6AB467D0D2DFF168325FD6B4392
AAF11143D961CD15622C954DF4A195980113ACAB1D2ABA1CC02B4D489FAC50C4
04CA14AE2F0747133748DEFAC2494E24654B5E115722E3B5982BE1733A38A24F
ABBDF23271CE408C335B8BBA0E958FC43031F135200C4609C02BF71E56683C72
764DB446CD50A71389E56B379116A14AF3F8CC4DEBCE21F0FE70EC9798200D72
175BCC849740264EC168C711BE52591E70531636F2B32D9117BE6A4D7BDC9E00
A5834CA315127B952FBC85DCD6A6C892B97BB8CBCA87983B8E6B787BEAB5212C
C7E7E4E0717284B8EC38360FC27F501CC9DB9EF35203C187BABDA640218AC245
9FE38EC682F4A2D600661D619087DD1866EB83B1C169406A80FD576BAAB1E8DC
37882108AE2A6883FB82BB954BDDB7FF0678F20A7A24CE43065942B387C90993
932C9E0DC8D28DFDA91356270338192D73CDE4C0AFC799892DA983524B73057D
82CC6BAB800D7BF42718882346F1B4A2A76066326C66CE46D16116D5EAE5A882
D4BBA1DFD8A1373B617E06110DE3B8B0AC99645B05468A28C650E3F6C38E05B3
A8A5AF979E544F00DD5551A98F338822A9AFF3BC437B2273D5C097FE972352DE
294B83410177EC6E0EBF2F3DDED822A654C068E4B562A11BC3669FE1D4646DDD
116B5D08E759E6B1C2B94B528CC535EC1655EAE3D9A9FA3B7CAF9A8AF47F1BAB
2B9AEEA816B0DA46893208EC679B9D3C2B1B31FE2B230F9A29AB3346E184A047
01ABF942640133FE0175E4EE205D1A3E3C5F26E165D8E117FB75434FD3280C18
77D43E38DE3616B96E5B22855682E39690B59FD59EA44733ECDFE98943361AFF
1DEF5402DE67AC0ECA8C3251BFA1507A9AE55A110CC62E48C4EE9620DDB62D65
0763F5EF59E908C9F006ED4927AA713774A8D875469E98F4877654E89F8DF463
0970290060CB8A9B5B7B8D3A9F8AE53191AFE953A35B3372C6798B080E05321C
28E62E245C7F87E64BAA1E2D42C893A3086AC7395806E589E664D74EB29FF35B
C50136DAD5D5771702C33F4E5318445D2791793D9D05E518A48D07852E2B840C
BB08F461991A7BAE43D53E55BB557C491E30D11813801BFDFD706010EC94E198
76CDE6080192581F94F9B8A68E8300DD81899A75F58489076969F99A86F0EE7B
57EA1DA39ADD236A97FDFD3DAC5A6D553DACF0EE9BBAE2C2034613631837410E
4E7472B6C0E6BEB99E4432E703A6822EBBB7BC0736F01F8F62645AECBEBFE3F2
94E01915AB03C768CDF4835B961DF1C0D7FA6E43AB2426360A0B7C20A9A10550
5B863DDA39F2E97C0232BCB65C2ED729ABE047FB4547FDCA93A1302AF048978B
DF715A0647DB52992DE617DE4BC94E8320C7EC6B15130D842695CE800AC28000
7604B8F6432B57E55D5001B8E3306F74A088A1B7EAC06AAE955F8A304DC16EF1
A0236186C44EF26EFC7F16D94F29668DD97D27867B2ED11599F8703CBC338DEA
90CCD4EF93EFBCC52E5D37BC2F35648BAF1F1DFEC9937F2FC1045A830243156A
C4B03DA5A7EB2CFAC9DF6D0B9829C36C936559914ADF426FF193765CC7C451D1
8580550ECCB910D55B7A327DF7FC87C7842419D0D5E959FA0B553B3535E17C88
87D66BD76DF66B16B197D515100F93AFF4095C0C3ACDEFD28943479787BD1250
D8FE49510D0F837D691D2638935F2489E87EBB5D3F92FED3EBFB980E7CEDD246
8472481CDF0C045912D9A1B80DE8CDC18198E7BBDB8172FF911C10C57DE31303
011DABF41CFDD0ED59380E3349FD16CD8A7204078742E146CA8985E1FE9D36FA
A9C9E992AC72D108AEC784AFFFCC65011B2F524942E31CE8702B9F902524C4BC
96A183F65D819BB34E996FBA53B9471338F012EBC8F072234DFD5504756D309B
D3D810926D8B52570CF3714F0D564B394B717E36AA2A7A434365088A2122BAB8
CC35A44930D8636B2F07B28A8BAED0E5D7B310F54F82A1A3D214AE275931ACE6
CCE260310D411708A53D25DCBEDF56ABCD07011C011EA6DFDFE117EBAED663B2
2F04F5A213F6633C69F01D8DA27B3CC74903532285B06FEB7A45D96588BD7226
EEF6C10AAC0C2649DAF89C84C9A546CA5F71F912D3A7B9632A0F3D8CF5362165
6272B2D64975DC69CC956BEEFB538BE067122ADACD5B0306CCC6E9373DD8E7F1
23D91A1F8395F56B969C8038FDCF0CD72B4F32220F1B21972CE96B85A3512D79
5B005EBB0A156915CE02A53172B7D2FF21D3735998FB767CF32EB6BCD19DBBE5
372C3E69E0EA8C22F6D62D48AAC5BF951D56CDCDD7AFEE949A8C93950B2D91A2
27598A2B32041AABBFA97C03A447F056903EDC711D05B6EACF042F38D9D36055
F1CEEB7DB985EDFCD485C9A1438CE54D5258A8BD60E5729A48B8C3E760F745CB
C6C6630EDC58004134D63CF46DACBBB720C74AF7A4B1170E26B6401ACB51B108
F117068D81D522128043D34A694FC67C6D401A3BB18E046843AAFA01EF08AC34
D8F34EBA9B144DD2693A2B1A655E9CD6C5EE5714245B951D51B61560B4EE0CF0
617640AE8EA99AB618A1F014F4E115463FB71C01B2C65AC5DDBDF92A2E0F4257
1CD51145D193695467D217777DBC5ABF782AA8E29055FB30852EC6210B4F138E
11A9F7DB2216CF619AA1EF1065CC45368072DA673F7BB8FD25C4280E02A528B3
88FB28E81F3C800E8063E468CDD95DAA4324F87F49D65D9AD235F5AEC7BFB1B3
60170590305569CB9FA60305DE3341218259AADB936D479ECB2EACD0E8B1B40F
946159FEAD878DCD1076B37C38B296AB2AB3048E6CB84D58140C2CDB1F46A8A8
BA2C0A958D3DB889C98FC44AC55C1EF9B0F0215F6495854188771CEB08B9D150
92F99E459B2985ECEFF487828B995818043B72DD0CD1D6ECC9CD08F15DEFD3D4
10330FA1D06E32DB6C3B1D8C36ED3C2D08382EF8F084198CFC3E13C2BF44F28E
9A6EBCC448FDC45A9ADC0E51C62334EB6FD4A28CD0DC56E9BC4B1C08002EFBFE
65D8E117FB75434FD3280C1877D74B6683C605038A8FA0AEE394CE83436E9B3C
CD6127D480F7B35F92ED9E284CCD6B344238B60FA14734CB2AE1F68523081643
DC29ED442E2789B1B04A5D00A1ADF89336567AD43DCCB1BD092C8DC53490864D
DC9A3B24E4E4CBF864F891BFD566EF7A1B0D2FF79919F839FB4BAE97B99E4154
73B4BEB3114F7C6C1C8CA4D81E54FC32E5CF38987F79AED993627B44BD958F2A
765A393F1789ED8D4A043F44D1AF31CA2D3D8A7101A1D5D3D58443074276C484
09A033A435889980301BCEF0E65D00BA874DF630B76F68F392D59BC89AFE8DF8
95E953AA8723F594259D7843CCC287AC33AFD69056FACAF8D68C7D1C5FD53C0B
24133A333F75C66607A9BB57595F59F8D26E57B5027A7E8A840B416CB7E5D475
B43F9EAC25A3126EF3F018CEDFFF50620AB8D32CECD2A79C5E74F8ABD7F350D6
C5B689FDE3A7D35816E5862DAA895A6FC57DEF77B77DCBA2E3F04F12DA14ACAE
D323DEAD0675E89A939C1AF54D8151BC3A14392CA76C3229AB971AFFC71ACA5E
9554FAE66FF940FBF5B43CD73ACC165EF655F10F0EA1C864821371808E89DA94
9460EB4937C4D60BB88BAEA87DF4E9DBCFFDB300394D092286DE33BA91E8B6B9
B0696721777BDE4C8BF4BEF8824A9E87AE8604269E39D4C162357C5F37DD5479
BDD8DF8A1F2485513B8155EDCC8DC95D7951FE1F9F5C5421824BA27F8B5E3A1F
E130BED7B055BCB3C18C7F811794A2FBF517AA8BF0767023B7B525690924A3B0
41A2C252B99349FD9873A47AA0B295FE4DF6DE33A1F1F48544B3932BA95E94B7
481F51EC71AD8EDFAECADA370E27D5D184599FAFFF44B1EF4115B84E273B2F49
0C5A72C431CECA863676D774F03E9490721D8A60200D67337D118B2F02C2EF5D
93B97F0C6B47EE5E267B6547ECD8D5F14770363534DED170222A0183E05B9A11
E5BCF30C35ECD884B0E805918F72C4DD8F8BF2A1DE32188231934D9F05C47A07
874770C51F25776E70A8B8ABFAB1F9F0990C81506F5F4394EEE19E451D5EB6D4
46A6B76810132D52971E67151DE180BF1BC303199FA1CB7DCE2C1F9514DC0421
7B339EE561D9911D81FC5DAA47E1E40B25C2DB0D4BBADC558B5FA1707C926CCF
6D0B90FB0B62E39CE3B2D276B77715A346E6118ED2854140BA885893DE77E4E7
A090086FFA02B2BCF335D0EB1B484B205CF7E3AEE9F1939078FBD6806704C53C
C708D870BDBCA992333AA6403A869059F71DEAC813B6213431388F323B3F298D
97D90D5529838B2E487779AD25AC6BEBBA5D7005B1D0A4A3C6AB8F699EC55C17
4C1FCE545DC9D365A1200995BEFFE72522C068B1194C81FF7BED3FDB69F1726C
D014E72401B04417AC3D115BF5D360DA57CC188E95486A7CCB9850872C189839
FECD19A05F90CBC4AB8750A3FD51B27A43F9708012B0DB3DA0E97BCD15F1598D
3D1A06F71E8828CC6A2D548F83F87F065D590D31E92E4EDEB21FA111F2025408
32F823BD7D7682B6ADF9E333E06260421BB0B60996FAA3E9DDB88585FB5AF567
699981D793129F3B5E2EA0EC0E0FB4AC4C87578B95322FA8DFC3D5D7B92273B2
45BD117C8F3443F2A2085F0C5833F883D33DA4709D16AE4129DFF92C768CF03A
F5F7D04B2B0222AF4AEBF1DA9DA219F921475E85C8FBD77B6BE8031D44782886
5D20199AFB2E3BE1F2E90289E11E7C76B20D1D01447A0382992B260961E8DC24
F153FAA9B8B6757B0018ED6F89FFBBF5DC7AB37460482E65DB26361DFD60F696
29AB3F932E1550BE88DF31CD3D39925F20780F9696691FBA5E819A3D1FEF6895
F8648E959A9E013A3338096081F659D8FA257E048B8429C81136ADB77BCC3ED4
730706816F614553C35FEAEF9618DE255150D92DE1244EEB8D4E4A81C0354DC7
210CDD249CB500E6CC2E31C3FD851795E0605C562C19229D24B9B82F9EBD706B
470FC25B71DE69B515C444E369976F508AB9DA5DA0FDFDA596EDFCEFBC771D83
14E942FCB48A231E65E42BAFAD5B6D168699BBEBC08CFF8C18444C30DA3F90A8
BD5B8E9F6F2C8CE9DD4B425A43B733F0F52C13E400661A6D4D2466B8636BAA70
39B85DA2344816F2E7BFA88456E9D2E242511C0E4EAC5788ECF7B0221EB84C27
A348B3F979F53FFAAF43DCAE5A117C43D1F0581C2B020EEF3969ECF93BF375CA
9A1D45890479E8A367C09FF9DC75DFF6E01A6AB79E735B9765730CB7B318365F
760768A44330A69F6FAE9C89FE5EEA228EFBD37ED5A506070EE20B347E764D0D
0097603F3286C7CA38187788563E8528FD556DD8149CE83274681EA93211CB64
5B6B5C6885E6698D8C7E7E98D6FB1B0B852A1E144D96552D5D0220A5525354E4
629D3226DE746E909B5DA3788CF28BA532DFD5E63007529C4C5C333E31084713
2C987D9D57CF861B0103E6289607CAA561F065DDF954D7D5652722760D41CD96
FFF1975C83D1936043ED0B398742C2CA236168C6E0A3FE832CA3351CF4457B12
08F9B8CB00DE389C72B69CE4E480D402E1C3A143819C32477609B3B82D5AC03F
B18CE0F171DD0548BC8EBF1B0D180CDA9847DB019CB75CE29219DFAFA7DBA12D
1E33E925DDA4BB14F97C0072F9CED52DADA5F0C91D3DF130707EBD54B13EC7B7
4A23D2AB97C77A4B7FC702470ED6FE045E1DDC26B6EBF285604C32AA7DD99E94
6DF3670176C986DEE32D9709C664B00FD9CAC91DB207D37172E0E69CFBDDB606
77A31DC863378F92ED175C0CFD3A2FA2701BEE9948CB4BBF8677FFFE3629791C
8350A1E368DBF8685435FE8DC4A3F83A098D0977F475D102046B1DF1A3F48642
45C0C9D3462BE3DD0958327384F4B12BB27381F263D9D4C7CDA7DE387E8702B6
06DAE9B6CAAADBCE4C18E5235EF1BA8943BA946F0C0A1A140FFE617457FA52EC
E03A13B4383A08A6A5B4E8B572FDD9C23E9AEAB83EC3FBA4E524FFB39B3B141C
FC90A46AD8CA06392ED02AFBF0BD0770089B9C5FF9AE1CD2160C2117018895CC
A9DD44D7917BA6F2A93752971E2210DE76C3F964D6E19D5CA5C07B510C7220BA
D4788EEC7DC7EDA67D3B838271F3A8CB3A438CDED7695BCF457A0512FD5B738A
C032F78F1D62EEEE8CB42923616F429A8BA88AC0598A1316CE17C76DC4D5C9C0
800C43169226038D7C60897A065E5C8804F7A760D2B7010A42A88A233297ABE8
EF6DB23939C4EDB828A33CB71E654ADB951F5B212EA11BDE6C6822BF65C6AA19
597B0D21A56EA12B8CD933D85A4381AA4E712D7966393D959CF33ECF780F0915
C4761EDEB845B1F5746AED30D84201667D2C02BB28DA96FE4294EC4675404F5D
A776ABC6FB9B2E914F484E8871FD798CC214FE05B024172C500B283E87E7956E
6A0AD9D0405BBA40E2D3D2A04D2B8A2403E9D91C0BC6EF6CFAC527145D00727A
7756D70D9748E642C8E24CA3BEFD01177998109EE021984957D06748276A0CE4
BA2BF1E030F8CD1A3F9F01D78C998E78419D9E403B336CCE56A4319B0E27D01A
086D59B02FB812D4307A3D277BCCCEBF8811A3465A5B2A7DA12E3B845ACD7A8B
D5B3D04FB5262AAF6504558812FCDEDEE0C386C030BB4FD3761E579F029CAB5A
62E677AE810BB359E6D736B79F2F7B043DA15564AF9F7A92A9E5E8EE48D486E7
1C29BBA9EE345CEAC637B69C5951F6D02FA00B6C5A8B2EB77F21B06CE8E06F30
AFD07CD234BED7CCAC06BBCAEEABAD4F70F3C6126D6E51B06AE13C5B3725214F
9FA70E962515ACC3FC20E8E61C5F7147260DA3030D1A269BF5B859682162E65F
7465EA91D5FE27E4540CD2FC21A0B1205CA900C53334BE1182DC81E5A2D07367
01ECD9EFA5678ED4E105200739D5A1A7A24E3D84285FFB5B82B5738D1B737E91
79C5541024E3A728C8C43A636595BC837CEC9B210A874E422AE09F56DBEE0384
70592CCFE2DC78AA0FA9AD4BE96F9E0653BFB8091F0602095E3C0C059A888907
30CEC76931E41D14F8B62C5480723585DC494722ED3BE70A410AE17FB5B7E4F4
0296F36FB4654D33CEA040EE45A207B6296BC90C8E88B9C821800F00EA62161A
5AB6EC9186D35803B981A20FDEB05543EB9CF3B3E6E0FFF7A0F02595A7C1CC07
723307AE7DCBAAD4E9B2F0D32A48F381F5FF2E49B84542DC63EC6C1D1E14C2F3
D115E228FCA39E8B1D9CB2786EDF4D989C8551051F4E31A007E481C036A79EED
A5D03CF2710F712B85F9C37F723B8354ECBEF932830051D6648E86282404E71E
3CB0BD6343A102396F77B81D30CF3A334FF849F9BBA2C2A9E40811915D28F9DF
FBF38D1B79CFED9D84548D35D91C59273618E3F6345BBB4521DACEB188ECE470
9188625472DF08BDA50D04BC2B46FABAFD5B193575E2061F613966DEDE390CD3
28C0BD8BF7189A1339213DF3C2DAA2D9715A21B6FC536B9F91D8A6BEFDB51384
9762D9138BCAE56EC9C98B1ADF707F83516B6A48692A62C556912B68F5D5005D
BCE183D5F6E6B208E0ED3FB2D076AEB9F842C5B2303BF84C9821E07CDDB9F55A
B496C35FB79FC62F1E6E18F6BFFA3E020F270D2176193F7988626B87065733D2
A408B0E1369DF01909565FE2C6123AA42E903170332D3D4031E63DB8A9D9CCE4
17C6366C854C070D1910A7EB88EC776DE67959C803147D0203CAE857E735CBCA
FF8F4D468FC87E0852B9FA9685BF8C254A5C21300C1127CF1C9B8B1A940FF8A4
0A983446D70760904BD45095819F302435B543CA3F005DCCA4A8434DA21501C4
C63F61FB3A3BC367A70886FBFAD9CEC90799B79155D49D43C9170472EDA4C0CB
EBFCD6B5E6E3ECC3F9FE081F8025C040DB047138B04D1C2D85E9705A477C31F6
22547FE76BC834C03A1164A11F73A5F85291C0176E1435B27B9383D06A02E485
29FFC0D0D52A221BE79926D3DF211B742076244E78B0C16E8D693EB38FFBCCAB
432D3A20C8F8E4EFBE05DEE4131635683CC2A75ACDE78BD6AF0F02C3F1018081
1989529C2DB1FD9BB63889C020389F169D214D1CD0B6E407430BA5E99315DAE5
649200D2844A57A78537A69A4334B417CFC09763624BE5638E7B76270562262D
CFC3A2E485BE89E97E47F4F31B6A5303A95DD65707C6557080A564EEF5E914CF
4B7117506627FF660EBC351D795F1359A564E09CD1564B38EC710E9D4674E6CE
15106FBE9D01155B63A79970A958E3B02DFECE1E04711B8D83EB23CA25BF26C3
D5575A3C8048A32EFA5482C3B10D7B687EDAE1017382D3D20D27387BD4541DBE
041E62D313E2B6EC77E34A8E96F793E986341B3B68FA5ADFF7C8811E8BE2CA06
F1E47A7FC512AB466C8F5CC222CA5E1E7179DA18FAA91DAFB4EDB2504AC208B1
96ED9F77042DB315271CDD6BA89D2A3FEE7F48D1E0DFA0B93108A8036FAA0D87
9E722F2E8B1C739C73DD55C6BE8F507676EAB78A992B589DB47172CCB9C3DF31
7A38AFEFF1AA53F21FD77EACD95070878847D64619353553BE6547112F22673E
CCC85608D24C8F537DA1C5BDF5D5882EB3F5F9F28D6262827C157F2C2EFEE2C0
8C87BA7F27308A1547E6ECB3289000ADB117D5B9163757A10A81D3ACA986B6A8
6F3DD5A2C60CCE89B89E4A74733453DA44F6797C8584999698DFC3E5F45D9EDE
F2300EE58D9D0F262D618F7887FCEA80D0359EC179E6B57080093F9AE2597C77
0A1A4A75556A64476B351DA9B804EFCE06EED7B26276E5949160A65AF19478B1
CE6C8DB99F22D268A7D897B67D83FBF2BFF9CDAE1EADC047473CEAC3D91D7CA8
F4E79E8B1D97C90FC0CBD7835B709F9B0CAF71126CE8962E4B09E13EDB57547D
6EB7DB40703CD655388892B8067907A893D822AB87C324C8EA6FC26C8050D3D8
833421C0524ADE3C5DBD7D315D4203EB42C43ED0D48B5B43D201E7761C3AD609
C032FE1B0B5B6B31984C60A8184D166FE17020AA2DD41C114A386235230D7EB0
3E72CBAE49A79876FD5E86EC7ADDA5423C7D5A40CA8E8C4BB1CBA2188A873A0B
6490D6B6D249E6BDC2FD869D4A88B9D5E7AD79E473EB6E2E0BE24175D9A3CB5E
42E52A6CB1447DA20CDF7F72E03905C37C358B770B875F046CF9F81FD8C98102
AF67D239884C57095FF0480A8684264C8EEB3E4F4143B18AC23F01006640ED22
F4BB7E1062B102FA772BCAFA27CC2572DBB5C870D83433101D24E396C1160F77
252122C5C1D9FEB333CA83270B0FF4A41D84269A0FACBF514DCD65AEDFBAADDE
8A6005C07366B3178AB0DE61E27F0E855E433E5D4ACE5F4E436811E412EB5A0B
00836298EC911497D62011FFD7F27704AC891B69F6862E6E82E013F306F4AFC1
3E6F7ABE2F426B5C9F5EAAFC5103B7EF6E9B9AB658C5A77CFF7505A4D9DFBFF5
6FAB5F89B6A78C65F73CD41A4F57409695418771CFC888095C32AEA2BD07D85A
679AA052F24D15CFFC70BAEEB093C5292CF827E57ED7129E1F438ED19988B239
27407B3DCA558C646E06FAE9A094C8C96CAEC363075EE022B8F429E53AB6A5B6
E24D27E4E149E8A1F0D6A7E05114CDD86C5ECEDE032D36C19A23A5D90FD33819
D9489D6C6C6D397B4D1C7F0D9C6D13C5A19790CD7C7DA475898D3A4B9601F340
A5F9217AEE43F23374868A8B970E5CA974254C475A9D0D2830C1DB1376EA7053
12167F0CA67E929BFEC2D7FD228BC645A2EF49FD6EF133FB988C27D92D9E708B
6F327C4B5D4613533C8EADAAE20DDADCCAFFC6CB3F21A6DFD17DE3BFD3F0C528
AEF8D9185E39005B3385329D0B2C65E7CDC379F1AE2C6511959C28B61885ABDB
3ED64621A0D998642A96D278859E53BDFE4FE3BEF124B803A8A38B511F1A91A0
EB77B0140A89E77E701F4BC906F7D2E466A88185D2B12D189D32F1638098213E
8B756C16BEB18673A9FB8A5807DA18F1A0502CF60E3FF835AC79BE6F606C8E37
F7305858DCBBD45275CC86BDAAA1DF30CFC386D32BFF71F216E5827E7A26B338
155C0F13D1F978469E4C7936227234C7A40D809F29EB4F317980B9B65EB1B357
D4EDE3AB89DD2671AF96BD5CC16ECB4C2F994B17A1AF22C0E996C0C5C3C2652B
FF5572EE61F0123993F6743285F1A3F0CF5FDD6D525220B5607A0DC4EEDF8B5C
0272C068BD443348885180D167CF21C888BEAC9FD01108B054A392D2CD63C8A1
10B89464458F469E69D1ADC2ED42FE56C97BB02CBFBC400DCD25DF2A7E5E14EB
D217BAB39277C94D4C5E0FA2C3DA0631BFD17A3ADCDF6BFCB5BDBBE6332B131F
8574FDC881087C623DACA5EB2C29237502780D00D8FD1F07B3FA7255775B8E90
0D50FE3D7985C01BFE612BE561C2BD40FFD2FB58A93A88DBA9E16269A0C64905
8FC5955D05A1B5891B82158481A836F56C7EE2608887AB95B5E0C4FC4EC07A90
A0D09B91FE4DDCDDF46E4210A14D8B47B8A0C46AA4E1F1AEA148D9C345B110D3
4DC0F117F704C7701E38F2EFFB4E8C1E02D7A647CEA67D3D2472A61394EF7FA5
3539B58BF269C9E8B040C0A3BA4A0720A9AE1250203CC311C60F4B2FF366AE20
49F99381D468372FCCFAB8F3BBA6A177DC14DB29367A54382E4ECABE86A0F95E
988BDEC5C7F87FB69B3EEBD4CDE5FDADB061877E778CC0EE382002E3AE33CB28
3304C567F9F6E7F2E43CD0A0240A905107E00F3E71620E109F3AB4932F7D317F
C3AC5E333BADC2E94AF13B3EB177438CDEBDF355667509A53AD795D2FC059D69
F67DA857FE846F7CC6949067349B2E48C1345746093238ECC5E319EB29B5426D
C33B115204F9847F4A63AF8898D24A08EA616FBD52DD5C56B5AC7ADCBF91293A
005519D2E24DD91CE696563EDB6BE386C1107BE6A8AE646466E92862E58B33C2
25E883480F89259E2B950E0612CF31FB5F7B3D5E21CF2E2633EF9D89B10B49FA
391C4693D801EF36A8D584A224F02446E9EB5415F6C02AF1211FBB7A47C5AD19
67990B772E49858D3AB2A9FA2F1B5842164DA666576E4432F8E912CDC50109D9
AB90AA7CBC9B4DAEAF002F6CD8D155770B63927FE5F1AFACFF3F44D160DCAFDC
D58122CCC7F123BFA334A48AB6D119332984AD87A8C7E380B96F89CE2E67CA22
4B5E90125297089DF0CC64029E9F42C2DE6BE758F9C0CABDDEDE96C53F841CC4
E2D6620A08C5FD878F9E6DDBEF37A6CC018327DFC2641E99AE5E8140FB86E9D8
D4D0820D67FA0ADED524B7ECD51EC335FD2E6354642FAE5D763DF4955AA39CA6
1EE0777A1FC59727F9651B59B79B3751B9BFD8542959F98D14B27CC515A3F171
710947D6ADEE9DE59942479ABD9BB3E0D1D9D9D08A6FEE36C86225BCE9B5FD18
4DA9E780CC356A00614971C55860F7981C196E44C3F925EB25440336F93C6B7C
6391282AF845BFB060CBEBC6954B75B4D92A3C54233A815F08A1BA497D0AF300
C1D0AEB6D9DD77C7157619C54AB13065B4B712D133211BBF4D49C4E0606A664C
3CEA3409F2F793991BC52F2B73E75EF7DA49C57FB362A7D441B7A336DC13DB42
907ADFA1FE75561666013CA00F5EFC8C312F9BC9A424B518C6025F8ADFA9D7D8
E795FC54477975B5D43311E707DAD53AE2F4B8A4A5DEB3A711C4B911DD27519C
C9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFIT1000
%!FontType1-1.0: SFIT1000 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecit1000, tcit1000, lait1000, lbit1000, lcit1000, rxit1000.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Typewriter Italic) def
/FamilyName (Computer Modern) def
/ItalicAngle -14.04 def
/isFixedPitch true def
/Weight (Medium) def
end readonly def
/FontName /SFIT1000 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-70 -360 1392 838}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA1B1EC5CA76F3FA433922B4C840F1C54D4B410FA
232DA4932F27F16BF8CDB753CD6792A9900A99C9E3BD6F918ACE957247053A6D
CDE451BCC8152EC7EDF3B9CE759577DD04909FD40AB24CC6AA440A56F2CB9532
A73D218580C6DCD7E84886ADCE804D9F56F691CA8CF6E04FCDECDC50E89D7302
BB4D479AA36196E44A9D011AD1C00057557163AA01AA4B4C20C209D06ABB835D
1F5282F47D7332C6619F4935B9829E8079E6C4C87C5A575D0C55C7DCF7AFD6BC
F67CF36212DA945EDC9224B1ECE9EB6152E6B57F3BF4792E91CDADD900B003C9
38CB162E3C1D4A8A925425634B2B530A17B104E9A21ECC2F6A30B3231C7C27BA
3EAB9BF231CED0440B8597B3A35E21A3E66C525B80AB147ECFE4E152371A4334
7DBF05A7A1276CB46FB64FE8C2484AFADBBD17B2F94A506A34A9BA0352A91B3D
EFCBC9CA192F4D8DE86416ADB1869D73AD1A69D249329EDA2D1D461E41213E6B
67BC4EDEDB56018F4037D72E6541578BFDD16144EC5F060B95A21772C4119DE4
65FFB95D789B8CB67F10DE655754C0E291F5D1FB382E99E176828D613909BD2E
070F7DEF8E24A4F500B585D8B6CDC52556327CE9C1CC1340A4FE7C15A9E0DE60
0581DE277AD86FA6713EBFE15B8999EDD0406BBB0F061882534458E05F47E30F
9EDC56CB842043ACD4E4BA5C7E082994AACCCC572024A2FBC82DEFB47B9A7ED5
DAC997F0C96EBD73A06BD8216A3C4550E6174C2367BF8124D0B1DA92E27362B2
B9578F0F8E2742E4AC3390ACDFBBFA745CAF433C115BC700B365EDA52C52D99B
BF3C16AB5A6F265D4BAE09F326C7A3B460F007C1D9B1D0194F525E6CAE7FD75C
8C34E6B895ADD598B347947BFB29E19B19B7B1996C96D8B52302D9B7E47FD932
AE04BA80A0B5C87DEDF27CFD603C275A1F76E771B475E1A557A52CF5D26CDF0A
EAD7DAB007222B745D0B23C18060C4CB1831B22948BF12F26C82B2DAC99069F1
62BDC009DCED2FCDDF7AA5E402A021411BFFD9998F9AEBE37DE5068418F41A00
7E64514ECC2A92464398A1EDE91EDC4F4ABE39D2E21CE8C3731E27B0875ED86B
498E4793915F5AC9E2301686F8797624292BC3926D03E4312FB7EFB1E3181CE8
AA1E1021BF9D790BCD66B9872418F069ED55BFFB7FC986E5F6CB5689F1A9FFB7
1AA7E9AC2E727754189AF4EC871967BD941D8D902967B91008513A04D2CA8953
09CC0EB0CC9F750D3E83208C1680D7EC237281515637F0A5F17D7FB87BFAA3AF
BDEBE3188BF82663CA731F3585C9B36A75CC7AC35A6FFF0BE78E130BE08DA99B
91A1A28AF31522A66B8E9D7F2FD3D3F43B63C0A85906EA4630758B5758A5F889
A5F503843C952897FC91509B6B005BD64976069ADDA18339E60749C218E063B3
95D84D04AA7720241888D3B8A97F5F335EDA4288B928203E2A322535DB173570
90B097E6BDE9FA15474AC675E8EE1F8ACD91E467EA0CA90AC3D4350A1D2629A0
BF31DA39D896411D284071D290F35E9B5A8B9C7E229F4FC592844ACEE1A51AF1
286DB7C95F1BA7E3806A1534708C378F4040B24E57BA7672E19E360549603C07
27A4C0D16EB37C370007FD788E29F5307474F5BC80E8420C2C6821DA85B67247
44DA0A4001DD7FAF6007B39AF03107E692DE39C36120FB8B7436070F4ECFE8B4
85C8713C7F7521A66CE5EBA4A3DD01B7C3A294BBD33CF33DAF8A4BC2C999DA93
F9BDD9A430ECDE68909538D6EB53D9EDEB8273F35B5525344780C3FE46F28CEE
9055AF13161B0F081D6BB68257AEB962FA833C544AD27F09499AC5CE6853F0DF
9F7538A7CB7C78A8C6FA2C41AD66D3EC9336767AA7FC3F80225397856BDA04DD
10EA95BC31763F5B08FBD9B21015A30F22586073086AB006C5491F3C9C9235A7
D5504E3D19C9D40FC304CAC934D15F54843673A03AEA4A5715C490B1EFCCACC5
8A1FEA7C7EAE33C2D9039CC3ACDB83FB1ED7D11499EF300E5CDFCA88076A4D46
7ABBCF8AA54D8B208F973B30B14681571753969E4DE4886646768299303CD0D8
39F87ADEF6159361BB0B9BD43D4B8D7191ABA95918FA239B603CA9EAFFEE039C
DB86451D5EEDF753D98DE208137F2DA6C21235C6C2A77D5E12C4DFBD2BF4BFE1
6F013EA511AFF68F29ECBCBA6F781036AE44B7095C1DECBFCA593B9A88B37BAF
7CAA5689A784ADDBA4FE86B13236C6792C972DF81E1E424444BB684B00FB549A
92866A99B8C1DC48D348481F850CCB77143983C5F3D297158E004EEA31CF85C3
0F4545A5AF9515E57AE70AC9A1348DC7B8A82516AE3F39574F4183D4EBE24EC2
0B32463D48D7550F2B4E0F32924E1C6F28D8F4810E723C0D953E9900BAEE2FA9
14CA821B995E240815E2A866A4A74D6EAE39BEDFCA270D52DAA835C2F5AD4A68
6AD08D403BB53CA7458DB1F0D03553A5965623E103844D52478F6545177D6B1C
7CE49FF009D32E9F6C460C203D7DADC4AF3BB8317F8A749ACFD5D433FCFAD9CB
A9F009AF07230FC9DD3C3E037A7D9611F4BA3E0CD4739A736F44FAB37523E494
1D032F2DF6FF5B2551BF8EF7E16BEBED01C6860AA8A1B609F032B4D0C796C291
702228C36C936559914ADF426FF193765CCEA9FABA3B61F7E812297D0C6D5072
0D6913F4FE6AE08598572C707E3CC5C40B8E50E255086311090CE3CAFE150568
7BCA1F8AC238508C65B7AFD0141326A5EA62521A4556AE3635BB5F0B081FBCF0
4073E6F764FDEF7746DFB35F0C15BE7C4870D2F906BAD15A22B013FDF3307FB0
98790EC321FFF0B0FDF48A94C2EE1671ED6281FE60F05B827AD4622A3F7BD3D2
F83B8E4BE3C9AF3BC9AB1F1F73DB96EF2F48A4E77A81EA1FDF8368AACA89B74F
523F936C90C0BCAD56EE3EC07F3B3E52F66EBCDA17DD88590311DCF8123E00A6
BBCC51C5C969387001D169C9685138A06387FB80B43EDCDF27B191A6D35CF856
DCB3A99BFFE362B7DF72E829AB36A40A0F8C127B7AF34AF7F028031A9531C4F3
8A56E58E84D52025B188E06E96D3F725A7708A9D51359AEFE3F4208ED2259395
F9FCF7BF6A5BDD21B951363A6352B8C1580C3DD5D13B3A95363D80116C2A2147
3D0756C31E77A356DC770756F4A887AB343451EFCAE6D585581A5EEF3F2EFB96
8EFE3496F7739B7AC62019A113EAEA907D8A1ED4CEDA6CF085245A684470B7E4
404F088F2B37B3D6B872FA35E2DF93E57E4880C21B0B5ACB813FEB797D0D8C10
16BB7ED124C0672AE7E8BFC4C09B1610D83271BC05231AE2F4794FF8D16234E4
4996C2889D3C44EF68E4E09A0E265BD2750EA8AED8C20FB1C97642F42A0329F5
0A916C82A7C17E05B644C2FBC093F5FC238B6279E7AE6D25E81034C170CA7E61
C44EB31407FCC2DAC7F13B0C4C93E1E8BEEB123C88893F31C056F1BEDCAB0E3B
E746A4B0334EBCF29B163A35C9D440EF22585405F487D1904B3476E0A2CAEA1D
9C644E3FC3F6EE2A3D7690B054DBA04D4354E1D423DF121DD03476ECB75B06EF
E5369A36F8951F39070CC945622608B9F601DB529DFEA26964314FC7B826CFC3
90CB2D51B630473F72ADC9E8B99EECE74415037DCA2B01DB899E8E63D0561E03
374C6A06BEA865F81614B151DDAA75064CAEA141908BE582B050E80AC9C00A37
3A23292B4BD5EC4969A9EF331F1D032BD9ADC9353BFA3BBF553C2DE2CEDC3DBD
0CF1F77D4B9785C876F7F296FAE914014C99A0ABC7B6E384E4253396F0E34A62
EADF2A532BD79C6B8A2122531BF23E9A79C06B2A0025DA665AD19EA3ED28F077
55A8D50EA75B7E74B2AB437F66414099BA8E0F0257B1F8CC05CB11BC9D20B273
73524C3F9C0BB1272CD354E43706244A8CF097121332724A0DB0D085EA16E376
43AFFAADDDBAE38EAB7F011897CDE24DB93D8CADD372D2B2818C9FCE8BFEB07E
548C41A595EB76C02F86B984A65408202616DE0247AFE827CE42213A597AB3F1
800CCFA3F238BA39DD6B83D587D99A05DB2F046C66FB961F688B8555A629B59C
A1F4C216ECE1DEEF5C791A3035CF886B1FC03F4F786EC7D47B97E25432C19560
8A72C162E943ECCA5E60D66F587220828ED40B39AA924C980C2F5363892C77B7
4F294EB2C1F61CB01D00DEB2CD24D086B493FB63F7FC395A372EF115B8B185AA
90AF0EA788C83F264CD67157D4F9FD0EF0E6C2580016C1FD0FA0002E4F0EABC9
D0D922D93386023CDE5515FB84E4061B05B22E8F0418066AC7A926C8F5F6E8DE
BA45DD56BF0DF020622A189E6063F74A7A9B1875C8189381FD05B4267E01CA2E
6562FF3F2F1B1FD4B0967C5EB884B0FBE995EDCF0D3DD6CD276C6374AA9B2C10
A047647ED31BD3A28177BBD016F03E617FB1064F0718A52ED50BE8FAF5F5EE96
48134F344D719E1D3195F7A8D54B09F4079AFD581C3F8F477747952B1BCAE8EA
243A5B05241460A6A05BB8C3A757F047423EBAC360D81B7DC39FEF8B47E005D9
AC4B5C5F8CB9DE003AA6BD1DFB29E80C94AF81CD11DDBB2F266DD6FC539FA763
24838E046E85CACE4898BC9404D7B6FAAECF3701E17ABB42219DA310C693BBE1
F1667C7B6FEEBF6D41D7E8A76F9D5C43167A267281045EBD985862282A6D9C1E
5E41C15605B61AACBCCD9E12114C8E8AE7AB66307EA431D1CDA3A7EBF2A8D43D
BD09767B674D1503587DCB9076823F5B4A07AB2E63E9580A8B3C2C8948D3C8B1
E6588DFFCB306237FFC4344A00B7AA073453B24813687F5D5F4525E78A0A48B8
09A3F2D591DDD0B1C3B1D24C285191CBBD78AB4209965C4C5C41057421935381
6B83F3F1233327D3D3BB9088B7277B4729BB449A25D63E9776F5A4AD11C3E3E1
A2BD086CE183BCFF43FDBE8D59AC8F6410E7E7179A352EE96995280DD695780E
8434A5CB1D250EA7F97374D28964B150164F451705FA0ABD9581F43FFB82D861
78735C772A8D885B7BD9E4187F6B5D37EF78BEFE17C2D518B07469F871F03F6E
B9A6E84A51D9836CEE370FE267830C22F0DB7FBF04107A870BD23F85BF282646
52F03073E419D08BFDAA3955549E925A3A24DA97B9915F82896EBE597F1898CE
680DE3EF935EDA3270A103648997E867582A10DCFA3E3B0A72F0EA5B3AB09309
BBA8B4A9E9B3DA44A705E4B6AB0B7A1530C9B489865DBCD046324CBBE3BA17EC
A53D49E72D717A4C5EC41B3C142969F1E8DD21BBB143696A6023E626B3B40748
574A0A76C929E56807AA79D5C85EF631857C9FCB02A3A4A6015A53ED4CBEFE70
4853A93082587A0E788EF0BD5A76EF8372A74DF7FD8C17AE5C2624F670CD8D64
AC7F49AD3F61B4078D6097DDE84F990E7B89B7565D7B2EFE363C31913AE27D5D
4D785FF632A110F6AD7DD6598606E16FABECED8A37B7AF1435EED2A4EAFE7749
BCBC7797D767663161D2860261A461DBEA82D4A5A58A4D8E1429CC98DC77C52D
C6CCE1A94E99DD79D92F58E7F49D51AB8BC9B521003CFFF22CB3EE03841E657F
3716335EF333A51D0BC75ABD78A8EF3243D637784F28955366BF278E6931353A
F93A55066FB9B84A97780F50542A939ABB104712253A5CDEF46F2F9416EBBCBE
499CF35B170D1667CE96F7BC98D92E1EBDF032FCEC52BE9F7439FA39A8EE6EFA
AC3B1D4A86E70CD8A0A31A946353575D59461F97934077F4ADF6B27AF2CC0BFD
F1435278CC532181AC9594361E6D0003459AB8E64368719077552FC9A45C270C
CD20F49B3A8C0164A7BEA283E69FAF46C413B45485D47AC03BE6CEE22FFA267B
CBD4C77AEC45656384C054CF8FFA6C621C5EEE92389FF7C7756286E990C25F49
34BD34E99707987962F446E9C588C518CC7BA802E945602657190A61F29068B3
CB0FBB42024C4789F4E188D97E2B329AD98CB17146FFFDA9113B5BDF1E391ED3
2315F9772D617F413004DF535542BCCC7D312C7FCB051E320AE3C1D8CABC65EC
82F51B897D6799FB7C19B6BB777671F1852B2C5AFA34D3DFE4433D31237662EF
D86572036753B91B7286DC0BEB4A99A1B97687787E059013EC999104056F3408
F248973B6DEA464A8CB5C8203FCC1E530623D16885A589F79702A333F21F39BD
E30635301D76B7450C9E32C975B72B90A3FD0693D041FFFB50AB67B8B1EE210A
01C6053DCB8FFA5A91E9A92634F5B40CEDE1096DD623C344B9FAE0A0E66465FC
B05015D25DA40A9F4634C7DF6F1650E4A88E00BF9A6ED9CE67C618E342EE88C3
8BCD67A3392FE57C2F05199F5EB901C3B5218200C0F06D193B05F821A0151357
EE35EBB6247C6A85D9AEE633392265DFFDEEE64CC639BBEDCEBA6C8E61F97999
AC4822ED9F652937DDC6CABD00FDA9AC18A33D85288A78370B741414B179DFA1
D8EF22E42EB1AEEE6F60B7201B996A7C66E0B2E15FB905A1FB692FA79C18385A
B1D9BC9C54455B5F66716E2A2E107744D3058B297A459BF8B7F70E40CDDD0811
D99FE7268CA9315515D9FE5389BBB96DDABBE0A28532BB1E7D8F8605F38D0AC4
FA581EB40E64E135A4F6E1C74968EC98CA6B35D9EBD17C3CF29FD22EC91FF805
3659BE46D2E650B4B4BE281A99C73E8CF42DA72B3E5D6AB09DCF3032905B002D
2E0BFF6CDEAD70C437B55086E8EA286B1D57A97CE3C20C7B8FE9F8697B41DEE8
5ED353944DAAE92656BFD9FF6C322896B550C95731C66313E665750CD39AC234
673132C09E5B491C1E9AA36BDB0724353AFBEA007B9914C16545494650D4F94E
CCFA727BB2F317B847E42233F98F0051FE14DE4ECB02B188B4CC52ACFFF5B076
4B6036E65B48A3A71F8B93EB3E519B1A8B7868C178B2A2E00CE7CB472209120C
EBE66BE894C8411DADF836F1EBD4B6A664FC328949B97B1BBBDDBEDE5F125924
2B488717CF4D129452EB01AE272D4AEB7B027D0A3B7E30221D3A4D6DEB7A717E
6BE00D0632E1C42B5BE294571C1B4018B6736A21409FB4962E06D980BDD7A3A6
9E30647BE908ADAD503BF9EA7338C51E8084AAD9DC78F1448F1304E3325513C7
5F0AC2DACFF7E8EF4A7FB3C5AB5CA6ED9CC242DA312994ADCAE422301F9D4C7E
82E14634F086ED6593632B5ABCF9F440C99E2C2590E55EA927A0246801627ACD
C2FC3CD674E4B63310DCBE91563855D38CC0602D721C727899C08555DE5992A2
2FE5AD2C2C2DCBE567071E2513D94ED70D9A99A6BA1789C00BA51943AFC404C1
4A6C0F3441CA77620C9AF84C759FADB53780E394D9D257139BD9F1E6BE7C500F
34B97F68A42ED5DF1E1D7002788B2DD1CF1875566A758566F65F5985087D0101
B596B234E6232BC798A1750AAB449BE5CCF75860E73572CA7C2A2994C4F2BBCF
76FAE1ABFBCD46925290932DDE0E18EB71F8C433F3A034996064991B816BB312
31A780403A001CA305644A55EA5D034F79EC2A2506959E98ACB5D041E2A87AC8
3D601D79EB01562BC67BDB6C8E2204B4B802374D194F984558314A256C554C63
BEF8AE773D004FA0F41F337D6F43E6C280F8DAE2B4D94115A80F331A7955A71A
F0BF089602B5474DC327006C357D6EDA1AA0D91788F1B4BC17A8DD95F2ADEAF8
99B491DC12B243F5313441AE0CCC52493F0D102D2B79C87C9A7AD7357352EFCF
56AAB007CD23C467A87E562B87FF8A0253C03376BD946A1740A0A9500C7477B6
C4F2012A6E3DD7AC3D5B43D35FC8D40F1074C0FD39A687303EE61DEAE09A7745
8971940605942165A6E8E65888164F54D55031369D99FEE06533568DC6D31C11
5690ADAA206BCBEFF9437D80C36AE6C6D00E9A21F7666108FEDE2EC799CE4BC5
8C2BEE527208C3EEBA7F6F5C9216D2AD94C6E333DD05B0A2AC1596FB208C3A9D
522EEE0069F9F065902DE9BAF6F1D488AAC189BE0F033F6B74F804C54E773764
ACEF01EA4BB9BAEE63EF5185F8A8F736C915508C020F794F3ED20D24B5AE8557
E83B04EAA90ED45C0E1171826ED063E88655F94A940A76E7B570D88781E47C79
CD45405C5A170C97D9F2EAD24718C154618880B4A972C28B38BE6676F8C9C6C6
BC70A2C9BBE16D812CD53455CF84B8ABB7D8DFBFA182C822ED53C32101ADD203
99EB6F2622FD2F44F72AF73FCDCC113D4177F248EF181479A7C6A13865F5A828
4AE6A8ED644397C2B29B7A46A59CB2318A6E9769A3D272AEEEDA16C987892F10
CD3E30471ED61E31D2FD31DDEFFE8228533E09DEFAD062AE48D82FF078B008AE
2CAD972DB686E4D7B44538E8367A8ADD3FE58EDBBF2455AC2E09DAACD30A86AA
9388C21F2F50E19CCC297D02CBF73271E7285BA3C1AE87AD2494AFCC62C3D0E6
98D821E3138D76FEAC9F54D12FFAFC39994B3932AB16F692C90E50530D30C729
BB618F6EA8FEBA9D67AEE06AA10A5F8950F5879209A142050BEEC2A92135E170
5E753E307CC053F05CED4D3F7252478F6545177D6B1C7CE041A28D21F15E4F04
996803D956EB21B6740ADE33C705033FFB2AA3337303A2EF448D6AD08BC5EF18
ABA3C02A766FE35B2A7ECDF910E4013E016C53146BDF7112DCFE34DDEC089602
57AD3AEFB4FF11A0A9B677C3622E55488E52F2FF97AE49DC99A22855EF75182D
8CE1F194D298283A1289A36BD5D28754A1DE0F66F3DF8E97EF6BE3F1C940CFD4
4D3912B6F65B86310620BBABAB38C14A38169AF92CC5BF45143B79147A7476DA
E2FE67A58C97E42AB0603AA3DB89E1DA1A7855C021A81263A9B1A334176810BE
7699FF18A7D34EE602FA579323C5E59E09A4F10AB874BE50A94B32F66D1FACFE
83018EB513BB4BA5642DC81E608DF2FF576BE5C494D3B8B4994507CD72B3821C
EC931DDE280A937DA82951076B259A086FD97C48146B5F31ED8C375B1A303F77
5B916E11236A4B73710AD4AECC26DE48CAA33E88C275884EF4B9C4BCCB732539
B1E156FDE9E4787A337728D53A3843F5BF7B8B5B65BA184CFE595E725B37624D
B96BE3CDCFDB7DC8582308319FF1C4B950AA012D8F4F80B0119E68FD8E404743
F9BB789B99A19615172210979FD7473F2CEA12F42D7F00FE8B95F3EB1A87A7FE
30138A11927DD65A95164B9BB83253A236A328C2376ED9858DE2F34A647B00FC
3021A47D2500216E6E0BB2251544AC539B2AD1B2274BBE103674C881FE7FE229
BDE02F74CD583E0A5029E94CB8D2D658C429EC7A008389D0EFB818DD50433CD0
2A64751BBAF49AF2B41565A4FFF93EEB4EFDBC96DBC8C8211C726B839960E6EE
435CC10887350DBBB3E5C46E0AF1A537C00011B4ADB0555C4F69A212257F6D6A
72485DDFEF4894DBCA3F299BB53475D9C3A3D8A836A5D7905696D5F207A59FBB
B62B91BFA194A97992FE8722AA8CFFD58A1931BF7FF2E9351F8081CA1B672961
093CF9C1D82055521E15A33E829F9F98C497D03C016DAF6405C9F6D17EDD30D9
105BA682D6E0481F93B4AC018DAA9E22DF0F2DF7F235E65B2D6F60D76AEFDBE9
2E6943ED65620690C78A3DAC4B7E091DCE521EB3E181AA5E86B704AA5B6AB106
ABEB773EBF7F1BE4AE8AED69EC29DB532F2E9BAC49A491B96E3EA61974B69764
821E40D1608DC446AF906A9622D12AFBAB045C3BF765E8EB2571A58AEF87B2DC
9D6E218112CD85339666193115E722B95F322DB5BFDE965C739DA4748BFED073
4B8337921F147E34C38CC80BA693768DAF76E5570DDE1CBD7460D3F6519A6579
5A2C560781C92EE14B5FE748FA301218E00EB539984808520A08D611A9A00C9C
152B12D50AF4E1B2519FBB2B77921FA50F8B5913D666B7AF23F2E710146CB741
0812D6195322A25CA5ECCF3FBFF392EDAD3E2BB4CC21C1178C901ADCAE82C541
467485D7D821FE51E67A59B6F30A79A86F620F950A70E7A5E382B3B3166F933F
A2EA68E14BFEA4DAFC86A4B077C90186F11C5AEDECC109D831EF664B5F92586F
EAFF2AF043BE875FFF26DCE67BD2A8745F829065A21ED84165E2956B23FE914F
02167E4F1573A26E2D563A4BC5A1E52B8D3E938C8C15B973884F978A5E4F311F
587F6C3F6731BA04818191DDFDD7DDBC7DAF0903167D6A9A21E145C022ABF599
980B0E570796220FC2B9398FFC06D8336A7F8C638598DA8F2F8CEA8D4FA6D654
9557438B020598A301C4AEEEF17423181514387EA04B022CF59825D71AECD613
BAAE1F247BA62476B05F4D44346822229C95A53874CEFD2F5227A0A576E48E4E
BD6F68FA7746840EDAB66F9FD75C1D0317FFEEF9EA7E0EDB33951AAB8A19C1C0
3F5D95E6D5574FE761D83A482E959895287ECD21A9577E685DD676801BE1AB0F
C229362B8F12F8BA3DA967ECE11695BF4AC2EE65D6C1E016B237CEF6FD990C73
74FCC0988DE9DBCAC9A6FD005EEB97F492FD2EA53EF4B234E3E9DC7CD4DE6CEA
6D5E8BD5EC5A36351DAE2E6AFEA142BB08A41ACBEEC17D5A59A9897E107C253C
F647C5311CA723188D8780B567535AC80C18F244ABE9F2A95589EE0A3A5A8FDF
216A1C2B070D067F8F5DF8B3C5854144783C114D59D3CC302E4E863FE3910708
0F89CF435B82D192A5AEE7B0ABC80B130F0D005E364D960F714FC31B8B2714E3
2869F926D89FCFCB5E11304823F59C0AE3E1BF8168BF2740FD9F7DAA15DE66C0
38DB6604D5FA898EC0BD095FE32595B2F9E70CE76A18E8C57D7005CC92B836A8
F7E7C409993AD916F16D59190FF586D709320936F8863C4D041E338B9CE1AFE6
867B9F193E80561F59630741BC6EBF91FC711B1D17394888FD978BD70E089532
CD82B9B010FAFAC56DCBE61FF01C2DB9A4CCAFE2D8DE43445E908913EE4389E2
49D328BA0C1D28C5487123E336C0070321F93E7B747BD30064F047FD5517E81D
93AE4D505EBA49C3CCA65F2D855F2F475C5E9BB4C6F79EB0072B610A47BE5FD9
84C7922FD97A6EEFEE60983C410F4711647FB6438363994EAF506A058395C01F
308DD08EB6CD3ADF46393E00744C5C4084E011708468F9415B871987F4592B35
BEB5B4352360C578381BA3ACDDB8B294D7BA0189719FA8780324620366F209F3
289B657876DFF667E3F5B4555EBD9C9225F3F24584E62034C4DA961E33C4F153
B8C989472608A8394208E541812255D98D2B62BAC317D3DBF36CFEC72BD6653E
C0703DB873A9ADC1D305CD666B0C5D66E40AE25BD8FF4B4F158899CB086C13A5
C734ADC79E68EAA168F565A5CDF7A8C16AFC88E7BF77B36B08DE251352DF9105
1DE70FF75FC4E47BD6B0B4E237F919152F8D9E86229BFCBE89300720E980DBC5
7F9A2D40AC9A7D179807134531B6AD363612001817185E95A7C7586F2A009826
CA2F60B0166207F7F13470C26BFBDB209A818A89D13CC66D6FB986F3679636B1
7E4FEB8BC04E55A6455ACAD83407D1C3AABC8C11CF4D87C860A3635EDBFA46FA
39E4F9F2DE6461F222F389B8367EC6DE654DD6D7D57FC3482DAA0E393C9CBBCB
03D13201C75DFB142D13285E87CC401FBE1C10BC18AFA59CA204E84772248FE3
C61331C559CB930B493D16AAD65483DB7DEBB6D3D035FE8332316D14547B6042
1D3B22B847DCAA3D116E934D9FDC7541557E4E1B428D8ADDAB9441D0CEAFC406
47F1B2BF7218BE1F484EBEBDA358B1A86F24437DD974A9546DF809ED64AA57C5
E4571DEFB5827212B89BC6A7396BEC782E4467D17AD36AF64FBE7E007910667A
3F47EF678704470F36724F382CD938C8D3F127A1495CDCA3060349E12440734E
5BE96300BC0B0D9C4DCDACF98B767E97CDECB51495B5694BAF27CA9570A634A2
901B3488BA0ECC24CDAAE0DE142B654D67D4F5C55FF4147242CF089C17623723
5DCF9D0CDE1D91BA2128F70D3D8FADAFA8673160EFA45FBE3BA446F785C883B8
C3C15E7A7FBB1855488EB5511D0BF57327A5255DC3B21C94594116E0EB922F51
09F043E3C8111E7679610367CE42EFC157F30616144B40044F517FB66E333C86
3144BE7DDDED8F815ED0CE9C3E73DCE18344F177E6367E0E76C30C3398B49238
17B6219E79D10A5EEF53877649E137E08D50FE275EE6106F3EEB58C3BC0AF38B
219ACD580C8673885A643CF7BB832217C2CAECE3ECC94C96F60189C1A4793944
41267E54185671AA868F2D0A9F9FB9D6B04E19EBFABE3E4DB05B2B85301E6EEF
72E5949236930A10426CEF385F61A3ECE62FD42B5EA2E694C03C0A81ED6B1437
C68D07A04EB1CF2145B41DE042B26C218BCB42366A781D86A0C662CA5EFEF310
191E2B0758EAF0D36C036983CD87C3BBD6EFB2EC02F29908C3FD76A18C546673
A5CCAE8794CA4F979E688C7A2965D33BF5184DD108738D7D4C4F791D4ADB328D
46CC7D4293D3F2682C6EB0C32DF2913295A01FDD7EE3C0C4181BCCBEFE80D430
FB3F22C2AE735247FA120EDE4E53006483ED22EFDAF369EEB0DB19B05A367C25
00FC6C29EC7F606B995A1260A131A29D7F2D8DF14FD1B649A03EC3156AF47DFE
FE463F7068F813B776CA3C006A2F6EF8428E27DB4BF2388C45D28987ADEB1A3A
6C4129BA5A36A9D5FCE8055BBE9738D9450FFEB4B0BE0AF66AA9972F0DA7E16E
876198E25393738D16F3FB391A6239822F22289B07904E2B73AFA430D5EFA19E
96A5594001DC5B6D341040D3BC881F7364E73FB4D364E1D14C3A2F1AAB53A540
7A7540C9675775DD67F8D29B52F5BED9E09AECA851AA1A7A7519E343CCA826AF
18C40FCCBA3D5E4D403B9C00A98465810ADBE9650012480360955F1A89A13843
D3474D212B75B99B5819F1FD8DA05FBD15CD75C7B0CD83B1B29767D18B3817C4
BB212D4EA40F96D8CF0E9AF626D0C1005ABBC5FA0733400997B2A129456A6B6C
CFE54C18E2F2B3584E610703F0C41CF6D1E942BF92E3AB371CA5668E1E5AC382
DC237A96167BA59440902D0983B4EA885CD9DF1211046EC57C65C7090E0B50C4
AAAA6BF374F45C62E76ED5AA6B8268B2710BE5A47692A30CD2EFB6FB81C316F9
0AD474DFA0317FA1208E6F253B02CA0342CAE6913BF7B3620B1D4F57873E1854
23813A855DD1FAD30B15C12C620873EDEA0B3C0BC1053EDCE4112DB5DA8AE2E9
BF8207894A24EEDC4F35968EC27A50615AE1DA81430F9796A3707F23BC0CDA60
6A93C6FCDDECD49EA04D85A2B9A83DCCA92B86A8820EDCBAD52B8C391B9272AB
5C255358EF4C725059582235437A6B7ED658ABF9711A6F5E776402490676C5DE
F33B0E4C758D5056D2BE17B1B5169A18F26BFB274BAB1E2F847F4D28EC7FBB10
38F33F33A08E9E612654089FB76964231D13D44296D9FF3E41BDA559A23E29D0
720F3473C68003B5E896FAC4AE6BF8CB98FF0CCB45E8F868FAF53EF823FE4166
C38B7DDA88E236CA69164AC6D4A1CF36FA748B0C91A66B8851762DBCD361C9A2
E78EC53B2848E0AFB5D74BFF42EB072F86ECF49B60F2F7A1D2F3038B305DE5C8
48D2C5CA7E3A4EE26608FA2F48C9A643BB44E0D9E21685A6F8C724D8D515C07A
300AE0A7AA577DBB49E135A4C88D0D78143A07EDF843EF3D67703D38F1C1190A
F61B7091D515F39AEE5EDB6B0A4D8CCF232FC7B78E77F388DF710F72C9CAE2AD
1600AE40456BD24417EC8868C6554A96EAEC410E2B34E8132C96468E4E39483B
3C2565649B53694E460DE998B7CAB119B512236422F132688D6B0B9DE5BECF4C
358061AE4098710C7BE793A424D9C864A8B1ECE9C6780E05A551F448EF7C84CF
7C0C7178821F48402FB7D7DC57CD092B3197AF99C25408BED02EB7D6B01CB47B
CDC94AA03F86C0C524A4CB8F29EC3AD93FA9CF7BCF31FCEFAEC3C7E98C614BF0
BCF9866F49FC191605C26A8E4FA762423AB2478F9675C1BB6FE87B5B2DFA65B8
DB643BA118200C82C260CA3CFD688DD092272A58B53ED5B03FD0EF96B5C7F91D
8BD6ADD6CC6DE25212D5C174B927042304525E3D15C4E71C6962694563D2841E
9ECCB0A008822C1589E39C3400B20F87FC4EBDE7DF43462AB867281E5AE7AEF6
8D821A0A3A5E39EFB4FBA2D2BC56908BB3DAD10E1ABE9D7A253E2DD2510CB723
392E3F9D854C6A64795BAD4FFD3B0EC11204E340629BBB1B730750E5E3950489
3E84DA5A4DE35EEC9235499B3200D6A7E161BDDA5F652C055AECF24964A4A4B2
2DE61EEBAA5C23F7059156D1120B6C57D0ABDB3A6A99029E5F91D2E9A6060BCD
92EA3FA6ACA1EECAE6A2DB5319691CB67089C9406EB30331EEE94B581ABCE511
80042AF2714C119F143835DA8BB5D4010FB6D33CD575992925EBDD62DB678E42
A16968F0E3FFB5228198A1BC0A96DC45DB066FEE28F67CFBEB2EE4AF7AAD7957
81AC8D02FC2268D05999DD688729F3F6ABDBD7C73E9635980F0EBB0B04647E76
5BFA0DB73B758EF603327B307F8542871DA0D15F77CDA20862F59061AC99B31D
FD60862137ADDD01EA411DAB24C9F2237D5BDD973D35B2F28BC2E9D857E66B36
BDE8A66BD167463894FAC4544DC317E1A9D2C72DF5CD1D57F04A371B8BE52C13
7A8AF44E2EE4D846E6F6DAEFA530A835479D3FC7623589A5DDE2D47CCCD28C3C
93C0F5C9580B3E2E7736DB466A73C8773A11BC6360F1E032C33BD815229A5559
2F38F5C85CD774A47F970F9F914D61A68A9FF992607FF78C6F639F571A974849
643A9E1B1D0FFAA6F79A3B1800AC35FE28F9677247C6E3D7322B9B66DE53D4EA
8611D729ABE047FB4547FDCA93A1346261C8C1F07E420A7545B5D84AC8E0F70B
9E0EDD31E5C974E8FFB2C222DE1EFB9A833EE4A25F4A8D50BBA2179A8D9F5BA5
444AFB036F224332A04A76801D1C783A8F2BEC455AF233BA16E930FA4F3D1A3B
5E5DC9C3BFC7250B19DA566EE66B35E7069A9E7E1AED72BBF285D1F9142CDFF8
1CE677D750AA957C761D430AE3A03528370D5A1802C40E0C57760274C777EA01
886FE5FB6F899C3D8A1B120CBD66AD2E02B47861CE41967022D2683269F8B697
2C8742F5963174FF863C05649BF179DA515A38AB6181F492A569554C0F4BCC7A
E2F068302B479C23EF642100E31DA6C3C5509C04A7DBE3175C82F28A52D1EB1B
69CECFD4BBF953D3B24E6AE36B4FC4C7A13F2754E7DD3BB8C7FD5EBC644048DC
72DA3DDA663EE554A01BEAD6AD931C1597A5C7A384AF50B6F9E3D49D4B6E8929
9397533953478E98F10A66B70E9B262C69039552452C4AF42A44BEA21E708B5E
11CEE88C21CA8AAEB267F221C6CF77260EF06A30A8F24334F2CE5D696223F179
B8FC1B2E7DCBD2345092F1464841D5408BDDB68BEA395B000EB14777FD7D5D73
A6BFE1CAFB5E6551977A6851895F33A3C5C35CCA51B2640508ECD49BBA557DA5
6ECA50BE1AE4819EA4FB93582A1F1EEE16028AE4B15D84C4B7B18171BA697F37
19A949EC7BC3CE225C0FDE47DD63F6BE14722D778F49A9828EEDB4EFC72B5C7C
E0FAC02DBDAB88E34AB38324159A41D3861573C594CB317353A25F8D8B0A8A6A
C194D217F48ED236FD7489D5FA0307735491FDEED57A7CC3BE69C9AB76000684
781D9875EB0E6FCF5728831432E6889059AA33BED5160628F2BC627789E3BC67
5D1673093CFD71FF2DA588399B10AD2F4FF0E6634198310891849D932E55F14B
FD2D76FBC8410D090E589865D4A21B059C497D7C2F55DD94C356CD14A8E9A887
E9C50A25B0AA04B230B1DA97581E06D4CE5E25D16834EC81D76D5EC23037BE50
8DC0A95F794D4188A3FBB293DE08C252E2C0AB0B5E8C98A4DB0F807D56E32465
08BD673B6CCB9EF684107C690DB088FC024772396DD40DA8F8095372C05E1C5D
85FAF8996D39256B54FFFDB881F878EF8FF5E2B59FAAB73935B8776BBD26FA27
66FDE9E01520375704BC403316FDD4951796A647284DD4965CE1854E36A83CB0
92607B30F8A5037089A0100AF38CE7D1730771332BF0149C85FE60F05B827AD4
622A3F7BD3D2F83426607E31C85732908291B1EEE859A2E5B2D6376536BFEC99
8452E49EC8F17F0895E5DDB248132E0390C71E18669353307B572ABD79FD5B02
277BA53FFB06AA8D65134C4C75303081E6C67BA1734FB53BBBCBF09505D1CD26
35C1317CD71B2C89D4B906997D52AF578CD7120FBB7648A98B81B98E80520B09
9B3B349887C1350690F56EF6CF5119D965A836B3C2738EE521A993F0661E8255
B9825B63AC64E7C6CBAA4F9F10AD8C11FEBF0BF4A612648D05E8AB1B8937E9C8
71617C296AF5C9CE924F1BD6605CAA4C95CA0F58CDF8472505CA4CDF92862697
C872A164BA0B4A11BAB2644771EC23C8D7EBA4461B484C4075455CEE1BB7A126
E4243EB937E8A9A599D17B181BD1E5054745D89E5E7CF8E766F9C529286FEC7A
54448BD2B13810A80FCF546C05417DC1815FE05578C4908A37269982FE7CC118
4D1104219D1C918BB38D116E8FE54A99129ECD573BEE2718A61159FC589CC2F3
61F09277C8467852C6167A41DB8DE92C0E0284A88C7E5B825D53523C335E8099
608FAF943F41B7B6C7F29214E8FCF54EB75306E86948993E4910CD97515C002E
FA1D099B894FD37DBD729EF313EA4AC685E5628A39573081E9B944C0D4B5C158
C66FAE36C12DE62B37284A557C619E78AB817F6878C8A3834A06063AE974CB7C
FAD7871B1C9B58F5899AFA1300D77B26EB9D729F31F5C283B701D917831830D2
71464FB62A8429FEDAD128AF83001E8A3C6E1D1301EDEF5BC4D88F078ABC6378
CC2AB7E8BD7F2A2FEB51E31E145EDEE320296EFC860D2A57D2B6D67326F09501
39772DA29EB23EEB04A93F0CBE8524481A9DEAEA23BF38625B87326744DD5FB4
E5376C606B0D79B2E316C10B8C64531A430598881E5E00F9762A049FB20D260E
F667AD49B29DA3BB72A06A03C924A1307C334EA38B1AEF103B282319232BA8D3
7B7BCE15E722B95F322DB5BFDE965C76233D462015087BAC6453A78C50EDF382
D94114A84CA2D3298FC4FA89C76833DEC9F84B2444D6B7BE93794C633A191105
65287534DEBC5A15613AE032CCE548FAB0C8D1C4B4CC35E640EF9FC0E65EB2FA
DB7A25F0456E33502239B067013D261BBF33358AAB8C5AB5E55D70C0E1AA3057
F954E575018D987EAD7DCF965B3F63F6ECE5866A2A0732579310D9DA17845068
139130E6936AF27B3899E171E874047B1DB87FFCFBA03FB3E43BAB80B7B21970
CC7652DBA984AD015374B9CCBC4F4C5AC640F559306794B7BE0A5F24F3038675
0D42A296DBCC071D5B917C508921AC0D070F67AFB364021E5DC1E5F9C8364128
9B92C239C0E8018952C7AE3F0134DF9C6693A8749133170C3FF173464EE2162F
C381D4A79CCB9CD3951660A613A35EAE2AA17886DD56D65266985B7FB0896667
EC7C64469206168BE102013E5E650F2F536D0524CF3BFAD7DC43F76327358905
71C608235FB768B14E9B37D3464A3ACF26E00CD63BCC37BDED887A5F696C5879
C703E9AB03C6A28F6FAD5122EBC63EEA5D848451A245DF447C2FCFBF392D9EAF
B891DB65EACFBAE6471E5D47387816D8F0D50CEB1EDF35AE45985AC598188A66
451FB569ADFA910C9F044C5F53B327D89EF38CAE453C2D57AF9592B992AA1815
CDF19E6ACDB3D2151F83B22CADCD9BAED5748281E5AF0F1E4F893C9180C822E2
7C094D2E840D4E9B69053BED7A9ABD3C375A7F598004D9967BB5A52F96956537
F9929856BCC95C34A938FD6A58590CAC6B140389B64B2C49D680F8AC65FE25D9
CA9D2CF20FC45499F7183F485EBB50EF5B8D432AD09A48086B40676990E4B529
75AE8E54CF31FCA2EB9C1D255197A377177966F935179D09BAD69D46B5B00567
877BFA0B97F6F4A6E3D0BDD11969C3638F0B8FD51EDF3757B050FBC4A6B84956
B249AD29281A21348B668665C04306AA59A268FC8EA33DA8CAD642C290080222
7521D6809CF94AFA2DF2B4C580C25C2AB4DBC95582B1F0FD65BC03A39B4BAE1E
DB9BC32021353F370B3587DF6C8CBA29F49B111DF0D79EA30D2349499DC140F8
FCF970473794DCA19C372A9731498C67107305F5FEF70CA241D0CDEF40340A5E
BA3B73337E0D1FF6E3B2E5004AA42F8CEB60FD35550469F4584D9684F502CF64
CE0F31B8840EBED276079C6A29B819615E230FEF6054BAFF70ED180C46591B5C
19AD4FD722BF9D2A62F0AF852F7CDABCEEBFC63B54062955D94C8923A62C1509
D69F4103FE56D2C4963A6D174775158573D65BFE4C6EF586F41B2D86C414E89C
31A0167D93B722446201D85654CECBEC9D0D0BA7489FFF6688F7934A82C720BE
4166434207F479BF276D0B0E0649E0BB2CF0C054252EFC5A70C9582ABDC6572C
55A8ADAAD79303CA403E822EC80560121680AB05BAE17D78E2F6151B28535C29
0F183BF30D80036436F7BAF4721ABE68FA322945DA83BA18E4F572819988AD78
46103266B08E065423965F9090FB72E172C03E936F666762EC501537F65F5853
E464071722A5C2CE7BA89F220A096D9D9EB7EE7D271919B1677A8B2650506707
2BA15230E09D925EDE0A7A54321C9CB5060E3F605D18F8A4B9CF0330C5E6A0EE
CBC135A16837033BF5BD9D0D5622DE7A1DD87E23E97AC105B195BE02D61871F8
4D7A0176EBC2C64D26F7396C4A67D58EAD539B7D18F058699733C13131037597
224A80236EB3D2B50A57EED9E39692AB12698C96E9107075FC14BA61C70B8A6E
20AEBA02B2BD58D146C7C5CD62906508816366E7313E5C886A07F9D5208B3905
B76DA60A3B7EAD188847E4664DD4B8BFB71D48A40F623E2050CF509F26C80752
B04CDD6E6D89DD6214F6DAC9E6D10C4F57BA2307EC71A455BC1900FA6A86EBD6
D6EE00630EAD7137A71E9FC635A97AFD6C065A282A4AA2F8178707D80087D9E0
E3F9B1A6479C325031D028E3369E3A3FABF10B486BA62BEEF51D7D6057E668F3
59493B8B30A8E7D0C5B2B29683252C2D470BEC23B881E48DAD284B19F24E21F8
42FD0F3ADFA78A439C1EC69C56A987D9CC0AEA383FF986ECE8EA7B254C00951D
64D9C729398FF5D3149B2774246F62916BEEC1668C8E79861029383A216191BF
ECB1E11E22BE1941E27DA0899B1EC7F8A710F47A1C83530D8D23B73BAE45F76E
C3E7DD3EA4104156A84CAE8FC6EBAACA336C378E1C5DC3B29A1E317A73ED48C2
9F014A51A5F3C55327ECCF5FFACD656ABD621A93EEFA839FCC6406FFCADE1873
44DC7F5D3526AEB9951C726032A76DDCB25D61371C06013BB33267804C0E1D50
0F38A7514D103A364A48663AF7A14D567F0FE32D2F63644C7A72B93AA248937D
5FAE9E58F7C14D9538CB0F04E833D591665C6E080C963C424A736495FDDA737B
E911D81D3AF757979D985B3EDB1390B9229E5CDAC30E8E8C768AAEBC7BC580E4
1E72B21E95ED148795B0E069466BD97ECC63B57F7C997A2316AE4C187FBFDF71
021D94EC9526CC67F11F8BA65B989EFC42DD47D29B449C4FD6DC39DACD6B62AA
49ECC697ABE85A3384202DF5BD046E1E2D29331D9968FC0D479D8527067EA1AF
0BDFEA1640E4826618615E56CCB554666EB618477431E8919B9F5A5F965B1578
CAE73AC7617F61204CC6D61EDEC4E01A0EA15853FAA64074AEBF878BFD79F2EA
81784A16F8F33E50BB66F44593DF884B44E474423E2C83E0BF6A65A45FA0AF24
5B2F465EC30C3A7EBEF3A7A3DC7EDC871DA6AB811E5EF31ECD686A274C89E24C
9D76E7E9696FAA926FD98A1B8DFF2E6B0DB9CB666F18BEDC771808550311CD96
7D167E9F3F7D8DC9AAB261C46DFAAB577C1A3423FCBDEE9718B5E58124D72167
FF0410C077520CF1215CAC7F2AB01FD69E8F65FD2288E5C223D2B18960F1AC13
EE598C290A579C2DF1D067B50AA4F00CA09625D7AA9B4D6F45D166749365CEE1
FEE3652555ED5FB32E8AEBFACA72B0D54DE24EE880E3EB09ACA94AD3C66899FB
2EA6BFB56EAF9A0B2DEBEF4534D47029F73EB762BD6BAF9808711285ED83BCBC
C60A28C8FCD1FF08DBB2CFFBEF2057474E3A51F1FD15B89234A997054D54BB20
618A38D6BCA71EB150E16B2E995F9302599D972A8B9FC2FEB59CDED7502E91FD
71A2C8121D8FE4FF4052877522B643BFBF354D41C04D58988D00402DF8794B1D
73940AB24AB69859B2BD4799383327A93EF001BB82C8C8569178D270C1471383
E62B81D1EE787B29C34550EA5C9433D685D591402484216D7E9AC2657D2CC55A
90400D81509BE1130E8D94D367B08B34DD3606DB5110004988982B2B89FF0CC8
75919DD77784A5337D15B5E7B2A543B8ADEE8954F6F2A3CF0DA3F161233304BF
4DB3236C103215294FDA6E2740EA00048D4A20E235ADCAAAC031F682A5214C2F
6DDD981CFA4B6E6F3E51541FF775678874525DA3673780C8DD71A8C0F1BEF162
EBDB830A1E3FE03AA0D1C30E9D60B0BF1F42B4978FDCA9C62D85038BF35E57E6
6FCA310C69AA6BC2D3933DAD594CC9ED4EF1F4A9EDE5B9D098E669CED79C742F
1A10BD46F3A4DFEF5F794BF2883C91F6D707048F448254C3F83135F983511BD3
8329462C3AEBA05725C7B993478BF6D330DDCD3F264B82281BB55C18CB1EA5AB
61AC07B15506E79C3150BE13C212D5D77EBE4560BA98621E987943A7E361932C
DC40CF61AB782A66CDFD330229339EF80349F96C270EC07E40F2147E6708005A
123C1FB96ADC3875A80A605B5E59C3D080BB421AD13B51B1AD9E912078013541
DB6E9823DB63E8425172882382A8DA617166CA9C4ED3996C299BDE64FF7D16FA
4CC6EFF4744CBF26A6DF7B235C1FD1884351E482D0C2A9F0C25DBF8F844E563B
3A4428F15F82BF5D79B7BE83381F5332C7D6285277023FDE9DDA7BCD7A32D796
F99E80177EFCACDE18D90EBA2CAB66C92C620E82C2BFC81AD1BC0A0A4145DD02
2E06213DCD0651FF1AE7AE2986C75FA14EF3F03C6A2A6D174256332F04641E56
08A89CD7C2847BCE0D5C4ADC29AEF22626818752B5F7D27673C13758797316AD
93CA81DE2F93BC1C2ABD5BCA0F97C581E515BA8989A6648EB4A6013F78D9574B
6AC1A9FE6A267DB7651226B9530778877AB1BCDAC1AE3AB3EF49F42803D8F4D1
A080961CF24B1758406974F01CD144203F06CEB7104887585E32DEF680955395
B9822630CC1B721B4F1387C079AF8AECA19FA60373D70C07C8C04A606D5A6D91
369C8BE0E9E70098593EE5D9D1F4D75EBCE9331A2324FC27A2676AE23C4924CE
810A3A41061BD3FAA6459CCC46B3D7C41870AD9D171DE0340E241A85E81932E2
40715BEE624C0A830A9935439C1472D10DBFE6CBB8C2BA0C6D79C7A06FFF52B7
A9E1C74B369E8A00F855CFF451E5937886BEF17F53E36945B3C976A10ACCCAB4
DBF9F5E132728ABEBD4D8469CBE8074CB657CBCB3BE29485E133015AC444B117
1678B657E410E27E7C85AC0789DFC46034DE9B7EB366B7A42EDF3BAF678741A4
C9181D9DD52C790BBD8FC000BCB16C8A757030CDDB557B34A7A7FF5074665529
947959FC07EE3E1DD6463B38662A08DCC6487ABAC0E9D979919AE4D5720F652F
A2DF10039A616BC3367528E451BAB968F74041B6525ED6295A40B30448E72FCA
88079F76C1FBA0D7435AB5339C3E51840F38CCCDF1E7BBF597D2732DF9FD55CC
964BB3CAAA72F5D78D0EF3153350EC427F0ABFBAA2FD5FCDDF3F1B1481239815
A9CAF858CD3D19DE198063956093C923ABBB1136C7B7E40237C19393E6D1CB21
0433B7A5E900FA7B75E916DCF432149AF018F8AC10936B3C514229B7680C0A90
D5C1084F38F2BBB6C776CC5DD115F8BEE7667B35EEB48F5B28CCFA5F646980C5
6BB78329B3CB4A48A365DEF08F13179CE0D0A593E1F349ACA8E8EBDEA766D0A5
1307FAB493E62C04A28B26985C87D1D760E1DB1C1EC9550B7695E0EEE8D16CBB
4ED926B5604A2D12AF5826C40CAAEB1C5B9ECA4FECE7294CB23456BD68E2B3D4
984523AB92CAC470529E02A579DC1438CFCAF04D5B3BA7608131C31A2DAB0471
E00929C032DF9242C3730EE9CAD763F88F10B2743586AAB2C070FE3F5E043DED
22204186B34B850947EE5E2FD4A6EBEA834FA0B6C1B77CC00E190DB217FFC587
6A74E7A47C2334C07C0B99016866EF316ADDF4B20F380B405C7DBFDCEDA04F24
CB0E5BA88533679956431762E74AE19B06DB6CC23D1C551BF2C95BF25099031D
85C8F7F8513D6DA5D00F27C21D8CBB11F9F7138F57D288ACB85E6A27208FC900
40054340EF4B4A8902C8018CE5B04B7FADADBBB0824D7B28BC2C1F51F38248C3
0FAEE9742BE57C99625D480C55C207189E8ABB0DDFC67B72A9F69D9E3979CC88
271E9AEE4F3253D5A1455EA99E5D67736377FC38A22E92EF78D414C02AC00C8A
A756D64198E88ED38A8EB9DAB50499F9D094BDD04056983017486E2D7A012EF8
0869281E9A3CF8B481B4DD07225144295C398682C428ADB8FA3020ED18BC8AAF
EF5B6518A2B33343CB03C0FBD271C6B408115E2914D6E214DF71EBC90BED9CEF
036D96A0C55C4886D02C6BE8DB3FE91A00C165B3488C8E8AC53DADC1229E18EB
7A5A76E446CB6AE89A08B43CD169AFE95F813E1E0A1CCF839826816EF1DF9CAE
B0F12578CDE2F18A2D648F372F0E324AB94F82A52C06431C1CFBF72D80134A2B
3E8D1A6C721F109D14E6CC60A12BC636D115609F7765F4621FDC7D46217E831D
DCC061CA4EE68C4663739AEBF3E38E10241CE1D4227398763BEC6D1B61C6E609
5E70486529EF33E6E866ACE90C2C328DAAC5D3D3670A3322A233B921BAE2A09C
97076299492EA8D295EAE43F41966D491B3EAA6F5C49B26A8160D074345C42A4
515E1A941D0A1D6A7286FA83B56B100637BDB105D066B2705FBCEFF572960F51
5495E37981574ED80E8DAD37851D2803465D6EDBA83A33E8AF105097391ACBC7
A2D90695534CB2733A7D3DA169E3367E9294D529CFE25BF38BDE51E64254C8E8
B363733E81CB8045C60666712D7819C5F702F49805C2893E74544E981CAAF885
8EF41789CB9787EBB1247875C11542812E39276F0892FF42F893E21336781A71
D7BA4EC4796C95A59F053B65219C10328CC2AF51E79929B913D5A7F4CDC20282
25DECE77B827184D17B01772FBA89B00AB9FAFD38B4B16005206705F03BC7B5C
EA29452DAEBA982873E90DEEB0F87BF2621688F5023C9DFF004DE554FFA62436
DA6C25FD60F94D9AF9A232999D6CD2E1CC4BF4284FB074C27C4C8C4C7DFA8FFA
BAEAE104EA28A5E422E82F710571FDC9F9B84E529384FE1906A5378561C9AD76
4A9DE55F54C1AE865ACE35510F2412EECDEFE9FDAD0145FD85CBD8FFB36F0C72
7FDD99FE57DEA99751160C040F2E23F989A79C1BC6D9299C6D4DC278BC4F83B3
C8AB9F0537A0DB6977991C86BC838FF25B625EDFE8588851DDD69F497145D621
20AFB904783F630F8944CFD98BD85F7828D65CB368FF27931F0A6261C2D31ED3
39DA2D066469C8640A2F44F1A262972BC35AF3B46A9F8E3A9BE0E5D8D9221BCA
6676B9A537C59D35CDCCA85613D6BA17B77A3A39E9DE127DDB5AAD53F30C5DCC
02887D020721F5500CCD95551841A0CBD55B56E337F7F3D0F46C303532D5B61C
1BE2C9AD108F74C7CDC9A551FD4465022935BE1B1CA3CE58F01CF2B255575239
3FF1B26A4575DD274AAE7892501DB63DD341270AF8B813AE6BAE316E5CA7D545
4A942E22D952B1F1AD1D639F75207CC84BB31C304C3CD8AA3C4DE1EFA74FB9D6
9EA2F9F914C260CB38F6BF6AFF0A1C8CD013104ECC7DE0521714139F9522BBCB
DA224F0FCBE2DD9A8B429DF969CF587E4B0918151CFA1B6FB0F82708272EC1B2
AEA7D1AC9FDA0CE0ACC68B70708FEFED577E68D1311EF378FC41933AC20C36AB
169A8A8ECDEC68A9898AF5F84D372E93D297354EF20B29165257A4A988CFA70C
82F604E72EBEAE608864147F861FB1D6F5FC0BD5B17364E9D25E4A70723FFAAD
83B8C70C9B74FF22E56542ACA4F96072B39608DFFC3F264DD50C84BD7A893D6F
CAD32FFAED6B4B2244ECF631ABC3215FB4759D53859E7C478C29AC880C063585
97E8144E8A036EF3EBFECB9FBD746E64FB27A427279F93A0D7505DFE9C5DFB25
76DBE87BCB8319C5B641E47E90203BA6D0BCB7493695AD1F2CB5053F05E70461
0AF3A944AE3C011755C84F42054A6E2150B94781B8F341CEC71AB38A24A8578E
6B1775A501C743506BD4CFC5DBC0074D4C0412D2B7142CCF3782E02D25BF30D7
A96D7212404F1B737BA046FC27157E767F7DD2FFC5501AE97CC6B93A56353735
CFD0DB121314B9FFEED4A01D41B437D093A2441044C50F923B45DAF724C894C9
55BF088A2F96781A8F83E5DAC9C853F5E84A45F955FD355546FCC272833ABF82
1752076F94D5CB7A1C19C0512D52D1B853EC6CFD42042B4A554C03469AD6AB48
AE876FA0518E4D2C86E62E1E398CCC036739A2719A5683D8B296C8DFCB983A6A
875DF344918CC2D791AE192F2F574814D61A9FFC0EB10F898946F089DD2FA555
7C2FF546EF6DE0342BF67CC094B4254D2059FE3941F8557050578469765F3292
99B11F19DD811DA3CF70CBB91829188C0CC5362B58B1246109CAA964337FE08D
65D9A5EA05ED9CCCCCFB1B956955F7B3778E22653DFDB8064A02CFBB51784E59
3322090A54A664D7A02C622833C111EF7FA7BCD26B4459DF98D82D89A1133AC2
65A4B50A920FDB58B943AAF8C473079781461795BED09F8E3BEFCAA8A690FE5B
A9B096047835DE9B5F09AE68799FF4A9510F9FE4523D291DB7BC44766567413F
BC317B2CB07B80D9C166AA02F34BB7FEB61CD59ADEEDA76DAF00C9010D84B2B9
1498EAF152175A4A0934F1C013DECC6052F8956D09A66254213B70152C277EEC
E5B09BDE6B79101CE22A9D7DDBA701AFEAC4C7F88107974631F8BD210DBCA7A3
BA5F107334482E5E8CBCEDAFB69B60BA3E814A6DFA5C728A67C5B397F7FDC715
BD6342733F3AB041B1016C5DA1CB688E7E79D295D2081CA6537F8B37E382AFFE
8C08928F36F81FD869C3AF1C55DF3F472E1211C8B0AE794A02C5E72B531BD30A
476D018125FA3ED3FFEB89A258B2C95D602A8B6AC3B3E7DE02E5B77208A4587A
FBD772B77B2386A86D3511CEFEFADE6645FE35CECF9324BE55F90BB96F608704
36BF98C87D7B8C9B15C82045F85E5EC5E2909BBE51AA7E3DB810998B46BAED76
69E60A76A2AE95ACFFE93095350B7225071F0E21346519D37B4E565E6421580E
E77B1AB8014BD4E88BC75A8969C1B3A8820FFE089EFD92173FB6DC9ECA19256E
8260D21BD708340859A176E270A45929D273B9A7241DD4488F4CF147D539A187
A494C44321404B070985B84CE339609BD974CFE5DBD2D15DE814A340EFC0F2F7
02AFDC4645FC3402092B9C2D9167921D52E8C9A73130C5CA01070D58F3C2DE3C
029C5810FEBBB217F345CC625614F8A3B8A69140C0357AE849A761471EDAC628
78A6541F4485FBC43A786E58B960B75BD7DE04248AD6A8F5A997518AB763B7C3
E3AD5F1F0A6D0315330450690E3C8E24240F9BE882A05D41AADD4E4E3CA21A72
E429AF62DAB54357A85456EEAF886C8DD9C87BB9386A0AE4B40FF181895F7017
09E97C29CD72BFD2573F550D2D06FEC735142197BAC1B662C244B5C09195B0D9
C4557626983938C75CC5F30627C0556DEE465A2CCF61C02EBA7312F7883FA523
EBEBC47874DE9860149F3A118973D53E43B6F98D8FEDBE328246D0936EE011D0
C8804142E5439229EBF94A33FABF5173B43343C80824A776BEFEA4FBD0EFE26F
6A6292D729E143865667243DD30E7A2AFD55FC34CD911FD7E9F2CC8062580591
1DE622B24B7B0B267756BF35D8217B9F2571D918686585A263284D2AC867FF46
7BBB50BB9B0C02A286E703D007EDDB328E6081B395A811A50FBF204746D895F4
CB50DFAE4AF5CBB66F7008DFCE3D298FFD072CA04FEA22F396565F4BF19BE617
B1305DC4DC49E01C09A993BDC188E658A8D08EDF1B8697DDB8CAE9F4B6CA06B2
6678A22D2A1DEFF80A8F7CBA84E580B6414F59B9F89FBAF1F31422D41C35FA10
18E9487E2B2C01BF9FAFFFB943E233BF540905DF71BABB83161DF32A6E6088EC
5BAA8D451A54B8BDD2BEAF183264EBC5B95FC617E8CDD55B931A9B86D2381476
C38FB171EB2E1FE198F7A89C6BF51A617C055D9EF7B96756D33A9305407A0996
3068E53FE3906B8D34756723607325F196181C60BC2D449991455B952333F34E
631C16E3336251DBB21DF10CF9647C209280DA66F31CA31803E05B43BC705586
7457777D6C9B89D637FF77577C440338ADF6883F5E98255559BD8182BFD2A560
A9E0617EAA2E0AEEA2DB737968F8BB2E2B210BDD356EFDCAB7D1B40553D1EC06
E1AE357CF0C578F211200A48C179EBB4D403754A79FB9A940A2C8D2F2DA9E0F7
A512860838E97AAF12B40E70974E8D28E29390638A8E037FBEC61990D0D7BF17
31DE46A15FEDDB75D0D85A9FE06AA04F9D581BFB7132940CC3A13F10A862C5E5
D1491351DA065E30FF8EEF58B03908D071D19606ED
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFRM1000
%!FontType1-1.0: SFRM1000 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm1000, tcrm1000, larm1000, lbrm1000, lcrm1000, rxrm1000.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM1000 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-189 -321 1456 937}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F267FE330B57DF626EBF73D2779A4A6B462AE6E5
19E5878939A488F2FE1094A76925CD24DAD4573AD3CF34E426708CF06E7EBFFC
BEF5595408106E2189F418D17AD510ED5B6A528E8902AA3A5F0FF52AE3DEAB07
32F06B63E28BB88229E046F4FF8A356BBDDE82DF2A197F2E26CA00D5594725A1
83A89A36487EAAE1AC312C929CDCE50722FA6C596C261E4D78D6C6ABF77F5CCE
0E410ED74287A0F201140F8D9674A7AC585D3CBC72CCB824F9E1CEBD08AEDB3A
A4015CADF471F7ABD9B0F0AF73A8274FD441BC1988A61799856E4770155341D6
516CD0E25BFA59B67AB7E0571DF3F5BA70AB52137D9E6A79EFADBE70CA05AC8D
991D0895C8FFC747FBC0E9A7212BAE6560B9E2B64FFCC58112E64A3B4CF7ECF7
595F51C34AD1342F5678FE1E62EC5A389CF04E82B5F832914B91F921F30A7E32
CA3919F57A2D9DE844CAAAC0DC751C255C9916595E8C9532E7A0A84A0AEFCACD
83EDE059FD06EEE9951473180B517F25F609F347DBA012AE9F004DC3C771777B
BE812787C3C50315D67254A384EB65F260943C6E16B2CDC64E15EEEDC67C5544
8ADE9981A6867405E46222CACCEF79F9DC8674268BBBE1EFEC2187A75FB7FBF8
CB2DB2134848DEA2F9CED443DCF561E7272B38F830871B2A5196A787924EF556
4B7E9093ADD414ACBC10147944D216D351CC744DBC13B0749FD0A129D7C47983
7FEC7FDDECB3FF4166FE295814B8EF751B79196DF6FB2F28CA8CB00807F682E5
1F37B8DBFA6963E77ACF4A16586D58C87B0F882FD7BAD0A5173202958267F567
6D66D0511364EB31556C37BA1973151C35046863FB4F3F5E6434479279EE110A
575DAF0531EC6A4D83FAAAA64995A7B97207724374CF283D0FEE36BBF7582F5B
CED7CEB37EBAFD8206E691F7D0D17C63527AFB2AC537B47C402716FD6C23FE57
22BC8B95E994FF0C6A6469AFD70C020C711DA6F19D4C46B9DBCA6769B6FF2733
21E813E7E86FDD3101BAB642B1553FA2642DFCDE99A053213ED3C70CBDBBF19F
C743F1F168B5A21E570C8DF7C108FEEEE50C825EF2714E974749A7317D535316
2D369F1673DFEFFFA71E41E520792075672344DCEE4F9F1687F0FBBDFC25FBDA
0D8A6A1C3DAD8BDEEE8161AFD70C020C711DA6F19D4C46B9DBCA6F9D79D26E79
9F1D26CDA56B940E651D0D4D017BD65B3ED72939301FFDBAAEC98AC821AFAD33
5BEFBC695F2746A01CF510E684C7D589F29C9B5E0BB1C42C9A96843918976FB4
22225AFE3A3F92B85B2D1EAA81D0F1D4BF85B1FBE305A01C6207D95271423B66
11D3879FD381D567701AF1B0B0749E05027D5493A806A353E3265170C00076E4
86ADADA8AF511EC5FE32E5834EE0CA7341F16665D0EC4DDE1F80C894D3049706
CB5FF8EC37092ED0A93D27A2EE85982E48AAB7AFA36EBB74CE59EEBC8CDC41B5
A08A3098954BBC19648F65AD5241827219F9BF72D4813A30646A85A3E9C558E1
31B17DD5EBE155667B73C135EDF4295FA4DA7A1C9895AA3F6C1F61BD658159C8
88E89E3E48BFA5BE91BD3DC050837B89D74F7872C976386C425054BCA530CF6C
7A33BCABA8689139753CED4E4AD623924858E2D38A7D4BDE1BC5D5EB4F85BE37
AC869A6CFC87E1FCA5CD9D3B850D16B50260C9C30CFA7DD1FF25580BDDDF4106
F5E5BE85533BE7D472D65C01DD80A54683E962767BDEF178B162417A7B7522EC
6B606CF186D582DD972C54BCA767918EC9225192DCF9AF7F4409C06926511480
479F0307DD5A7B8E16D3FA14AE4D7C9AAF0789516E44D9E4187A63CE0397C28F
3414FA7B2C2D61BFCA9492B32DDE38885072B38149BEC1A5CCE0C84A4963D11F
2E56709565C8818A538DA896944A83934003AE6EC6CD98A11CF309661E2BC60C
143604AF24AFFC6126699DF619A02E659CA508BFB7697284F9D1B44FFCD31970
F8CAD34EEB68EA6DB154204ED9DCE3E7E23FB72C2692041C4FF3728CD309F215
414595B073EB8B80508C2EDC1C4DF8C38E89CE919F2A837D1397202EB314ABD4
09CFD87B215EF9299486B7EE9D4CBEF1D42B2D5DF35592C3A28ACB384F4F0C01
CAC17DC73091C42F7AC741CDFE7268453DA56BF31816E435F38EB8C23C5093A6
162863EE9B7A881D2F2352217CB6BA4B3F58880A43FD7A9F5D3E2CB24D42FE33
605E3C8345BCAE8E072279A50EBA843179D2A95808D1CE24CF78652958EB8A30
ADAC715CF070A47C44BAD93D952A6763841D6D5207A8BDB9FF4385997C0EA83D
3AD039FE0720013D660C4BDFC2FCA9D28A6742AF910205C9B62146E86F913D6A
CD406A2E9041682E2C5192F197090EE5235882FFF6C169C9A3E1E6D2F4739971
EDA2684391831CC4E37F45277B62E03769C06DB70A2626B6321ED398C79220B7
B304F5F744EAF5DB260B14B3D5859FBE06922B232B0AC83BFAF49AA95B7C0C0D
3060AF32B145FE7CDB50F0C24D0AF11A161E21A6AB4CAA2CEDB52F9EC740EB57
78E39C741CC32E2D7F209C93817387E1008E89241DEF3224534DFA43673A0E41
90244B84241A7F524982C47DF34CB09E310FD1644CE582EB7FBDC53D90EDC6C9
D0C2AD47B679838CD6DEC2BF89521C1664A09F906D7D4347562C404D0FE57EEF
2870E0A797E0EFBF9FC06108C2D3CA63159A0300C7F03BDC40678E627A5EBA53
AF2DD411BE8E42D4B10E9085C6F770F2704FEDA818B81260A3A1AA4B2AC1083E
33A7800BBDCBDABC57592D173D97119C98ED76194C28DF9541BF4E95E51909FA
21A965428B0FC127B39D9A2488319CABD93BC84CF44FD1B87D580EC68142CFAB
9D75C4F6D6A73FB4C07FA71626373BC973423EA18C82839F55A8A6A0FEF2F923
41A948A8F8DD351882D0FD4A250382DCDB836B55F212F19C2A5C008E3C422AD6
A6011E641B73BD918AB2A143C4142FACF80F1249C3D953D33B6C8CD92A37EB6E
ABD8263983CDBA107F2C8E7A85BA09D427BC7A24441BAEA7F51AB95C11C210BD
B0C8F7D62D2446A2E1F94FC48004C54E1E8D67C8B7DEB084189882A704535916
0B418A2D69ACEF23B5105A0BE7A6FC13C4EEF6006E9D65A26EEB2A08F0000765
FEC6495BAF331EDB36BE642BF599F6719EAC28B40CFB665266BCDFB732F62E14
674EAB94BA871B3E1C03958AA2325E538C9D8D83343E885A9D61BC16E9E38A5A
389180BC218B420A01223748B495A817F99137847A2850BBB111DB5FB5C98BDE
B59F3EFECDEB0D9F00DD71FD26820F3962CAE33276313F87B7DEE1B057C7665B
046A438552C571ADC7C21185EDDFF259C641D160F82C924D3BAE8E7824DDD6BA
02ED8D5E381B0E3ED8525202C1BF505647491E885469725CF356762F0172AF79
F5AEDC98B4111935FAAF7A7DB810D73886997C0EA83D3AD039FE0720013D660B
9477C2C378C1B0A69949A1E14670B7441320FAB899D00348905F3C7CFDC07151
723D41908FC36867A627AC5B6E78F30F09707B9860592C55DC1AAE337DAE8983
15CEE46CCA41707B896D94D9351324E055FEC45769987F068E26B803BC80844C
9EF91A6AFFB8A1019F59C5DACD729608CE8AAF3A48C72C73E78898EAD58C01DF
56EB0E8BC41368F966B704A73CEB72AFD5A3521085B1D5104E767D6E85CF93CF
3937BE25DE46DA396794D9C59AE74D7304D4C2AA941B61D7224240AEC228EB60
50289B099CBFE4DF60BA3216B76950B7E54047266A750FAECED19F8E92B45121
CBA7D378A7B1AAF5F56C7B80ECA9A21F74718AD1FD1859110612CAC388A0C002
7D570B96192C79628BAAE81FB022368600EB75728D604133A44AC91D982CED26
A2E91A6CF66BA5BE3059A076D567F556BF49627D5AE82435113B8D0A9FF47753
1712CDFC6A77AEF465A629F42B02F1C5A129EEDDE9A99B48F5D366082E77405C
B38C7A634DAA07FFA25533CBA45BDEB49D8141816C367ED5831E10281F4DF8FF
006813C8DA871A41C0ACE77BAB719AC79C7E01C8A046181A95386257A69DAF91
917BC0E9B8214992F7AA291A9B95CE14D6AEF6AA4912E8C6290A81C6124C9E3B
3C13A8F4DCA4FCB3B2F24927FD16E57FBD50608A8314368A21E37A31DFDEDC4C
DD45FCBECA16FA5184618E121AC376FA2705C88486C25417C0C81D5A73E52C2C
F1E21A6C94D80957B6F034B4D7243607717EC0E9DB507F1DC32DA7C5CB636C5E
1D017AEAA5EFEA931D89AAE980962317F67595E24FD86E7D564F11A839EC8E5B
8120C7C84E027D50253EC67BFE723E90E176A345586FE53A6685C17437F7B1EB
1FD9E60D37C07684498D9CABA9386D3C81B051C44584AD5A91E195A828CC2CED
6271CCFE028FBFE326935DDC68DE7C1F36A1E693DE59D0541DFAF0AEB6AE1EE6
D08F1E6042DBCDBD1880ECEBA3A6F9965049ACFDF6993996A13A9E0529E345BE
7A44A59B6623F07A3502DD4F60988C29BC96128F689842FE797BA7EE433E7586
DD8500125FE9274A91C1BA17B808701E97DD2F6109643A183DDFFFC28DAEBA43
7B2273D5C097FE972352DE294B83460AA67E843536D98526EFFB7971E9A56678
5CD0403F2CBC985B2DB620CB5E8460B4CD7BDC0EE640F4FEF68B2EB610E5B65F
1B747A93DDF43CEAE998733591F7977C9EA9051E103920420120F10414695EED
42E02CEA52564490D314904FD015B61951C20243DE83A0B74D64F4580971E8F4
2EBED743611100072E13D0FB989ADBE830F455B26684F68B88C471A20CE2D9B4
F1FEA56902F01DBAFA06D8336A7F8C638598DA8F2F8CEA8F237A4B642F747936
BB11E21AB5B13A4DEAA6259C8E1654D1C2DA5E6D5FF70F0BF5813FCF76503D0C
78CE7119296670EEA02CD22E6BAD20BABA944ECF415024E914B8D25843DEBB31
77037AF0B0020ACB81E231E7B988679E859B18B0809E416B170067B51D063FE6
C6D3148452A0AACDF40EF7C7866BAA8C2D8B87C6F187B9386267A4A66901948D
B13F9287B4CF48B7B043325340E340AB4B4503A8E9C2F845BEADFF151E1B6BFB
CF6B62D6CBF50617E019030AC0D98A422438DC4AFED3B30D07D4961B80E8CD32
0B25BC09DCEB84DA9FD024FC4C3A5E78C13FCFF6B29E32CD314A0CB19068AEF9
BE96DA47CE4B68E345A8ABBAF0A9AE768535EC2DD30B9899A552FA4CBAA94D44
FFDA86DD1AA3B98EBAF41AD490512F330DCD272B15F19F8A0469B071F028E601
051F0857C29192867A1094C9A7607AB9B9BB8106A4DAE9485490060EB0651F60
6E678DF2FF576BE5C494D3BA1A85FAA3668E52F131331AFDA08CC184B66BB482
910546E781C7210AB441A416BFD4E9316C509E22D20FD8C11DDA7761B1A0D574
29D6ADDC9BB1C1156CBCDAE0DFD3D287387AC102F97CC8D362AB9D91A7ABCDF1
6EE4705ED92A4AE54C9CBC34921FD978D547A92297D8B4DFAADCD9247310B945
8B6B7A12B47A6392ACFE0BBD623C99C74E1A0AB3D7BEFF3B4F88DEF4E3C63B03
7CDFA5ADB906B42130D480C76F82AF2F157AF42FDB1FE98DCB81320DF07DEA87
EFC6AAE69F73561A8830A5AC9B7E7C18D5BBFEA8CA8375AB7DA7B7FF2FA9C2EB
77D6CEB6F20266F113A068458CCF339D3CC4882932BDEA2B646DBBF5A0001216
B9074EC84251A2EBF37123A6C22CA7331E027FD6D3FD81D4A95C25C8FC1C5403
ADD0349A827E17794C0AB1BBD8EBB0F647ACD2FCEE4B184E4148C46F02C06AB3
23D6080B1F514A65600DBB29116D937B4066DFAB2363C70E2C3171D757DE1531
886F75567E77A8B604F45E03015795FA961174504C0C3E3F02BDB58C471BA96C
C445D7172A15F4335BF3A891FBAA225FD64BFAE67C44795D506C1AE6D2042F57
F548D73EFB29A3C9FAD06D5CB96D262282A4898258C8A8AC53C3E9B70C329BCD
9CA5DF2F8CD8B2C8E3514C568E5D1DC854B10AEB7EAB2007E231575527B179B9
C6ADE75298D261EB80BD4D7AC036C0571DCC990C60FBA08F67D636C12BAF01F1
04EE85705F8015B05CBFA80D815DCA5268A109DDE6B2B61F652CCDADA2F3E1A2
EE1F6FCC07D3ABA2CF401E5D8236A67019DF1E665F6CB1CE9830EA7A9C8E91DB
797F21FAD8EB29845025DE74A798537B1805286596FDE8EB0520FFFABB84BCED
B7E130A8E5DC232593EDF90D8C4E366D19BEA298227AFA967F73BC5D6D0A0093
DB026834F3E9BFFF09F9077349C96608AEEB39FF1D17405A3620270BF01EDE1A
3290EC4CBE0D21D5F5147BE27BFA25D69BCDD3AAA5968A3ECB23D1B03FFDC39D
A3D7071D8E5134A27E8A5A106D86E395ADE502AD664E936D20D0D9A44241610D
53AE6A1B077AA725FBFF87CD4F8B0D9C63DAFFFF856B80B3279DF1E4EB1D9131
5F66AA868C28507D97C848C3D061C82E64F559D6AD28E3484C836E5DF9E7510B
788EC33640801154F287A6FBD95A9C0863EFC3F5AC56F4B051A30B2620337030
06141477E9C16131CF7065F11D04A436EA550775D30B3C92679831A59C0FF5B0
FDD7C26FFEE88874284F72237C1378CF993A73530B77F5FA31B09CE366E03D5D
8E5CF69B1086B58AC76FEBEF8656C4567603A80BAFFF3A40A7241CFF20023155
6BD4E11826EC6D1BF0D3D7F69020B67A6F96D92300731D8BD5AA40B952450083
32E6B0AEEFA3A47CE46057E6E943CE6E928C947F30FBEC1FEA5FD19A0C29A2AA
4A73021655CA4F7C008105C677BAF1DF07C5ABAF234464259D07A0353A00C669
65A64782EA5F9C5DAF9B06D6CD9628C061F491A3E6DECED65A8BB16DA3E011FA
2B757F02EF6276EE55452AC5CC89E9EF45E215528ADEA1C1D320D60CC05C2478
175BF6B5FD497380A0E5647F8B1C906E0B331D256FF9653BCEB7AACFBF26C745
5590FDA7D9F63ECE5EA6C3AD4AD35C0F7A8403B2CB2AB40AE9F9B354D77F0EB8
7DD9A66422C5E472D5998FCA837F3D2C9590222DE1EBDC0011A247582DF33C00
9DA12ADCE4F6CAD515667BC689CB2CBAE3CCE56623CAE0EF9833304CB4345C80
692F535DAA3639B351C8EF330672C9584275E0EDCD8F47DDDB8C1FD5D6A3AA49
17F2669259B2A280439AF75932BBF6A5C4C134717FA338B17B31C12ECE071CB2
5103C6431D29D37B16D2C09E9887BB264607F6FEDC37BB1658FE1B44856CCB3A
973749981546A33828A5FEB5EABEC1B223A217A89F4D2BF10C0FA85DBCCC3809
0EB4A33A4BBBB1A93EEFD889146AC58C446DDF27B3E316B429412FEA42D1A4B1
A09526F8CE866E938834BEFE5FB8046BA34E3CBCA440F97FA94CC6D3197F3679
4D1FC124EA55DBD95553AFEB4DD1EA87BD5B92A62CE6BCF095DA482A4E9D8A29
D87BF206717E2741A0D8264EAA3B6AFC37CEECDE1DFC1F2E553657A2E0B1EF03
7264648B0F43152CDF4BFAEB5FCF00781B5FAA2FA8E3635ADC47BE51F911D017
A3281366B48A340B10042281C8F813550F0F3D47BF0AC5BA7C001F0BB0F9428E
7A631D0701B547001CD83C6BC0FC1D8AD4E0F00272558FB99667260B59F58DDC
2B0BD7BA4BB366357C82CFED2502C765BC46825B83A4B2C25A56E4B7681BD2A4
E6874D9A0C4A787D4E5F23D613AEECFBA6A7980C1BFE78F9DC3CCDCFDF8188CF
E371D039DAEF18C95D4CF4222DCC74CB3A6E4C5685DB2251E2242AF69974F34E
89B3F38AC482D14B95D58B77E7341B468E3F2B7FA84382621BB37D4EDA44CA0B
2C3E1DD1EE062269116C6E01175DE56D632523256C3BE70671B809D61FAED0A5
206F65681738FF1B851166F4DF9137EEF043C756A238277F9472D2A12C9D36F7
CCA0ADBB4D53C5BC75EB8AED72C2AF3F39B9F44A9DE53E47A50F42F8958111AB
11B0B27C292C8F30EC9F6E15A51818AC249383118C278A8DE53E7EA7B0B8BFCD
F9657C416A2FBC84FDECDC847B434E3BD2F8E8F5AC4B5F5EB63C17C626231A1B
2E1E395397EBBD4F8CCE98A000C062534DA410FAF48DAC9A6433E2C4E3EC1769
D80438009C4FFF5F0DC1E6A6FCC1F86F866B65F7F5EEA0D7AB63666F6E32F835
D67CCD4017C1543424039884610387409275A0EE7AC30B5D1002FB770916FBAB
E6DB236656E7B7FBA305BD8D2C6FF35AD4346943088507A8A50F4CCDC4E77655
7BAF5B308C498E5A68F3BC6BF940B24672F73A962F7988F546AE0DE9355659B9
9A67465C76E398A6EC0E5A472873FDA5992304E476CFCC76530355A9967A3E41
0BBF112BA75D4C1AD7515A1E3344EC2F9B354A48713B4925F38314A14062CF96
26F9EAD2550500011CD82B10C375592CB3356EAB836DAC480530336869B857FA
E577672626C76849D33003218854099E8644F3A08895BD34E3379C25D850F23B
66DDC572293E83CBACCA1A53495CE8EFF17A96CB95D27EFFAF39D956819CCD09
9E8DD69DC0403BD37EB059FE2AE18365927C7FADCC056E26B4D5C3AABC8C11CF
4D87C860A3635EDBFDD193B96FA9E7D40CB1C079B96F912A277D0BEB70C6EF43
B18272431F91B8EA9CE43CB1670DE71886BC18D419F24E7D6F53BC1E9C2BFCC7
ED2059053B7D4B10EFC8394EE8F0C8504B9086609FFC1EEC83BB56758436A609
3935C9AD1C2E83DBD6AD1C9F12099295F38491BC635E44F7CB7EC76E8B58BEE2
F51A1DD46538014F4E29FC598B067D9CF30192E7C0F1EDC27081CD501BA1AD37
66D04EB39EB6C52390496B640B1244D999AC949E515B300F156D1A14AE72C74F
9B4BF3C91FE6579E0A1DD15488F06C37E30E4EEB5B98BAD14E541FDA2C07067A
EB2663C41EEDFEC6FC09870C49D2C38C2EF13FE433B4092AB670DB9751BD76A9
0E2921654FF33BE61CA7707EDED071F9A927A37B983EBBDAFA4539A6438E26C0
4AEA61040620E3E51D38EF3BF5F985261416AD75C33C505CA64CE82103B2AF2E
61D4892C4CEB30144C53A101612F5C8410F9F4C326FE9326601497BD9F11E44E
749A04D3F386BE4E5543CB63168663D3532265F8D32B32D8402DCE5E45107FF3
133C6D422A78397813293BF2CD6170CC06EFFED9F2798B38A3426CD06ECE3618
2D11B348C8E10FB7F038ABC86DD5B9375E52A6DBDE1F6DDF4B050D7D980FA3EA
AF7EADF9B21AA9AC2C8543171FD23BEC72B3D43F94776F81B7695ED5173C9516
97615CD53EC343C11E620083C4817CD43B1EDB179560C9DF5FE0E46EF57859EC
4E3E307C1B73D92B41C75C58B361137C2A878E540A07D9E50E9DE7F1ADBFC59F
D990DB60A1B058BAA30A21C0FAAC8D0AAA25EBCB2F369E32C7E50A4654EDEB9C
D8676CF7767305CACA53903867AB415CB6C31B4220CA2E449BC2817B1F5B4DE5
8E13A781D1686ADBDDE1179E698423B4F1BA7B0F9544961946233BFB65EE9BA2
7729591D18B0B2B0E8E8AD6232AE20D6FBE55A84931A1C0987F4BAD842922794
D6B6F9B7CEFC63F3445F4839496F01F7775296858226450A01D02E986189012F
5925C5DC14AF3391B68DEE20F853903F755911A900FED6EDE2CB5661475E1A12
F46B920ED4CA54870BC339A9D5870507907507ED492B8DC2BAD472111D891F9C
96DA5F664F415612B53614ABD1934F59AA847FE7FDA469611D9D4D5B8906DA9E
BA966096FABBC8C8E5F626CA8E92EB02FBABAA43DC0AA11970D6FFB3B06D217C
5CAEB9219C006F378B712A5BE446EE0BA4D912E005E4823F9EA8E3A8294D816A
B0B3D12FBF3ACFC1F41B7707ECA0EA73E1EA898426DAC13E567426DB04D9E02E
D93D0844463C507F386ACAA06BA208FEB6872FD400EBBC519A78856099209B9C
E5CAABAAD46A94D8933F3CD369E7EF9F367C1932A115DEADBFC3CDD927EF1D8E
8617C8947F40B2A55E645B6137D19F592610F9D20F5FA45FB77790DDF5573EF7
6D0F789274C1929A4A45A6E9B5372BFA5DCB4B9E953E0AA31E63F198FC6F7417
DBA9B3CF6D6F6131FC0A0E1B4FB45EB8EA17F788A777287092B6AD298A509861
F86B9163FEB5A98EFFB04E46A03F6CD5394FA5508EC4D6FFD0C03FE62CBC99C0
E02D1CC26702E68F7906991C23ACF37034D1BF7A440F870DA4B075138C18CA39
161E36F0735DBB56FE1FC81235CA6DDBF5E34AE3F67B171A47F0C4080D625CCC
98CBE4F4D4A3371A4C2F744079F0AAFD013E430C636119506F3AB94FDAA26C1D
4771844C6D0585F8CB68083E1E18979CFE485F23D613AEECFBA6A7980C1BFE78
F822477F106949069FDDD2D4AB5067D5EE8F06D4E85F8EAAE39370170825BD60
7CF65D9604F020FE8FD77D8301513C9BF8DF913B729D16C30762DA6AB4EB29DF
38C5B53DDE24E644293E38DF4814A42ED7E77758279A36A14514BD26F04034A5
B44A88180F813753B419289DE843C7654B788E361A0BC8BD0437CA7F9663DFE2
8514B46CCA0E57EB2299A80DA0D7952034AF483D4D158BE14FCCFDE6084B9F14
026F0646FB715E15A5B244B294B5D9B2843FEAD8C96C849CB08A5A7FBE648A8D
2F3ABE22A9A257955E74F8AB2426134C9C56E6C9F6A83C65526780FE1F4A15EE
ED515622A8EF02A7D10E4716AF17BB14422C329AE0BA43FFC16F6966C8D2EC37
F4B025E2709855D074E7F2E2A650C0C690BC84861BE3814E078B46A749DA34F0
41096799CD79D72A07B5644720D90FACD7EC6004955165076E6C2878A8F4AF5E
70B13F6F6CA317C1A7351FD1354E639B90933AAA733CC8ECE6D689B0A17D762E
A2F59551E03B0A15277EE0BB74FF33C226971884A2540043B1C4EE64CEDC5831
7A06216AAA4DD8371686AFFEE819C2641A92C837400FA677D32B6563608ED2BD
59215EB8B756F102BB9B5651A8B4AEEED926F889FE9C667072530AF552EB6B87
7B917917FE823AA0D0E221A075F130F1F1D2030110741A5DECEC84D260AA0BA7
37E27EFD948F6540A930BFE08EC57CE103EB4698A8F484DBBB7C57171F5C72D1
A178EC12E8AA489CE6B0ED6BBEABD452F927C2308C96B3EDF7AC484A6798512F
B334D5C278F0853C03D7366535BB783D29DB92310C46CA1A20EAC8F92D7C614F
ED0C71D5E48CAE97BD823C0576111D90C98206E38D49AF3C0128B03786BB3EAF
B757FBC0CD08640C77A1A62B42A26FA75EC588605732F3CE021A2D8761AA73AD
2E9B8115F2BD0997906704E49C9535027BCD8D64AC7F49AD3F61B4078D6097D8
F86FDE4E1340746F78B8A490C950FF790084852D74EAF5D173E21ED3A05C0EA4
32E7CAC0D52F842A6A6021939DF51ADF85A2431697737A05DEAADC6FC529AD6F
4C749DFBE48BF3D3FBEC28F7CB55A617CC9310491DB643A99D22AD65B7BF32BD
714A8F491E280024DC007B6A166E717D41646D83D4055C412E109C7A2A808449
F44D04C8F05A2A14B236568043D0E4A1F25D25149B2F24EDE00B110EE28DAFF7
F66860D0038F6DAAC438A94FC018D8E11AFBFE4982F679177325A319799F1223
3BD5E743EE91D52F97832A2730DB38E1CC0E55B4446473DE6C8C6BA0910C55CC
39B53E6F9E5DE2D1F66C28E1A263D7E0635FC8F0D36203B45F50733ADC859670
06BA5FCCD1ED01FACE7CBA94041CFF9EEE540AF8281083C9D346F0B3F1510C2C
5F732454AAA547123C8464B936B274809B91FAD17311096BB16BDA1FE2534594
26680DCAD7A706F7F21049900A5E0B84C0174E6A07E30BC1D35EAC6478471374
248225A630C8932DC4D78FBAE58DC0B5EA705425D2DA4E030C606D4391EA7737
0AA8F41315049B7C45C8E09198835768092105B7DC4DC91CF778CCE8F9CFA84D
93BBCBA134ACF9541BA4CD3A2F9A34E07E18F4E34BFF594F18388BB171D097CA
CA9D12241F2AFA3A9044DAD4334BAD9F31AE606FFD42B435D380A8F5B79B9C07
331C81DF51FBC45BE43685B0144AFDC37E462384EB3F3FCD499456FBEC3198CA
758ECF7BCBAA7E81E8A25A16DCFD325D6FAAC3C40D75400D081CC77E4AF77EC3
CF90D6DA156AF59B3F56F77FE8B4A8389EC4F0EF5A35DE194AF57E80951299EC
D11A6672ED72EE73A87E34FDBE500BE84FC3B3BEB53C0EFB3538CE60A9C87565
CFBFE7B34C33EB313E70DC56F0420DC2DB48D0A84992227C15BF212DA17E38C3
39CAF82E19413C41B247F3F1958A6F3EBF56A72088658E5AE6F63445CBEFF5A2
85ADC713556EE5EAC1C1EADCE7ADE4B124066018C9FA670F918BE5FD3881744B
0B054924CFCD5FEF5CBBC3371BF4BF97B49109DA6AA4E0CB4FC44D77E4B1D174
ACB64E03AD9ACD405BFCDA21A67FD93F94AF98E5419B2CE491EEAE8300F1C779
E91313E45F5C577227AA68C190C515F03F5FA40231131A00DC2A4E2EE4A96379
C955E449D392300CC4933DBFC87ABEAF2BFDC1952C66A1019319E3096FD8989F
C5C093A824E2444DDFCF56B4E01B6C1FDF53752834D5A2C6C067636A69B1AF18
796B7FCACC91004D88E18F47386DA5CB8F74B0F8CC6425C53A225980348E17FC
AA33467C0DA4A116B27982A56F679D65D6F7150D631E0B79DE3D43555647491E
885469725CF356762F01779382436D7B71E52E4114AA63290F10C98C763E33CF
BCEC9A2D13D426B95F0EF50225E2713EB76CC6A0884C2C17A7CD431BB67BA59D
8EB7A00B5A38964AD9FC71490ADD5F6984439DBD3A74F8C81E8069DD79D334CE
C8DC72CAED72650F89E7E0B1538C5D0663893BA84327B703B9E085C7AB14FB9B
BB34F4FD98DC6F8448F94BC4FA4D79096233696F227D484474B662BDB92283D5
32C9C58BD758A38CD30BDDB12C5140A1BC75978A0E06993B665F73F8A8842787
A468FA39B093E77CA039E7E4A5E564127843782BD29EFD30AFFB67B389F60215
982BC114D1424B79CD0A78625F4DB4994DC7A93F2229F0B332D68E480241B347
367B30AFDFD12CF23A02FAAB0C28D081F1DD6DC2C82D88B0BF013AEBBDBE4F64
3EE587CAC33FC9B0AC672EB697C2CE8E67FFB64DAFA43E89D6C65BA6C75B25F4
F2437B478FCCB744CD55A2E1DAE7C5AEB7FB80FEC1583A62617891054C2BA289
17B2E6A89F75F3E090F96003095CB6A11FD2037D5FD25FA65D96A214E3614CC6
863D1A6917E6488BF7469089612BC578D3C53A72C74A4E2A74104804F9EFE932
221CAB88ADE825B479683F94365AB74A10D01641E1517DBE8FB1B1F9641D6053
7037635059D442FBC209C1C68063DAB0E8784A5B2BD9929C22B3AA08B065E344
4FC2C65B6338007257446107F7D88608108350947148EF66A0139AD4F6CA1AC2
4273481FBD4D0508C37B4553ECE439CBF8178126E4FA8ABB03A1C1379F82940A
CFC9653AFB7AA3B19AADA1F19A4A6CA81640BE7C3CC839B6E14230F4B02D7170
0B17E52CCD1DA3CBD13B129F1FBAEDF6DAEFA530A835479D3FC7623589A42438
2D8DDB7C15FE2D9C0AA88D7A7556309D42531E3E57206DEA6C7ADF134CA24FD1
6A1D1066A9D8C620BDC0F22D5DCAB19AF034CE96F9F3A2E9A8E1EC386BB249CF
5A630EB493CB50484FE730C540D33E727B2934B6F24411F968716E5FD9925630
5EF1BEE4E67E419842CB112A906FF42C0BFCEE123D08D4441924CC860D4D43F5
916403176768AA4BF95D89D80CC18720DDD557102050E96BA9675D0867ABFB78
EEE5377E85414898EFE6974D359CF468606EB81D3C4B6C268F7FB5833C960D1A
81D47C3DBCB7A16C178F50C5155EF29F5E817F704342146F9744ECD7A5AE0AAB
0BF85B190D2DCCB4FAFD84E650CF6A01D38E141CEC8B8262F1E2097514068D87
E6C0B31EA0DBFED0EC4599BB37C86B3D39704CE9E37D50869055DFE6E6478470
ABFDECC14485B93E93F5698B571A023F50638D98591C649330FAC3A1CB71BC1C
FC9E4020BD19276C9E536DE56F6D3C578E85ECB31C837EEDD00FDFF3EECF3EDB
A686114B6B8FBA9A9B1EA948B9E5775FCE5AEB0F85D102045D5F93D1A9C9B08D
902ACD8AEDB56883692C47680AA5D521982474F4FBA98A405B6988ADD81180F5
CF28ACFEE7F583F01014F42C1AB7897DDBA70762B57F8AABD3F4DCF6A463EE1D
3CAB66A11498104464EDF535FB5C14DB4A44C1F3489647FAFF32742A0E44B6D6
9866718F4A063A676691C34E633A1794893C96F8D903B7C7EBBE81AA86B63317
2566931F05FF461339D47F8521941D6302DBE6635CE50ACFED8F1783C421261B
D6C6CB41126994E649A78C27A3B3F9DC9186237B6E5EF52043FF4BD63D94048C
7CFE78B89FF1EBF6CA6228F798245660D7D0F3B3E0B5284948B072EDDBE949D5
8AFA9C0ED975D2BF9FEE69E7E58511EC1E2A0881F1D9F83FBE894965FCEE7FCC
749807F1FC84A0A07812AD0011A247582DF4E47A8F037E7C4754B3AD5B5B9A1D
15A301EC81DCCF37F223A2BC1944DA3D5F2D0273596AEC62D26791F231B9E2E8
1213E3FC248E61545D33C5758410A77BE4665A4BBA51858050F4C87553167DDD
211FF951E6883785DD1B1942F3C7A935F3EDB7730C867B2ED2D47A478E036763
B01E53DAAF2C8BBAF34247921119735B5163F254AA68F39843B08D99870E28CC
322A4D8600C5E142E4940A616DEC855EB2AC38BE3AFD7CE7D53D17CBCF754838
7921F5A3F9234B985E86EC63878694475933BB6BE0DF4DD71F3253730ADCBC35
8F5CE9D58FC67740C5FE7DD8C2B63772FE198415AEC77CB9C6A476CB60B2E52C
AC9DBAFEAAC78612E0F6A94521B7FD85BC21C305ADA114AA3376B02856A9BDD8
37F6C2FD5D753B7FB10D50417765D6BCEB02A65AEAB5DA0B575339DAAADD7AB8
CC92451425D80E2E58B3746A6621FE44185F93CB5A57FC89D94BED9769916C9F
CD34D40BD557911288978AB9D9FB52F42AE593F6C83BDC7B91586DB2F303E56C
4586B2EECC30236B02DA4F780DE2D741466C507DA5BBB97455CEF1B3BE829BDB
400745564C17EBCB3A206C2D71068F04A8076D930D9B6AE2D6AFD9DFB85B34F5
B1F8666B9F92853B4BE4D976625D26096ED98C849468D0350732408473E4701C
50FB10A9F2D32FFC1881861A7681A9800188C1FF255C45C5625D3C7EE0F287BD
D0C637475C4C86320C7D06404797FAF1ECB174DE2D608CD8B09D63B134DADD34
73977DD1E4852858E1B5D9874828E5F3F41DE446C3AFD674252280F1663F95E8
208AA0494F342866D048C667C28B020D4873372E5E25412C364E8D66FF93D27E
75B0F205BBD6DEB54AF9A9486C0517461A30B5C5FCF3C7F151AF0751ADF68088
3E6F01DAF3ADB696899DFCDDF55BC7CC877C2D67B519FF5F055E4E9D0DF03D40
CEA90A5152FFEE5BC3CDE8BC97D8670FAEFA6A10FBFEF59D6920AA79940E5CE7
E9F657A226F30D9F69ACDD20743A33F38BCD76F632548DFD06E66EDE64988A66
3E46BACE7FD9A42C35A69B272A0611F8DED0BE07D6B7C70B152B2A8B302A6414
9B8B89AC2667EB06D4AC8FE93FC515E599FE9CD17B66226CCA91D880DA1FA2FE
D9A545408898738536561A941706D907D172B93047562F35A0CEA0ACE846E8D3
85C6735DA664EC2324BADF89FB5B288B3AAEFC1FD7539285B1E2AAEC6F04FEB5
21040B38D49FE55B901D0342B286FE68D24A0A910E4D4AF7B06B4847CBDA76A3
237E8DE6387C5E515E4A5E643C8DBAB6C773B4E3AEF6ACC4C0E616A2C021E1A3
F873C57EF8269FCEC4543F4C76D66897C9ECFBCCB9EF8F6EBB18224CD836F513
F29D47EFEF9CBCA96428D1DAB2820735653ECA5447012FFC5D87963D55DCDE6D
83529CF0DC59022084A0441858A4DDEEBBD494BCA887142422AC073E1472D775
6576E72AF0A395DD894F2D1F747EE5943AED29D6F9FA2AB547270B96B7680BAB
0698F932D7EC189F3E2BBAE3CAF13156F7223031438A18FCEFCDAD6D9E6DAB1B
CE5250E12295107F0FED0F41776378E681E69E27E70DBC9C56C7DB23DECCC19F
442CE799B0F19BBACC74C8E545510729C942781F7E24290A0CB4CA068E9D52D6
0B0A88234EC517C0BAF9A158120AEDA2F428BB4D0A6FA1DE4C23D936E17818D8
59ADFD5C7BA880A7EC8D9E87304E070C23ABA383CC083B4B34515F78B2744026
51932E33DDD8867C35CA1D17FA7FEB092226C35E8D770C317379DD8A2F42508B
13C931DF78BC38A63EADE982D4F95C21CA4E200E83B816F536D5B0666685ABC1
C5E63088E7C1A1C940E463C1FE3F5AB3EA300FBC345FDCFF02B82068D8E1CD89
CB1E75B9D1BE58C059F9416ED5948CE9BB20102F72E5986312938C15FACDAA4F
F641B659F53071D90B511A137914A797B53A17F7CA014704C7C6A8BC314A71B2
7BD39C6C846DED23B589D131D5C07B39638BF5D03563405CCC9E756BFE093EBA
1AD355B2CE95A8A200B31EA5BDC18608AC8A1EE43835AEB5BCC240AF37FF1439
4FB5712B2E377B11EF9DF5E75C3A72E0202F77254DF3CCB2408689EADFA55DF9
6CCE46710728B213CF8B6A8F80B8F1A22AC2C516CAC29EF065E487C627295F22
BACCB2E2E43F6951F70DCCC758752566E9A60989AE678FDC3D19869C5822940F
F0891DD64B2EEC6A77F862B455F9D027D637A3AF462D7CB4D11B5719799043BA
F1C5B8C9F533A39D7200307EFF7A6E84663ABA9F8D32A3D9A36251A6ADFEFFC6
856D1E80F22A44DD4C10FD74727F589F0D32B0020CB1FAC2FC4ADBD049B617F6
BA919F36AAC4542DCE3A28DAD63CF9E658E3FC995FFC0067571652F8DFE907C7
6EA4D813FECFA9FB8959FD556DCB1A6109742D4375F51AD0C88EA18934D5B651
7A27877FAA786A885AF306CC2077291B7C762767AFFECBB5E12392EF015B8E53
9362ECC32BA1541AC7543C87E07DE0DD071DB6713B35A427372F9BDB0317F34D
321D9665CA1F0040D4643476246852A8010848CC335E6E0BCC679108E8F070EF
9BA6F9C490C127EF3954FFA7EC2D54A092CF38AC39EFD8AC2A0FF09D22B35D47
D2DAC04E1DB2B3E9C2A1CF6C42F097480A9A201D48B76C131DF33F92CEE35CFA
D49E5EBD305C2E33F946B97A5CE4570830766C039B28D34C08485EDB5F045E58
1D5A6FAE18E186E23CCEB7894BCE828D7918B6698CE5D1B934FC4A6C34ECD6C5
40D70A76074DA980910AE5A49EE5D7EF71DA68A1248F0BFC5C8CFE0E7E1B4C45
E25DE7A63615029BB8A278B083ED28702A66AAACA0D9FA5FE3D6D5D355ABA942
1F8985D6975447DE8995D7DDAD9084B461F49D3E8E60E95FA47F446404F5D066
F9C9E143E797A06A6836E8AD756EB9F698B0687F579926A1A787FCF71DD7EEA9
9B4C6316665E99AE5BCA5ECF6D36852C033E64AB5ABD5C115632105DD43D5E68
68305B3FABA435215E9B4784C50B9DEA218D49014C14DF5405A156B47EB79328
B0F8BD02DF06A20BB36D7CF05578D8342EAD794425FE9ED280E88497F7F47A4D
9550CCF96DE5E36629C416B2CDBFA969401CD6F34CF777832A19854D600285C7
71B74CE387DE6DE3ED0A447092695AADC5C2E127EEE595728ADB4AE9B61070F0
735D53B5AD5B48731ECA09DFA538F6312E85A838D4AF882B3BEE19218D5E503A
4C9E910842175461FEFC0BD43CEA686CC9679461C44258979B05BDC4DBDE6A76
2A7C1540DF59035F8463A7BBE8345C8104518D3B252C248BEBD805C79453E2F7
2D0184C53EAF2C5D21D01AB5E29699AD96158C4BD7F8F1D7F491CA3A08D35201
98FAB676EFB05F26E54E9D6D2E90739E7A862BAB4E801C24F344C2E32D5E81A8
48AD437AFCDCBF200F6F469EA44AD31298ABBD77ECF2730CEB793B35C6E9B87F
A9782BE3A5F9D1DBE9D9B9E589DA1513B4B1AD902D10EE69DE66631EFF76370F
3E99BE894B9C4DDE1B2EECD14DA19226623D5EFEDE41EF08F5104419888F2AD9
57DBDEA6D1F76127D5387FB0A538904775631FFD3D2BEDADB08FD5C0FA60BCA2
D9F0C1AA3E7B1540357845CC9048EA2D0C3E4C08AA0B577B8D242DE9C7271D5D
C4A09B727FE2CC47E4D6D0FDA00C63DCB5E721BD6FB6AA1CD9F72D0259AEF440
619F807EBE117E0637CBAC19E0EE75661087E2313C03914349F22BDDF32D1201
34059CAA6E47FD751602B06ACC78CF7E23C21B7A478EB737B5EB1D90CF068495
84C07D095D37E0E7D78F5973E13966F63C1AC8379A9953EB4EBA2D50F6616AF2
68C77B850EF88FEF686C29FB3468B109D856EEDAF9576901A0B56BD830F887DC
E5C52117E3CC321472241CEB0EF90E3046481356583C361CEA6A569655F904CC
D5122FF4D2CDC4627C3DE83739EE6753E566F8CE3D053A16D6BBE16643A7DB55
9C794A4030405400D8F0B108FD280381F55199651A69A628EC2EA8EE46EA032A
11F4CCFA93F969BF7C57BE39AFBA360FF9632AC0CF71727B4ADD39E7AD35C76C
9ECE491CE05D68689F0CE49F6E563B43CB72648B4E6059624092C28EDF721E1A
8DBF553F85C78B6137321EDEA4976A8520335BA9279EE9F37D69E2AAE9E6637E
7B13ABB9F1C58BE8568E8A0B0E281B0B207592D5C2F0A4972071339A600F4DF1
82525400F3DD7338ECBCB52997371AE6B752CFDEA4435A250A1F2856787C5A49
6CAB7607C8BB2420594ACDE74E4CFADCC64A586F7A6CD7864D20E262B0875672
3AAB7B7C07F1CC744C280F826760D9563814C36AA9A059E909AF6D80E58F6938
A35C5BD193444F4B487460DB8E41FEC2E7D1A69297798FDA70890D33F68A04D3
3871107A2459D0C58F43117C4A0145A48768835154410CFD979EE34C6DFC3E89
A9BA2FE67C5C17B0D6C7A5348A5F13061E46EEF670AFCE34C0359EB1559FD0D3
7BF505AF8918DA6168C0E6894C772EF68085DE406C839C0EB5FBE8225B48D0A4
7375AE02723AF127C7706EED7E7E00CE047343C745CBEEF92AF0EDD7BE509071
7BA8F0171A6F5FDE25D3748BB80F070DE0B4F2A2A13C27F547C255B5450B64FB
56926C71BDFFDC078DECD53802B1638D18167957BB9DA74BC82FBB766A0F3B97
9ED15FC33ACD0B01331645C0EA34CD7E29B3DB6684E66FE70F9729426EE4C8B9
9646BCFD73952860A8C04CDE017C89CF4837CFE0BCEA81B4CA5920DBE94107E5
DDE839C8286AE6A9C0E952B3439740C482013C337772D9BBEB0F1B9FB614E42F
CCC001FA0114CDCA48982CADD1BA4CF81D86F3C4895AB98F709F5E0BA1681547
DFC8FDC90B24432F4C7DACB2471B325735005E92587DD9A0A7765A16C25C29B9
5611AC8AAC3E451292685A7A62FB893680109CDC6EBA3136F82C26E6B1D74382
5C63839B2777AC51738B08A8F7D2C898292E5BE41A2709E640670E633BCD0FBD
8F44920B31EEAC106DCECB7CD569CD103C7972E203907B14605ACC018C3418BD
B264E553184F97BB964B2112644F38994B42413071F9C0DECCA2DD8F53D394B4
223E383A5ED370323E811011C0F9515EFFCD2081A2240DF03D81655FC296641A
DB93B6738C0043153CF4D2966D014E78B19D7A4F47C6A696D76B6046E544AEE4
96B90DD628481C2E4CD5BC5104135C4420E7BE523E9FEF8D200D3BE7AE546693
B65F7C24208C7AADE37A48576B2C15202C4FA73EB0264C219E2BAAC1FE1D29E2
87DEB698AC02559E66978A0FADAD74EFF87C94D3D25FE9D250C4E4A9FCFB45A4
AB5784328CDC82BC71CBC06E8F33344A02CE3961F2EEDE81DFD6AD9056D398A5
CF0BDB326F93F95D87EAC50CF94D6DC5EB603CF671CF0452ED8541D7B027848E
029F43B8C5D7A8F05E4037809AD7ABCE38D649F247B801A359D253C1720CB020
6EC8909AED5C59FB9B69AEE266FFF32ED39D7964CBF45FC898765B45A66B5D06
B1F20FA5FEE99664B43CF006BC8305AD88B86337DBADFF3A5753BBE3305C920F
81D9CCC041A9BD0B5BC88FEBBE0CE266F5B06B8022D1B2D9851376D5EC6216CB
8BFE49D0008F5BEE20362CEDA519E7F9A46C326BF2F46C39300FF57B51810270
FA6AB5B166EF24844313ED21F33CD2ABCCBF98F90D8A7E3871444B38C7E3D4C4
DAEEB552062BFA4127992885CC93753F7CFB75A9BDA4845714B3BF55162D50A5
2F66546E883A1AFE2773253A8C9B7CFB565E644658989BB9CD2261A6A426E0CE
046897EFEB89651AD159CB2CE1F65C999559823ACD1314500313A4EAF432BD4A
8EFB214F4DB1A23BC4418DE48DAD9020980DEBEEC05F0376FE1661C911FE7A3D
25F7557AE1981BC8E8F714DCD93B808686202C371573957842EE3265A1C68902
AFB840570E6ACE181258C67237745F4ED6BF9A4C9CE10CBF3D9658598B28C8CD
B901CDADBF93503C7471287E373FC35CA6B5F503043C4294CEE3CE4433C8A1C3
CD1E9110C81BD060F57AB7354384E58B9D130F5ADFCB372374A917ED1D0F9F1F
498A3AD4000E9FFF5B67B1BE25DA34D4D9D8B8F7E69A44735ADF573F63CC0760
4C67EF9361015FD1226893DDA66728518869419AC4550EC3F97D251C2E44188C
7D0402B4D2C2D26624D0B8C130A02477925A28D4F65193DAFED21AF818426559
6AE20D0530BCA27E73853C2F00B3F6E02412E55EF026A7932852F2504AEF326B
7B4538E3A0709B0275C283700C28D0CCEEE8110459E0970189EA97894795539A
71C679B3EE17EBB88144D3614C3AE062B5F3928F71FF47F4F62D1F26094175E4
EDE95EF5F8E949553AEE9A4B965CB39276FD4164D3A1CFF497C47999C7DD749B
23696E918B2A56CB8546D60140FE150687DD0847B8CE036075B27804D8C75BFE
14867C9BE3A7C78ED604CC928A0958A220E5336418509302DDA70800D521F8FB
5E5DFD42422C7A4AE8413042F42E85F6405E7464EB216ACB74891C824D52BF73
A079078E99A88929674792486F3DFE3A0983E708E50C92ECBAFF5A7B04CF79EA
F2D6772E87BBFB375EB7C70DC9BC28CDA6F2E38118F71A14385DC40D9118C9BA
EA111DC754FBEF766BF7E4F614D8726736BCF086415B3B9F62B0377952E0513F
9C121EC2C5DB7F75DE1B0CBB24DFCE3628D79ADAF84400606435EDDFB996D6F8
53DB3E239B0D3FBC7D9F2B3AAFBE0DC8150B775B98E98A9B91CFBD7732E15CFE
ABAE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.0: CMR7 003.002
%%Title: CMR7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR7 known{/CMR7 findfont dup/UniqueID known{dup
/UniqueID get 5000790 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR7 def
/FontBBox {-27 -250 1122 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR7.) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB981ABA2ACC9A23A5
3E152596AF52983541F86D859FC064A0E3D5FC6647C3CAB83AD4F31DDA35019C
CDB9E3DD3FEBD4C2B36BA3CF6E6C7DA85E25D8A31A9BAD39BDF31FD0D1790707
9DE6A078E8A409D8295F642DF492AC4F86AC84383B0F4C6BAA7C22AD5A898A71
D6CB34D2CD12266C486B75E75A69C14819DD9BB8159088E04D4717E576B8482D
BDA52110AC8B8A80E4E9D58F470EEBD3CF44A1E1EE8DA318FFF3611B02534FC9
F4018C7C57E80570D2F634D98BE5D5EC6D95051157F0EA94A3D12BE0B4B79939
F82F8D73136D3337C44E314B0B16CB030D9A12E01FB667105F334C3EE965E5A3
D410D2F1531547A4497C355AEEB295CD3C5334BEE5232992960B757594B89F3E
52095042DBE6B4DA3C3AD50CA95EA9EBADA10630B500CF1FCCA7D60306743681
7E428D33B7F7C40B425CD58E4CD8AB474BCE6A307BC6C6EBC15A8A96E0E2977E
A33389154536F5C5D8CF036D07F24094E779E5ACBE5502C92892F10F4C6DB627
C7EC4C7BF20B39418A8A85D7FD9B0EAAFD871DDD41F93BDE5FE619AFB8711824
DE890E62C1969A6FE28DD3578AF43D58A728FAFF0B9FAA640962C8F35A26F76C
67F3548D6DB54A25CEB368B47F97EA2B0C4D7C0E7894A4F0C823C6C1922CF9DC
10E05600556F1C7C9AFB33A2DB6F8730F70D6BF94B1FB0887451F2FFEEF3584F
DFADCFA9A2D4846B8F0E51620E1327D994CDF973B837D10C90FF76DE22B47CD5
EE3183898D156861AB4DFAD34A1E3FA260B8164E6680BF58413A553E88F6100B
C4F4E8E972C81A5F88A7DBCDC308B4C3581BCDE13877B976B1F84330839FE5CF
C78551620EB803DF94A5C921F8EE24F7EF8FC4C3E1653514212631F54F90E3DC
E9EAF96E998F340C4F729ECF7AB430FDB7C0BE3DF2C0D23015820E28B743CAD7
7F0AE95413C3EEABBC69E852F53EE1DC260D7F1E712BECEF2F18437DB23D8E74
2902AAFBC733AC5BAA452DD6F3671859AD836C8564E99CDC4183D8495AFD99D6
1F0D65B6588CE7546717911E25BDCA6C2649E3A7466A3E2DA7C7994A30AB4449
672EFD00632EFA8629C1AFB7D53D801028F77C864869FE636213A69173003EA6
BE1ABA95EB07B13D1594BEFCC95ECB0A9CFA9892EE0677D6B6C250855762B7A7
8E4E022640F93169DFA0303A0D5E73BF3E0F4D4AAD10FD7E4EB20532BA30371F
E9F480F9513432946F9828AFB5D4AEAFA5829B2CB544E5EB634C4537EF7DF08A
A1CFD94A52DCF0E7CE4C5EFFB01E6D50558B75DB4C8D5512B06080F27BE62E01
2EEA6A0357441401458C842D3DD4C35B8F561D816B336216CE0C14BF77648AF5
E33912CF95872A1E1AB9A18980A0B29A881D13397C15E1CBA5D3E0B27943EBE2
F3003D15EB446BCFC1C231832475D5B7AA19E4CFDE119D6CD62D053C6D29C333
5F729791D17B3F7108074EEF4D1BD101CB33E01004532CB0D716D2E54D169C6E
80163E70C0E9081F31A1ECBAE079D2A518B790B0CB2CD03DFD034A0F4788E800
B0CD2DC1FAFDD487C2F381EBAB2A2F3F3AF82021B211DC9CD2FBA6A1BB3D4AEA
4C7F3D9A5C21DFF284CCB827D205A69638E98D5DD8E36AFC1A4481B5CB2A2E8F
D6C838DA6F81990F5ED928DC7457501B5C979FF4CD20A830896A460C5DB13D56
A3B2B5D9B292374A9BF392894DD99FCD6A1E655AB395E839F074D1596488700C
4E2891C8AEEF66568E82A8B826F9A28FF84D4D9BDA21F638EAF96880B4EBE0D8
081982F34831A03BEE81FC177700C2360D2A48915EC40D5FE85B400E175D5AF1
067FA0097904FB647757BB44B4042D30D1557BD0F7922D731142FD682139CEB7
58CA4C8C240A0B86B1888CACC507E24E04020BF1882BD9B4CAECFA97DB24D7F5
AD64C69454027F198BA35881B94EE9159A2D73E450C3BDAED66B886D6DEBC84B
653E165176228F88993F12A170775A8D7038BDF2FE8DC1F7B98BDC02D1E6686E
9B834F6C0AD90780B17DFE25F0A4E470CBA84E73F2D22BEE09A040F14CFA2C14
0FDA5A5149B5FAFFE49F55EEFC43831BC43A8326FEE9C7F469C0FC3B000884FA
41DA7318EB57262CB96FC4EC7F16CA07FE1C3BE8C2DBC8A8135953D6DDF20BDF
75A2B6D26074FCE752BD32FB9F5CA797775E8DB9BB9786B469A3CD65A0D9DDDA
C2A166E454A94860EEF5B5C12172DDFC576A03F6E6F8A735FF21A3E9CCB4CAA1
3064893487697986A42CB5888B2B0A79FA3C74E8187BDDF7BEAB884B70B8D4AA
AC6615745AEB906E08BF831CFDE222F58D02B428D55E9D5A3CDE74E42D8A2CB7
E1A3A9439B678AD438793ABBEB72B21C58981DAF3EDCE4BB93D95F4A1E943BBC
B3A012DE92FED4F232A3A7D60CE60B605151F9C7C18A5C653E5D6D15E5B49A63
73E7A339504D0ACC74B8B116EA88C3EBA2CC631AAB29F761E5F062966AD2FD28
7FFE52FA8A115DBE23E471094FFB3CBAFBDF11B7E9058313F2D069B2CE98A962
64645738F02A31E2F2AC11628724034ADBCEE012721EBF0A567893411F950410
B20754A7510D041FFA6144AC9CC46D846B82581F20BBD001D34D9764010824BE
61C30D05E5C5D100A24F1917F01799CF5BC4E50FCECFEA732CB50196825F0E08
8A1EC868C6D4357857EE2957E081A0E4372E31A8ABEF23C3F2EA0FEE57DE4D08
61C570175C41AA0C7A3A579ADF593F18B4AE3782D2552E4E0759C32E059EE741
2D8191E381731769F6648B3581CAF11DAE46471896666F18F02918B0860BDA3C
BD5DE777672447C23C62ACFC2611ED5239D6A266FDA6031EBC5A530C1A2FF7A6
B4380B9A4C877267854AD1F1677CB5433F28894ADF93D39EAB94541A8D232E08
22D082D0951A60F62B87DC028714EC74133A4D65F7D0D1296C0E189C4A42AA98
28E8AE7ECBB9FC8DFABCC6EEB1E9FB06227F90808EF31331CCC5D4C9A6182181
047902DC9FD0444FB94B60FC74F3B677758088CE6A159D940C5CF682335E756A
8BACF06AD7225D49B0002392C889B0FE2C71311D2596F4903D12FA20BA2FFE25
A0804B4BC282929BE31E0F46B34532CB5795A65218CFAE21F390792DA67775C7
B91A2BF4C16DE4F6551DAE3A5827F616BE9040EE6B1008DA2F99A01EF66D697A
6CD1A44E0A15D1F39EA8025E886A68A1E9C334327C7703EE721E497CA924AC90
7723106D913C5ED4BA4FC743CEA8D0F5172526107DA65775C0B1B77179D336C2
9B09B608D80B1A1E87CA1A84A833A00D980D919BFF56F6390E9D5B45E9935CF5
E69D003564462F750F7DCE02DC23CC215A0696B74D8BD3156A392A94F557655E
00BFAA035647568ED66157FACC585E411F7F428569C147DC43F6E4FDE693D0F3
9917BEFEDF61FB980B85515FF6424824E2D995B05CA1E5D3E8BD8D3281DB7CE4
E54923E84058FFC0A8A2C491327D0F87CE4C352B724167CEE224DABA3B95757E
4A419594BE4F92E78BA6D35D4C93D31ECC3134B24A45DC32445725BB044F09A3
AA8C31EFC0A2944ACE2F2CE054CF24DB350FB3C71115518C24BDC0F7E54250AF
9D3378D38480E1CB9029F31570C619A28F065CA4FED5665EDB96712ABEB33B9B
4232C00C1B0215F08D53F7E430887035AC25BEAF06942FD1B6C442253C887AB7
D694C1A6115C8990B4CAF1E81DD1FDDD6B03C00055BE956BE7FD8A4E1049AE69
EDA8593CBA8C4A41E046C689FBBF9F1B64E5856A7FB1C61EC815A56DE2A8ED33
41F370B8203D4E5B19C63AE9E6E0D26F4F3814B5AF48AD30EC9B8402C941FDD9
722FCAFC638FBB835F83DC77F93D367266FA7DFFFCB567EF82B1695AB4D94D09
B18AC041811027229DF431F5CB2BBF6ACCE9D500C8F075A74590641C1A607C56
D2B8624797BCD9C91C3177818691FBB4744EDB6056464A0B95B8D63F7C22309B
82D6126E2057BCC9FE5566D96B7A9B201A09B0D3252A5494C8CA2C8BA8A13C29
37EF2A882D61DA708C279F663D88A8E2999A0F3B6F98C49901A7631BF7708B67
54D0B4C52BF4BE0DA0439E6763A7C9D639AD4092E77B13D3510DAE1475C978AC
796F9B2AAD3BFF35C5A3E19B5E2BF704B3BBDF68CE48BA4FA2496D60E58888EA
28AE12D00E9F0816FAC190590A865BB58569A91BF0345D01230ABA361442006D
BA2C90EC2036BBAB79EBAFC3F217DBD5854C519235F9627A1C3C71D21ED38AEF
0BB40F3B86BB9F09A3F309473D8757AB7E638DC1C59A7F9BCD49DE4107A2E54F
422767FB94048987847205584309397F554744690ACFFDF5902FE5DB355930B8
71863217830DD7A563B0B3A4025ACE75B0E777B4414B62A13B50C54E0E6D47E9
D43BF769B9411B74E1069BF71BA873B4B8973EC9BA492A5DEA58D267872BB246
10AA67B143D0E2223FFB4991E583E629413CC894C3FA4869B72D19CE1A0CEC8C
0FF5E5A3EC1FCB7D3C4289813F0D249A11B55104BD60B2A89BEF44CC77CCDA9A
065B8B83B4F4253AA1D535290DCFAA4773452D110D2B3370F9E2FE5432B54A9E
644EB3BA9BFF62347F376839024CD5EF3C5DFD30F412DD5474B7933E6A1AB63B
4B12F2417C72D0543C26A263AEA53E5BAEBD67E23553A72E949DEC556BEB5D09
C4D7A89B14FE4EC68D0E3E9D65A64B285E53590F418EDA8175113CA375A29930
DDCF4C71ABB26CEB800C2C2B253AC1F53651C88A56ABE5A74F3B54CB4FFDDB92
60AD7272BA25EC2F6FB759AA6E1E7964FB55AD09F4EB25DE45FD01833947BD05
6266AA8ABB7DD792941C7A070FCF3A4636FBF8921C70298D42FE92F079DBA2AD
6149D9CF9EF7264DE6DFCD4429949B15EA90B596340713BD61926DDB2BB23BE8
F9DE38A31620A817420A245946E551463960A8C5C7295E3B3D6A59BCDF5E472A
40B7A2CDDAA43CD8AAFC411D037142579D11054A903E102DF0D0C7B5BB854DBA
F3F086AF991F7F5D5C730F8F9AF213F25786F3EC0E54530FF912F4876FDE16B6
A07D0DC4FC46EC6363BCB68B83ACC448B801EC43FDD2F8BE0E93D809FF81E38E
176AE17C67C85FEA58EC95435434C49A950AA955D8B20989C550AB1F1C31B7FF
99422E1F48FB7D6F327C6DBC4695A03903DB275B94CB39386E46579271870A25
21823E75C377E9D5B46655E8CD8F986372CF8BA846423E26582315A9D19E0BF5
305C32B2A0EAC3ECB275B1D8BE11A37ADF524944219D94EA2C5DBDA768828B6D
775DA8CDB09E0570E4ADDF462EFD8D3FA3F86B1DEECDFFB699AF6507257C1879
16FC615868C2D51F03CD57BA38D42995D9164B257441210084DC409B6EE4C119
0B2E17B0A8D5326DD0010E4A325D5F77BF935693BC90A00A28C7B5F74817DA39
F47A41E32F4F92AA04D30D810F7B1484EB53AD8CFC8CE8928B570314E0F713F8
AF127227190F9C16BB73D2A217FF801C391A29095DA5E4974D137A0CAA7DE702
E20DD4755B1D78739756A5E7EC3542B96AD6844199FFA2F5F2E9C64E2DA4FB2A
ED79869F745C59D235438251BC2E6D26112AAED20E06021D1AB896EE1F1DD2EB
437FBD4A25E42245C5A647493FCC9922E6DD7AF57D5D482921D1CBD6F0F02949
C27777144751C1E72F4EE2BC343D4AE7A8A8758123B54FB1A026144C643651EF
0907A376945E19A8FC7F98A034832A5820A481B0823F980F59623E0511593FEA
BDE6EFBCC0383242CBD4954027B075B21F10472059A480D6E5ED01C3B07461CE
9810251A5C5643EC7403130C2246E8616CEA25EAC7A0076731FEA8CC43BCE3BE
933FCE61067F5FD402E67E2B9DAD954AA77C5BC86BC5E4BCE2ED676D8D8EC7D0
ABC5C86D82180B9D5D7451C71B5149B6B67883578DE9909317928C0A92E3205E
F23015400A1763A6FBF67FDE3318AD2696685A1832FC31CF38589EBC7CA1C818
60D2B2211E04EFCCEA88D9A9082E82951EEB123924A267CB03C48889032F2892
4227E217FA28F87E01CBF27BF1EA60641A4238258CB7AA355908FE36D90F5CAD
FE992D03A33E47CA9AEBEFDA57793F39DC6A9E85D5B289F6B862B35DBCF82E43
5CD6A862F6FFAC36478C384C3BDB0148CB1FEDF55969C776E77917635B5A65EB
F2AD351D21CD3822D43289FE8EB0FED58182997097C7E9F4373553AE1CA92083
EDE3BBE6C3BC7009D15AB5FEC6A59E9FD1BCC7B2099CA15FEF083B9CBF7B890E
CDDDE6BA0AFF306C76500C945DC91BD533FF9A585CEEDEF79238C54E6168001E
26FEB29E523EE501BFA4F60B782B1499B07084C35A2434B4D29D3D8E2C8F945F
A9922443B68D07DF7EAA1F4CDEFFC438B597D8943E231B5216808A85F30EDC81
9DF5DD22F54A45335B4C2203887475F39D247F0E7347BACFEAF220ED82F9263A
6488E73C1910023E505FDEB143006C1A351D441AC57F9D52D2C6D63D78C75605
999885676BBBAD56074298E0BFDACBA1830BA58E87F436CC670EE8EB1870154D
72DDBBF3794F8CAAA3F1E11DE29752DD99EAC695838A19BB67A1FA3829B6E0BC
5301610A0351AAA749F456AE31ADD87D6ABADCDD1FB3CE81C3713F48780DF407
530CB284B2AC709F52EE7AD647DEF9FA4D2A867CCEF728F3D40CF34C28D21527
10160B3DAFB5FE16AFC9D36C6EC4021FC189005862082BEA60AC72B63AD27D72
FAF3C2D89DA2648FC4C65104A069212D87144E8533CD86A6D73DC7CD9DBA25CE
7DA53B000266F3871B24663C77723703315C5E4A89DFCDBAB384AE7EB2F455AE
AB191FED406F7F6EC9E5B8276EF5C4CBA041AC7E8BCEC7CAE840154BDCA3232F
15711ABD1E867A434E9787CA0A6D1F197597DA27ED2402CB2D84ED082E8D3A39
81E6EB270DCA4E7A90E2BEBD3CBB3A2BE3CAB926192D7292CC16845B6399A543
BCFD224BB52F21352732DB5154FA3442733066CDC3E186D8AA97CD801DFBE43A
116C86889BE198DA88CA978B8C40ACB67E8F7BA499DE68A6FF0DC72C3D00BA1A
B378B39610F15CA026F95ED8155CE3FFFFA2E2FEB352DBE14CEE1669F2387B70
55B91185FBBED764266215D518716EDA3DFC9E5DB6B148A553E75AE5E38E1CFC
6EF47B314D54CF24BC13856F4F7C976BB91D143DE32FF49BFFC87E17885A1893
BA1B8E441B08EFC04F7D103C1FFBB665194B3D0920473740C55FB1C50EBCF717
A2359B687FCEAD65616EE89A68F8D91AFACAA0B238EE4AF0279AF5BE5294C3DE
A7E1F5E6248C0210E7D40683F04B12A933C746ECB517CF94BBCC6E4CF49AC715
D8005AFECBDFB7A6B417DB8A28F8E9EAF39CEC1CA64DF37A5E66A76C26F721F8
A63B003A040A62F87DCF61B298F960D510BEFA453F118E59E7DE8CA3DD002EF0
127EAF733D5C61B5132348D280F84D159809CC71A3C6F7373BBFD8D6EF715D34
0016DEFF14AA5F960BF1BB9AC304A1823722843547BB4CA5EA4C41C6C2701C8F
7BDC810443F9DF34BA469A3260009B799871BAF8523C8763544DCD0B382D44C5
F75046AFF85F0B5A3188C2EE786CEEE5496A5AF4BCB0B429CAFC403FB983EFE3
61FD9F52ADFC38E07A0FD7BACBA530D2E4DAB2592AA9564843E7E2305047F060
C5FE4243FA8FDF1B5D4F61ACA7850A604FBC6D6970959752695C90F78961B4E2
C8CFA41082B1A37405AABCEE5BA3DC2B9EA76F486117B84728EC6D8AE6379CCB
402C2AA89078EC992C00D53151E9D82C65643F549A572A20F05107A41BE5AC57
8EDE92AE20B05E2D0C98151CC92D5389A675DFE39DF546A33A84A4C534337ADE
B17C34E09145B37CE1EB1D10D42CC8D6E6B127A3809F7202381FDB88D42084CD
0AEAEB8A8288CB56870EA2BE9D0B9DC8291021CA561E2BA388DA3494E433E0EE
5E69DA51D0AC505C9F71562D3E9750F23CF14D2C8ECF0692FBBCB4A92B48B4B0
AA2163A3B9670C67D7CDBA4D5421F2A01241CED719B21FD1FFDD0A5C786D8B71
D6A0C183E57EE02710004BA25B47CB338824D7560F40B382BDA4338A2C02B3BE
B1BFAD36C649323F30FAF580B0BA100CA24CA32174B1AE755434C8540BB163E7
1AA422DB553D268C70631B80988182ECD910E31DFA7DF056AACF7D25A4C8E021
0A35ED58DFBF41CB08EFD4ECD6E80825F023C44738411DB2147CEDDEE6DB4F6A
F517976F88DB803E78AD99028EF2F2F6A93C43F1388059248EC11C62D214B0CE
1348D537A4E62C2771B6F0C49281CE9BA747224A39319AA0BDDC5A3575A75092
F4A78AAC81F189EF542EA849C6F5310F631957E6CD4C7720A4F5FC4593B43F7C
DBA6A7E92933EE6BE8EE100B3E411C70ED2AB5606CA0300F0CC76835CA612161
2D387C89EFF621E4DE9E659E463F88B99217117CE735215DB047F4477582807C
3613F962DB30F3D86B39BB351BAD24611B41F348377A602A2D96D581619FF1E0
462F8563B66E0A9510F7216D5D508AE342DD08A8A1226674657F8B55912690BE
8D182B1B87239B6219E50ABABB64E570A8A58B8504D02C5399ADE5B5D1EFB41C
E47D33596C37EC7F5E162697DB6AE7F75F36AF59BE01972D20F15455C48E0ACD
54E11361CE7C3808C90A46B388B3500E6ED9A47D25701CC2D94A4C86B4F1EF41
EA9C1152EA94E519F4D6BF023881EF20C058DA88EEA3AA27F9683C85F2843709
99DDEE77DEB4B93630BC0C734BA661BD0159E7E046E29182F0498A1DE1A31F32
A6463AC6E5AE654C23E3A51F8F17DAAF8EA752E967C518D0F8B4C8AE108675F8
97998E6F19CC0B70FAD2CE2CE20AC7C2F47266F35B0235E2A1F3B74E60B82951
3429311795C090CF2237D2CC5C578F9F8F573F469CB1768C28C863E20261C95B
4AC22395266D3E4C53FA92BC0343ED91C900553D4348DFDA79501C5FD0BE4882
DCBA26E5FC7EDDAFD9726AC0661242E7FC22863716E3323483156D2C62A3F9BF
45F942DE04794A552CCDB3988B348201D222949F7E3F96BA9033B61C6D1FE7C4
A48D29D419AFBAB5CBCDFD62360DF1F86E1B1EB94FF0D204A01DE3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 28 /tau put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9081E7BF64155A2CE3C0DF7
88D00671AD65654709589BAD7EA65BBA811387ABA5CA0BC3F66D3D48597A0D1D
2C268375DF47CCF62166262AE4840AB03BF49BE67A05EF66328EC729F03CA5FF
AD3937FC053E223303565DC771ACF32E63DFB96D5030E787961D72D02C195C66
B48E9AF0309DC169CFE8D16E2818DA94693A18F027DEA0D916672480464F7E22
CA6E431FE38D3FC019BDD229E064B72C545C61C6EA55984565CCA88ACB01F744
3B4593CC894009AAE9A490E3B99E03E117A041A381B8DACFFF20F6E5F293B58B
0FAA86F132B8B59D102722B3E98E12F11EBC101AAE666271C93B6F7CF1AFE94B
5826703D754B09055EBE0A53E46EF9829C7181974A374E6AD658B17D89EB88D1
A80EF734BE6F686CCA917AA3AEF80A216B5E13C3626F2BE0093D2826CE4B3C25
90E3189335FC4F3BDAA0F15652CF8B32364DEE4C7FE174CA2219BF865BE7DB62
490D6C0BE2B1D2B889C0E1DAE9FC29B43AAA9C6A111C603B0ACF2AC6A7223A8A
3F13D96291D22B09F4D89777
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusSanL-Regu
%!PS-AdobeFont-1.0: NimbusSanL-Regu 1.05a
%%Title: NimbusSanL-Regu
%%CreationDate: Thu Mar 20 10:08:51 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-Regu
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-Regu known{/NimbusSanL-Regu findfont dup/UniqueID known{dup
/UniqueID get 5020902 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-Regu def
/FontBBox [-174 -285 1001 953 ]readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CC5A3208BB6D768E7
B58CD9BC2B6B7E110693C5A88D680B7290DB121996E3B7C8AE3C23147280F8BF
D8C60B415552700FF0E44C2257B467ADD5D550F61EC34A76143393E0B34D55C0
8B64B48E5F1FD16E16B967511AE15434B7F755BDF2574191E3C3DC528B69B5BA
7DDBBD3C7878FA69ADE75011A2C0F02F5707E86FA632D1269281D3C265B31F3B
F3145052467647AFE18B9D763FAEE4BA72CB9C385568EE5BBF5854C278F1E3CC
475C6234E83ED33345268BE52F0931B58F302EDA0D5751348E7B7E53D4882FB6
9343BDAAE87E48F6E82024D8EC1FACBBA36582092CCD76553B0449A5090774EA
7242123C53B80F2E927B98DF2B36C403D1FA1E9F8439F3964DC9F89A0CAB5AE2
C907309460F097AA87BD156575D6C73EDB2B40C015E67734397ED14395C43394
7A0201C6B0F652B035FD7BB82ED236D0F7C20048AFD83A56925C7A2898B46270
B440913E4714FD89697B3E59F5BDD5A2AACF6630257957ABE1A63502A3081B6E
307A534A9E238F986D4C866AFBAB7A0B1B5A6E99AA0A56DC1FD7E8A39CC45147
259AC7033A0C58192CA82FB12E09F309F75690043646193AD92D2368F345771F
01CFD21236BA52F74E36CF4B94259CDBA2EF1D61AD93A2B942A9896B0819D20C
59E440851CB99E89C887FC62FD9E7F88F54E5BC157D81A5FBC70699820C51BC6
27D7755B195C0BAD8225A6F3EAE0A5A674E8AF6B11BCC69DCF5FB89D8BE0E2E5
FE7E2588F93F583E4E2F6ED5457E90B902B02F51D54B9F0BA54291E687F4A7A2
08CA5FCE0C9F3B954247312EDA3C532D3DCDFDCB56FFE03B36DB7D549D4203C6
7DA8772A2F732A15DE675D3212C28DC755E3D0156A777BF514112ABBE4372ACB
97D7834813E1850F90CEE543B4C09BE1E93742EA98B8CACC09FCC4D2595EECD4
46C942EEA60211FA7DBC11CE869D55BF0C7EC6AA747EB2AE2CB3CC2DBEC936C9
540CE2E08291323B36F6549CDB97BBF9F0DA429CA9C863B629410885540DA6C4
9AAADB30C39051C993CB547BCD573D6448DC09BF7FF2D1B108ABEC2AAEE4060D
182ABDB3100AC627E5C883E8F42D90D699C8028D4123472F211C8FBB744D7E3D
C626ED03D8517D69E1ACD26BE4F83FAE31122294816736827D138E4F4CAB1681
236C1654E01231EA7F08AD0E73BBE1BE19A7AD6DA63AE0C7F5A360A53BB35268
CC90125C7545D9D59F5127F0AD964AA66DF020F639832FAF9C2CCA82C01120BA
6469960C350D3AF786666EC14158728E0BA2DD8A639C28E0A7EA8BBF608FD7DF
79C7B5DDEA05C8C3D6FC70177D1A9EA9AD056F0CE31AB535A22FF7EB33748073
CFFFB25D7C1188A40488A92FD2EA87A8A7DEEE9650149D167E131EBC361E6C92
2A9F532E6F7F85C21F704014374BDDEFB609E1EF72E87A7EA5AFDA938D6D0D86
F3813395B3523469EACBCE3AE0A271812228B8CF856DBF900704EB607E7A2698
08931B771ED1250E3866E88FC69A1214C724F830BDE997294721645F61FAB360
7C3B3F9EAA0BEA3074AD5A6EC578767BBE4F591737316A4F657DBDF2BDCB627D
C99B501F212C04DDCF148251E92337D102BDF46C4F598030F2E7121F6A610D64
0FC7E512A28BF6CA72CCEFB6270BE052F658087D5C67D702AEBF0B842B5B970C
C74AE8A08E28A3804934FFA3EF4A1695F578ED2A59D9EE46F33362634F975882
7B199FD078B14DAF0BFD6BD22B450926B69A090620505014FF932536CBA7CAB6
2EA7368F4A0C76891B99443744EC170D532A7E49FCCF051A2EF3F152A9657E0A
9FC876E111B6F8C40F828795DA670932D1C653C6C66F8BD36DBA30931D66B477
333FC04ED0EF17F1A4CCDD320AB6672FD97311E9664A291DB7CE50A9E2F5482D
B94A661F0ABD7834923ACE05F0406EE1A35A0D52EC8F338B1E7FBCFE101C25CD
C1B97085F4006C9CE8E9B3189F246AC319ABF618D864EF8E2F9EFB27D9E9969B
551DA83D11A0DA0085E2FAE48804E7F792DA77F9FBF9178223629F2E802209AC
C184C81943B03E2ED5EF2448188ECC95B19DCDA18B8F974BA1BAE0475C774FB2
D6D309BDEB97C7D1802F268F01E598029C1F862F7D7AEFA466C44062B6E30769
26529D44513199879E8596AA6B14DD72E1CD5A70828B5DC756960A1CA7DB02EB
F998D8D32FE1F2FAEA7C5A9D13025BB9E2D669A45B69878F0DD71B8B1A3606F0
364613C037D73F583976ECD28851D72456629F85B074A1964404E673D006C070
6F06E59598EF19595D7015ED60A0FFF338CC65D131161AFDEC4787D7C40763A0
CB8D743521899D8CF5FF67E8FB5BD01B4560108C59931C89F3C36E6B1B7EEF43
C9581D65B8DF199088CFF8EC6D3C43A467C4682EAE14FAF13F6F69F2A8DEE300
D7321473627FCD61BA713D80AFCDD59845E685C90B7D6DD684F99305B19CFBF0
99F1228C2454E33EDB484D6ECD7D57630B7022C4E3566871D314BD6CF49DD076
5F22BC75C4019783BB62D6F9F6B757456BE9C30C8B21DC0041F6F777D567780B
7743D5AC652B7D5081F287B82E51D4E15DAFF3349B64D60A41B5FF13C7E8D78A
94C9EB79FF27D26F1D7A5F734AC4133510378EC74DBBBC5CD500AF1BEA1E0B45
1BEA6B0DEA86C0DD532A8C2E1DDB4187B19F078D922AEB8D0E24D069CF01AEA3
7D5D820968725F1829A0A187F0FDEE963D5A2C30BA557F0BF4DE9DC5CD01DF8D
8AE98E8991A9EE92555200CFF408F9AC8EB617196A39B328A70AE74675335C1E
9A6DAC8972E54C2C45F0C45F39D587128A600F85030E8A9EECCBF4DAA7D8DCE6
3E20B537EBF00F55CF4DE4CCCAA827E6B23653E0BD21C87D2ABA0F1EF42FABF0
2079367951B608EEF90E571E4CED22BF46AFABF96B083DC022DFAD29C45163B9
599DACA200E9BB50CDA3C8C75DD9738730F38C00135142084F559BD3F8AF87DA
B9AFCDBAFE1205E8AF6B6605AF8C9AD6B082AE71CB91F19C5B0DA4294B9BA71F
F6C34BBC343CD79ABE9B543B5057ACFEED5A94499845E5788D976016B9A4258B
7BDF2F88A46D2392097015E011E123C354B872991FD8C0FCBB6E0C0442322F77
D3268D5B10C29A72FA05106E64DDE19B5D53762BA4E78C93E86AD733C402D54B
276015C2E1742BD0691B41774EBBC4A2A3C21ABB539C6644411C91B4A065A05F
33BECCD06D9F68C4FC8092A37B3324C606B08ACCD9DBE1A6F6C91368A7864066
6A8C93F7DACB5C49CD59A68B432F4351502E99151E85CB9BF466DBDF4B80456D
01F0F35E6624F95D4CC30FC077AB53AF9F93565E18A8AE89841F9C1DBC8BCE2D
8585844826CD0C846A52AFF1D88CB3ED7ADE2D9350877E8B3D4D5B84C73DFC81
A512EC5D4958FCD12096D9B9CFC21D38
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: SFBX1440
%!FontType1-1.0: SFBX1440 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecbx1440, tcbx1440, labx1440, lbbx1440, lcbx1440, rxbx1440.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Bold Extended) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Bold) def
end readonly def
/FontName /SFBX1440 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-218 -316 1652 915}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA0E2F461BA16EADB32842B6D00C76EFC613FE56C
378A7118B0589B3EE5425457AE310AFB3829876138A59F58D965843B709A0F4F
D1AD54875BBADFC803A755669491D9E98262991B9634084E8E2BE46EF805B219
D18DE35ADE9A8DBAB7AB761864BFB6A27E5B421C32CEE4569624D9308A32B426
FCFA5CEB883444393CD7A58F9CD522BA73E17492DDABB7E00B2F6BE47F585EB7
FDDBFF33F1B5E5465287717D1580105BF3929C09EC621CEE9606EC49D7051A00
11935EE728A2FD47BFCCF00C93EE54910F77C1CB8622B9CA129D466746BFE1B0
594A9F0C785F6CA67161EA1480AD4EC6781B9CAE9536F5D3AC6D447F16821F77
AE2705279CF3DF4E1E9AED81A0CBEFBD61808E2D59AD970264A5B66D1F399DA2
55BA0AAC8EF1A1E16FD8240D577F5E00E0040EEBCC193F074FEC48DF30882551
E23D64EF84283F9640AC5F60EB1F26CDB79078AB0C0D97D1D6297D092380D4B6
6A2099F06A513A78A3C3B82A6DBD985A0DCED7150B19FA42991A3D408FF95978
15D309AACEA8C5C0AE812F50330CCBF47B4759C550D49173127DECF05D783DB0
978A366ABD3CA7D9BBB6652459A5E19F9630CE75C2BC7BDFBFE0EA3D8098CBB1
98CBE02F196C0A0C5E976DECE72778358CF8D0A79A8B5629A6322716CBFBDEE4
934E8782E716185235712845BBD03896B836214B69307DC04B17CA41770ECD8E
7618150D48849D5D575591D469E6FB7A40A9233144A05121787D1AA332E46AB0
D5621B05EC32268B102ED4ED7AAA3C1B3F5F8A858EEA52E4F9C7D72803E0FDC1
E7ABF5BB2B6DDD4DCFFCDDA0BA52069615BD985242AD0270AA798540DFBCA4D1
AE7F28784038E7D1AC1A0CB1E43DAE37B1972B9B62F127A9EF99E1281CEC2438
8C07AC126C285E59CE23CD732233874CB0849460D974075C167EF8702000AB03
E8C8B32205E51C0598C2EB4BC9ED4EF133E8E7195D12F3B2ADBFBE1C690EE00F
7207531B444111BCA775262D5AE4BE5DBCF56DC130824BE565363331F082F0FF
1D9C196F9E2B9DE1FE0AFEE43B4B5BCECA6B9BF6A2587F0A3FA4AAB078428E00
41AE01BD3AEF1A6D7F517ADD7F61D44BDC2B668FA4414EF33B26B94A778967A2
C65CEF614812566AA034C9C2A535EE0FA606F006B034D0EF5EC63B4A1030E92B
11D38D878975828774C8BD1F227556506CFD0B79E121066B478BB4D1C9F2D3A6
D13BC6B93AE8DD633816D069F56424D43916E799AD04298D971B7A00ED409479
B28B94CD7FAB420995A9D9520F86CABFE102F0047B3476CFB6B63A07F5B9DD7E
03AF07AF17AA04B801C72CA96A231A686271199CCD59FA104A64F2C84E032015
2664DB1F3159B5B1D9AF3D1E7A00374D97907BC900E82C4133E9297337072DE8
5747E5661A027E078FAFE213151FC81DC7C1CBC21DF351097EA6DE0F719DC017
D5285B4083BDADB46267CE6268C739EF2FF2995A3F3ACADBAC237FCE040D4FFA
4E2EF57F4DEF382AFD57839FB57348A1CA23DEF9A7D5DF58F775EB71F671BFEB
73A7B6A8CA4E6635A12E1200493BB480CF5167CA6DC9DCFE929AF58ED18C4E3B
908A69BBB0B9CF8EA17F930DD68C9DD396976956DC37D0A1A4159DB67A8F742F
59EE9F3757A3613D69E8DDD0184B51DAAF285DF6B5CD27B12C5CADF1D9E7DE19
0F757EE64FE2DAD4DD3B4955936EEBD5B0F572E1577A6E0BB290BD5A141D4C46
6C114743B853D7F77C56EC22ACF3C37B66382C5810B42BD9CCF34445F88F9E2E
6FD2D8A4F18A6EEFACCD99565EB047376710B349AC35B4A1C9CDACE77BAB719A
C79C7E01C8A046181F985158BC6EF268311FA02A4AF378B0D9B7F0E49F8B0CEB
4DD458DAC1CE89B91152DBBAF1B1FEC48D4A2E5A4C6D38DB17FE7C776B4EC0FE
E7206D27C06741F0F5AD1BAD382AED99523C81C084E63A7C5E3031FA6A30E0A0
66EB838DD2D9B46E1F8AE5FB9338A09E227C6C8E9CE5EC8933890B82A22191BB
E5C1638CFA5B1303F043B2C0AB206549DBF565560DBF90604CD010DA64BE5532
50AF41749C979069383E816C67D3E4136E0491AEB057C12761019C47F24DF221
7B9861E681D9A7E3C92E5FC05F132544B831255B96FBB30E870516922DB30B98
6F5B263620A6D2192297C2F4D8738115D73259FB34147D958138732E676EB53D
EA1B1DFDA3ECF14ACF714B96F765A580341C445EB8A77528DED6A6BBF886439B
13C0CC247210E75072801B97D93D01AF56557EFAE46DCDAF8FBDBC75849F13B9
F8F9604ECB442F962AF2C3F7A68CBEBB345AAE6A20AC810910D8089041759256
643929211E584683DFE111CCA388F5CABEC19742A9C08BF74850D4014A596A61
EED83BDFE11449B2AE2FB916DFF178A5BD769C4C2C8583649698879DCACF3024
B6924F95353E460886EA3F027140E07FCDFB9129F2176246FF9A2B7B5B3B8430
2C2353053F6B004B74DE311E9BB962F345998D8B6B48BBA5EE97AD0B86850862
5FE52FDA2C17FF096232F80D7D75C05526D41FF34564B78690B2B12559852993
F3D0370CF025FBE0AFB811F53D1FCFEA09C111E184539370C80D03DABC846B05
77FC610ADDE2E72580353CF578F10517C4BB49E6807731DA34102B6358F560F3
EA520BDB2DEDEF11EA8BEA53AF20F573C40E2460778BD6D889FD91DD765BB9EF
84E73C1662A57AE3915DEC1723AD2D5EF23C9887DB46AF5456921BC1E44CC4CE
B90C585FA3558828328923A3A12AA786DBCEA97B5A74D673257D25313CBA3741
909F1883993FD0E496415A244E5246EF665B753E69166737F803B419B204792D
A07B3CCC1C7250E20440022EEC910630719F2FFFABDCB8D82DE92062136E4BE9
421F3B2FF54405EA52DABA6CB01105CD587B574F704DE92921C11F4954612F28
8C0A17212D077E239B85570AA53A8E8AAC8D2A87DB7548BFCA1E4FC5126DB53F
332592DDB71F918364693DBA2B6AF901FAFA930CF078343317404F643448BCC6
8DFF8510CD47755396DF6FE4F0490A4ED33B06DA14A97F21058F0C0348BD3E57
3D9BAD56C3B8434C2D4E83B5D31AEFE41B6EF7E1BC4EDF2B1C958182A79A9C1A
2D7DDA6BFCE8FCD6D408341CD82B5D0EA7BC62B08AB5275450C82D4454C17169
E2D81A405B0BF1DCE2B55DF132DCE963632583014EB773813A6600B3A7FDFCE1
FA89BCE9E2746A2E03C7C822D082D7492F48968885D75795A063D9C71EBBC7A5
F929F2D159DCD8359978B49099EC0290538564D44DEEE57D64510EC0EE1DC2C1
5E90BC2554CBEE69559E10025C6667037AE88A20DD165A2DA3847B627A01C2F4
0FCE54BE46363F8676A2CF1C9D1D5BB1437CB3917656D03E31C86F854E9F4B84
4C1C47BC920AA0CA4B9C38BE44A9AD8BC6101FA1BF210BA24E11566D0052234A
593F7123AA4A8AEB47A43081F558258D6A2B2276FFEB3DBEBA949FB1513E17A2
491D537251FD524DD567A6A8CEDC1213B07FB8C4FFC9FEC0CAAC14147299382C
40F73F0435DA54632CD57053D7080D690420E9D614D8D0FA8E5672F872F72BEE
FE1EF6461B1D0686C4FA116870EAFEA88DE9C21843156B859A30CBD537AC5DBE
5829A3613A2F27049D64DB935ED8BBEF85354CB331484C0E5B2FCBDD00123333
F0911580A5526D52B6890826299E70CA368C9AAA5B9CD947DCA971B1F51AF332
930DF84DD06C062B4F871B17D02CDDB3A276C524B0DF3DAEFFF0ECAF2A0E28CF
32C655D48A12A882BF574BA1827269CBF3DB5E59872F5FE04DA88084DDBCB946
B1BF696BD814FE47691DF7911821473D454EBDCCB87CE60B1333B81C4D67260F
BBADC7DE2ADD0A3CBC3AF2FBB87D95571E309F08F4E1A4764EE06CB8786700E7
D1AD8391AE03E4FEAC152226A2159910DF6548C99F8B2D6E9E2309F28A68D26A
3A8E955BD771890FD954AD37E1F44D435506280C27A84578EC5A2743EA9EBCC8
3374A1DF9197B83C2EFF1D1C4B85F3580F31C47CCD8FCDB6AD04305F07357B1A
DC6A65AE06751999F24A602BF6E8DA524FD69B3E5EEBC06F5640
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFRM1200
%!FontType1-1.0: SFRM1200 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm1200, tcrm1200, larm1200, lbrm1200, lcrm1200, rxrm1200.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM1200 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-185 -320 1420 942}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F33528B839DFD4B92DF049F26DBA77FA20B6513D
285BE588908C3BAD6A1BF20F213E587F1372774EF31D66B237AD60712D60BCFA
83574CC5F88A6B4676356ABC2DCCBA498F4272476923789659CA8836F2FDA94D
38271FA2CA8B77D7099705602FEB41085F6674B7AA0DC588C9ABCCBD9115601F
CDFBCD7A8E3CFC8B1E718E576254F5F05FAB25DC253CB561EC3604749243AED5
76898EC99BDB1760B0CA75CEAE3FE6FFF1700F64F585BE9267ACBD5F155F3122
732792E17022F23B1F46FEFB0696E5C2B78DE0479F09B6512035B9C488042B62
98525003ACCAB6C8F36BBDDBF6E82F5CFCCB418706BBEC1D4E42086E70847405
3ADD1383ADD34574F2C6C64907B0561F107A259A649BB525F0B74CC3B1F42412
C4F81A7ACDC6A3F37DE7FC06DEF21B9821DD39D75432AE3881E431569A012092
38FCECF1BE90B0B199DC4D56EE18658B2818B69FB6836486BA302CE7F6EB18CD
7AC5AC6648097F65C8AB851E9BD1696B9703230711F68FD82E1DF92936A4B1A2
CCE51645573EB0E762D68A417AB6C0A2EC8756FC9BFE5972DFC4C794E948A970
918BBB1BD7B31F9B1B323EB2AF8D41A153CB1B1511F43560825DB6ECE30C16E4
902BFD1EFF59F06984F36F284553AB3F2C7901B37ECE058F5E477EC9C629847E
1C7A3628DB7C47C099A0DF53F05ABEF94A760232985AEDEEB7AA05C95273179F
8A1AEA30BE626653D22F7725C28498D776493AF6DEBC59D44A2F6F26E5DA1A77
7B9EB9D897130FB3F6017F80AF21E4FDB73CD96834152BA948E1EC4765B253A6
565F51A1ED2AC8374CF4DB767E7F3FAF13F0A1198110F554CB6735D3C2DABCF4
0C0A431D263F22D091D0F560ABF5968868126430A293C6E8A6A87593E580B110
E15A84AE30E4846980EC5C1FB6D4037D7E1DE8CF57B6A60DD4DDF422075F85BB
0B1411164E99A03A3591915372454A70C8CC75EEE08AF87D35032DFBFD61A4E9
F968D1F514A69D62B30B89F47FCD45A41B423664A7862A1246B6D7C5E2B352E3
D5428D2B6677D38729C5752DF835EAA366A11F6C7564C80EB1E0A3EE9990ED0F
520EB2AC073E63DD9C935504D14BAB14A4305B3D64638B6D952333CFB7CC93CA
D84B6DE80B35AC82623BE64BB6C1DF9165E00D29054A5911CEBE09A2054EB39A
7894F49184B672F4AA1143A2633647BCF502A77F12506C02F1A78AE9061F1497
CABDF651CF5ECC83877724A90D67D660CD4C54EFB79F9A6C1DC8EBDB66E8D709
D4C0A81E7C7EDB6CF1E266B753AF6BD100261A6CDA280902D3F0D15EF4042F54
5586901E870F2A99727E9B64147EC20330C3E54FE01AEA9875DFAEC86A0B6F39
D89E035185C3A6B25CBE093FA5C7BDCF99E5C68A9EBBABB3D61A6AB4F30B4D7F
94F4B4DD1AAB6C22FC9A18BF46B81CB362B87BB87E9552402C35490285FB83C5
EA4825225DCC23DF406DC5CE8E67FFB64DAFA43E89D6C65BA6C0F41AA44EECFB
DB8B9ACF11B6ADE903B6EB177A00E2B22593F7EDADA3A7DD72A3BE1D488E5BEA
BB9327D8B0187CC87BFD35F4591D3F63B87490338692E1E8CBC869CA13C68761
6276CF2A654946B67B1885F915E2D53E923D1A7B9D373539E8AD0C47731B05B1
7E627B68C4C1C9FBEDD4234643720D3A7EE90502081339CDBD455004D38302E0
FA91517F04289EEB213EA283590D0EEA039CA3BA5694C0DB35F68EDDE43F0CC9
DE58D2EFEF8E3D81853BFAA0BFB73296E70ABAEB606ADCCEFE9AC3EC7736215C
B144B249E1FCF4A66590502254335D9505C9A962FF3A7D45FF770DB07AB439DA
BBF81F0F47330560107A6101A5C76F54C285DDAD4E7817C6B93392DF83CF924E
00DCD4DD8BEF1136AFB87E24A20883FF87DD69789556A974B8807C5F8030CA58
5301124D8A96D5B23FFD181D66140874153114B81A52D69164014ABE126D1E47
6752720C0CEDC0AAE2EAE314CF25CA05C3D569CE8871B49AAF2F371CE632A913
4E4735863644E0B7B8CCDD82F1709F81DBA6440AD57B94A928E1F15D948C7EA4
105A252E3AFCEB539773BDCC8FE919D55E1351579EC5C3EBD311A8EE9A9373EF
934E4C61DED60F0FB051231ACAE4E12B03013D7B9BFE305B9AA54B0AEC8BDADA
C3FBFD3A4ABFA43D98F2991894B0E1EA7FCEA4843CB86FC4DABEE41F24ADD548
82C163617B77D65D423C565647491E885469725CF356762F01753FE97CA9643D
7EEE4365D5C807298D61C1250921C4F14BDBF39D08F3896967A5C9BF25113779
7C1909EAD87BF0D60C43F1AE79FFB1A23620EF2C324D5E6F6D00CBB22BE70E0B
AF849544750046F6031B872CEA4F6843BC35E05C73313978F2D74A52F2D52095
25947CFBD1D90A82EEFAF5750631A17DB096B594B6C033ADC43EB9328B5366C0
A8B7DAA7048C0028AFD0E17D3A435C530ADF039B402213DF9BB13372632469D8
568F819DF9554C1930B7B3C6FAC84650AD5454E5C0DBDF10DAF451A8D99640A3
00550839FB6356827BBB65B73F31051792CDE85D8598F0825CDC92D8957797F6
0CA60789EF683AD4C7D307304177D48E8515FD26575A917C9E7333337E070509
2783D66F0F50B55270EC8C75BBE78CB32E0133765517039417C35C57DE3B0D45
97863BDB6F0216EC699AB82DA5AE17C56E64998CBEA5DA56916984CAD87625ED
98355974A608CB758F2FB28EE42A76F11607C84F944D3FE51263A8DBA84E93A7
BF7BB6DF9EA825E6DD1B38F09E0010533BC14E56C291413C50141070B380466E
377DE82A00329C607B7DB839267F83EC08B4819411F01130BCD93B9C2448D878
FA41518DBFB8817CEBBB0FA2A3A4A0341C5BC4571A31096F341A0800454E7455
74255A02CD28BA9E87AC9AFC2A7EBD517C7E93896335DCACBC34A1743D4F7B9A
1E4E1F8C807026C3BDFDE6C13DD2FEACE5C946797E396157CD8F40EB6056314E
6503A77F6FBC914A6FF8445F219F490174186824FF78EC89C3CD3BE36E139A70
90FBEE0FC555A7BA87D34A14F14F7498F7B89126FB6FCBEEC037C664763CCF6A
F25C1047871E270F4981DA75C1A2BA410A1C7F82D2835B56773E7A78C4B95F5E
7D606A1F0603F07948097F65C8B5368BB7019DCE6AF86660244D6ED879306C23
EE84ADC874DD7355176468330F7D9D1E087F6078B553AD3DF63996C18B87248F
EE36D224F255519FE4D8E47122B4C4DCA0E9042E1FB2E48D2E7E4B4DF54D7EE9
B48626D24E09F5B4A158DF3084CEA25DED422E0D2C379C5559EA83A9291C956E
D1A9AC8C22E7D3F9B8C5720C426D94C5720350560CAD8D4F8F72F4F8A14CBF91
57447AE6C7E5FB826CA964E7CDC3795E04A7B420DEC645001D841708B061C4AD
9E74CCA331DE6080DE4F3E732C3045A69FB8A49BB082707B2B06C926D2B5450D
E3F1BCBA05137300C8FCF6FC5F39257C7019D49BCB8F6E053894012875912436
C6892CF7C9E0D025E59B029C021785AF3697A076A9C657C74B15F2817F78CD3D
655520CFC9B06F37462C3DC344DD33CF99E2FED0BE18B9EF74532ED4CB1E9D60
28C2410293C807480F46C21989A09F9F9F753C0B1BF340492536F2E10658FED3
946E861D9BD916928BFFFC396FD033D38B2479461D7A79F997A0F5E8A6522D52
A107E7C327FFC3C445B1E614CCF1EF41A619C3281F49B46CE994BA49A64CF9BB
E2AF068B2AB05CEB89550C69B21715F5B8AEEAFB7F864498386048025334A0B6
71378BC393A6640D1BD75A219A0B00EF0A7082AE4B7898B953E96401BE684D69
C10C130A496F885CBFBFF1887DA7EB3607EC10A9E4730E36FEB80F752C3D78A5
BE33A846D2FDD25DAF9B5A747EB78B34118C0DC55E415833C72BF066D28653D8
59C238952A0CCD066C60BF5AD328803879903601C5C677E9E561306401819082
53DE1D3101C8A1E13B427F1B20261CAB35E599709CE0D824E28CBEBC7CDA95EF
3F0F916843AEB5B2B6FE121AB5189DA14A17A7FAF7348B38D55884FAE6EFE9FE
D819BEB1A913016856943D6895A88CCC15F46C9431229CB5C7D6013A51113986
4066685144EA4CD916F14D3C216068B67997AA034E8C320692737B64942E5455
5499A2C564F080D8F120ED9C31799FD6E29BFBE3BE9D7FE91345F370FAF6EE95
0215BE50DC846374B50FFD3C7F5B7469010EF8B8AC23F0E5955E1A85D0654E92
ECACF64E79F0ACC2E5A57DA12604358A70CD9080AA87A96DB9468DD40300F407
44AD5B2686B08A4B0D208A8E3BB6A87A4F5837C21B95488872F42F5BFBFD85DE
18E717AFBFDCB52862B7BBDB2AC67C7F611F58A1BBFB61AD2DE57EF60DCF5A4F
60ACA1BAEB9A95B8C4795158D88E4D371BD41EC2424AAE0D1DFE36D3BF2828C1
F79C79684442912858B901456855C9C93474AFDFF07405136960DEF3BCEEF02C
E0E011E8ADFE1A61EF67C8DD182AC5EFA2D38CC6490324B2D37EB25B2E16C495
FA9C9F94B5758DEE33FF0430890BF5FF13B4D6B761FAEBAED987EB581A40AAF5
21AB68EE4BA5468889484ADFB9498269FE4FCB852588C5298471BE679D633BFD
84CB2921D461A2637C80EF09C5359C5559EA83A9291C956ED1A9AC8C22E00EE6
8DB27668EE9822610F8519F206FE279E2B25DFFD56C9E3D03F67B2EFE63589DA
50EF822F5380F0E5CFF5154FD2BB8D104481BEEFFE9CBBF87CF91CB3542A09B6
9AC253BB4973C6F6ABF544A84838EE9A0A6AA16A32CA4058BB3B12EF3C1DE6C1
1079E4A50DCFA96436A09A66A92692ECB856495A12166460CFB0C47469CA52E6
24006CE68894B0407AA3240D28AC0E29CB87F380D794E1BED29D3F93B9DE8522
5827D4CC503EE02DE299327EAAF56E76BAC094CBD224C356D7989D3D1FFA9F17
52D76627603543947F00B92DA5AE17C56E64998CBEA5DA569160583468978392
14629E1CD3A1C579972724B68342A3EE8768B697E6F8521F35DD3F4184B1AEBE
E06F0A0A36E584A86BF1BD10D2FB6BCF7E54B43BD28AAC792C2E450B9BF52C0B
0F7696F35DB9CDE0D6141C5A0DD35C17FA22066B2ADDAD678A17D2342C13A682
CE68BD61C58CA8DEE16608A930E6B542DD346F14E5410107A49F082EEF1A8522
595F85700D8C1016BB7ED124C0672AE7E8BFC4C9D8F4209598D1BF56F0B95DA2
D4AFAF5E7E7FC99E09AF7E6C7ABCE9389BC7B4DDB260248D0DDA7089D383BEA6
8A4A8327DE2EF78546CB87DED2565B82F9CABC2D1BDE1ADF2269FBAAA104741D
A5585B54FAC04CA17AA0E4CCEE54F2768FCA9F4E4DFCF20B97A7C9C141649A1A
F1F2B2C626A156A4BC6EF66E8A840E7B51BF3C8D3B41E0A123FBBDEAA20F3A23
20EEF035EFDA3B1C4E79B498484C7C4FF94778282D3F3822EB425F39647019EC
6593B644E5B813AF806A15520D36AFBF3F3851F07C1CC2857A40CB97B6668333
DF9280F31461E586581770F83952F50A9F5553B327D89EF38CAE453C2D57AF95
95D53DBADDEBE671031ACC4955B15713E613D54646D1A956D6958D78BB1C8AD7
39BCE83604E4BB65F727E8B0555B43B5F73E9DDAA2E6804EE17DA33BDED9BBF8
6A457CA8463D409FE38EC682F4A2D600661D619087DEC73A0B49F5D2E5BB9D0F
23DF5D8DDD97F93824DE878BBF07834501382D452C210D280CCF11230D81352F
B53AE43025DD7225A525E7E5B4F18D8180F8CEC8D840B43621745C906CDCA14D
BBE4A677BE0AF1B361E2ADE458982D90A468C040BFFB4C648A9DBDB12B2E1CA0
436BE596BFE95110869521223FA3668B130CB286543AB123A3EB65D1FA0BB83A
B0DCCBED4CBA557211D30F0346E71B6D7CD2C08E8FB1A81D6663AC4B02883391
BBA446ABD6E8DF855D4DA1967E148F381A39670593130C72963B10D5C4B19B9A
D0AB4A61C7E56983FAA67DB4672DDAC6A751FE70967738107F4DC9BC75FDA79B
A985B306A6CDA5F8AE65C30A5CE2D1F66C28E1A265B0AF9413F9DA7A30444D99
2643A0DE3E667AC004556AD2695644AC890E05A8E6A0FD84D03D79358FE3891F
DF5B16C77AECA32C5CED5EF8B30DCEF2066571440300F0BB4CE92EA1437902FF
A06E1A60A26CED51F1B2F0815E57638FCDFCD08BE0092D15E2CAD6D8776B8218
7E20C8F7F8667FB5914F07FF7669719AAB89A17B99278925FFF9B826709FE653
651E0F0E0B82FCBFF8745D10026C8903D9734D002B66FD97AA86AEAB1BF32C04
23C1141CA11E072FF92CEF1B7E9D687CCD8DCB9E0766D8032ABE75712DFECD2A
604DEC506E9B93D99B3C45D305C63C25AD808A06DCD7DAB5E1E5D8E38D71E90D
E5650A0EA8E21599E7945E6D9BBB8EBA6FC48DF968E2D47B15CE3E8740C1ED59
9F55E134ADDB9C4FB37728BBBEF7532058B6ED119B8F2DCD0A87E0D98775E2AB
C63BE751DD3853292E4C5007AF7F4880B539B756E12586792EC7F5E5CF59018F
8B83148024212A31723DC70C0946086476010D714CB24064C145DCF7D9F46EF1
6605F8E5A270AFD52D5B632EF79CC60D884B5C1C483720EC38E6DEBE624745F4
EFFBE43DFBBBDDB4E3D6D9170CAECE28B6E0B9EB9C83FE340EBE8F03A38994AC
C771FD477D0952BB0D828BF269ECC91D8E15504892D7A72E5AAD673C77357196
AE2A60071A4F9F9DD7B96D56DFE0D78343F5F1514065FFB69A6B9E17E97145CA
D7D6A01AE7E076D2BC989667BE5253ADC946CFFC9E4E593E15CA50E062CB329E
8B023897CDF9F9B04DB72D662C790D17BCBFDB3F8D092AA2EC0062420DDAB752
790F22CFA0004A3BDF1555B26F62DB50DB237D0E6DFD31C3A3454FA6949F135B
18F65FDA667478741AE55C04D1E341CB926D2E92BE5E26D1E311EEDFF5117F9E
66700E415678CD1F0A031D18C384CC30562124A15BFE8B2061655025C4F43CE6
871A060D66067A79AAC0A1C0482FE103771389CE15D63D92E4238E710E63455F
219F490174186824FF78EC89C3C66B0F977DDE5EE8468C2F0B8EAD6004782010
502C269549AD368A60CD66E3A9B91773EAF8714B518561B17A9860DA936CC612
23A4E6CE3B38F9072EB86D70EAEFF2DCF00466FB2819B1206900152705ED49D9
81E5BAEAD024F255519FE4D8E47122B4C4DCA0EA34536516B4832DBFC0E38622
1291BB4A20B6820E672C9417142B5A5E9F6B5245C35161A98CCA61B17C3DE418
62EB658F558E83B83A5023BABB15DB97C606F5C9317680A2E45BE31EC678259B
D9B919BAE4DE0116512AFFC5F891F30DD3D978A78A4ADC04F7B4408B65DD27E9
03DBF842D827B33C669E7634B3CEA2F00301B43FA5A083BDC1A519119BA036E4
0834E3032FFBA9DDD5652727A16FB3EF59606354AD4A6B726C02176DF5B9AA38
48C880C85E4361F6655177EC3CB06AB629723C1CAEF05E190C94E75BF46534F6
600A0C7950519BE0A33F60A81187599C2BB856F3FFECCF8F972F2D63E24C8FFA
00BB54621D398ADDD534B330467DB68B7EDCB378526A7C9061C0F500F246B171
B95B619C8C3616A7095775E7D2280593CCB41A92B8B9A97FE29D5CD8A9A545A2
032C863869EF22A956D705FE9D95B8F8C871B595868C285B1232A8E5E8EE4806
567155154AD303003686EFFAFE755419F1C253ADC20659B5FAD4AB9384AEDD8C
5342F450A0051D10AE4BD8B0A57B4933258DBEBB982926CF2AC2C9B8C2995792
F40CFA32D389DF0E28C3DC3FDABBB7103A4F500E99D4F98C14FD6E83D9CB1AAA
9E25FCDA102A69A8360AB0D794FB328F13EB82483FC8FF68DC202885FF6B4E2F
14C66B8E5F32956A60D1784D9CDFFF88CE96AB75056859206FB59C264E9CDFB2
CF10089600606CEBD60FC9920B77A2AA58EB48BF4C1D4DFB0BE50ABCB2FFF243
628AAE8A44A5C3C6B5EE287793D8FE7C245CA0CD23EBC3708B3ACE529931D86C
F2748A3D62B463E569E0AF983BDAAAA3D2A8CFAFB7D50D636607C97B6CF5355E
A327F0CB185D073F0CC807571C66CBCFAA97BB1570AD58E4D473363E97176088
0AC3810199BF61E0290D260B172EF398AE19A7D029E70F1D17FCFE793BA0DBC2
21C4F879D01B2DC969ADC604FB2204E623A02FFA5021B67B0F3DD5A0D296B981
6C63AFB0373840E32D227A953531F76BBC3EB3ADF327838CA0C04F9BF6A4D710
B9B44FE2EA7D8506A9FA093624E316E40E7E786DB51FCD69EB288E71B51B3BA5
E3CE35B8755151715519336A7D4E95C2B3DA3D71D751585DE94EE358B51E8019
85BBC529B9EB5430836E80AE952002863D00FD7726AA9476B3ECA0C85C9BCA9E
A7CD06BFB8FA8A4E4E9AB5B8EC3E111D865BBD9A12882316C1B9E84CB7B60209
520914622B0111FF346FEACD0CA9ABEED321A07D23CA44F7182D41791D9F8C15
AA8B375B3C445C65B46A98F0F9F971F042D98510B6AC680A8F61A5DC35147244
290871E8BBCAE2F14C0245CE81CFF2192AF8F19F82CA34251C99D79AB8A7B108
793BA95659C2679B05EBAB7ACF2248C9015F0191DC546DA31CC1C39F0D0ECEB7
DA344C04D2B9E78BF2D78950A8FF2BDEFA6277DE9A3DECD483E00BB9D0279E74
C1569899B200D5E928A06AF83059A36704111066F7ADCAAA2F8CAAEBFD84A70D
91772EEE4E016B527EF236E5AF135276C81BF68872BFA4F0240677980703BE83
E191E15A34F39D3B2FB467D74C35A99620B2750982749C116EB39E30E38216CB
5FA24E41CFF8939EF8DF9A36F613C68C1E371C456FF7D0532C269549AD368A60
CD66E3A9B917723E4D53ED658D048C5B426A0A3FF2986C6903AAC942D568BACF
D11820E835A135D14447FB4EFD55F102C8B93B2ADAD1DFC40F41C59A4458D1F0
5ADEDAA5C794D4436925DD07EE52D755CE80CFC32F9FFD8F7E1EA749D1F20A97
610D34E0A37B6784EE96ACA6EB7CAAEBE01B04E9598572A5E7C02049530F5F37
0855561EE2910A39B5E9C9AB21374B836F8C2856C01DE14AFF58410950805262
C3DAA3D7B966763DE87DC79D4CA35A6EA5D140DA6854D31056B9B66DEB275BA5
683402B907DC7FC21678FCBC0D3F80C0C8FCDC9044694863DA19BD085F3AC7AE
6C1B02B769AF3E7F42656C12DD51F7DBE694E55C2DC371AEA4E780FA9587DB63
36571044C99AE13A7BE3846CE587DFF9E0BFAD42A34061F34F83855C0832ED8B
B994B0EB9D4DD1BAA727AC3DC228BB1F132176DADFF15552E6B19178606A6DEC
9D5D64377CB1F410183BF2557EE386D9C2503E2D5FF8CDA372FBC15687119216
817ECF497FB05DC34163635AE91E133F8192E19652A2384207EF930D1492C373
72CDE5A52A19C99CF930DE6945370AD05472C33C523F93D84B1548637CE63EBE
78403A13DF5E22169F121EF2A46FCAEE3E56D84ED42F448933910954CAE2627E
75424C83D66C2124FD165A4EB774821303E35BA0ECAA9D264092B31B352CD9A1
5904C6305C28DD86D8E92293D987E89FC74055ED1602D8588AF1EA813B2CDD65
9767C05495F231E450080716ED92AB457DB51EF450FA56C7809C81B143BD48BE
45DC13DD8DFAD3F8450E9C04F3D2E932257E5CAEE473714506AE15CD04E141F0
0F832F5F45290FBEAD55C2431C863434670C73D5A70DB4CF732C4EBE0E871939
D02873061C73946A3C7AE3B122DCEA7B5A49AD185BCDB896C9CA2E4AA52D6814
C3A90F49453B9CF99E4EE60AC3E2C38EE6FACB1880D07A2BACFBC6C43CD846E9
F38EF81423D30DD382611BB5EDC84991B78AB6039485BFA31EE83B4F946FA2C2
56F380F678A62ADC9A58AA39229524277E0105FA1E37695B92C5117B02E02FB5
314AADB5D49A16531C0CB5BD656933F36729365CCDE0E8385C399A26D81C9946
96192B51D2D146296AA6AAA718464824E980DBC58C8F9EA198E91CB7C7748AA4
241916BB45030171081E5BE44AF025441167922962949CAFB76E5462938E768B
AD077B3BFE57D69E4A14B307D833D4AA8A36BE77F584D4963DC48465DC780BCA
5096CC65DFC64D29B8D53A9CF951F2D60518EAC744062D4B25C77BFCBA2E7958
B39D4D7BE19965A9845BBFD1CFC75CACAEC23A0EEDC2F8BDB769213ACFDC9172
D06F35D4FB9A1D7672CE0C0BDF313712E5BD1D5ECDDAAC0B7F7C6B08D31C1047
5E0F0F7696F35DB9CDE0D6141C5A0DD35EF40120E03558D34A16744457EC281A
B2A7395F5538C726B4D5A7C95707AA754B523B6D0708BC49A4856F13329FA299
DD94B314F8F4D944A86907AD0CC3D09CA0A2B4436545F4FCE3470CACB03543A4
861882EF3B6BEDB8BBEF0E945DC7DC15C2099AF080659F0CF2A613E5B42660BF
6FECBDD3AC613B1163C5D075655C046DE3316277769007C7B8E5E8E068AFCB03
90B1CDF163579EE3AA4C224D216460D95E9FA506F76E27FA797870F9953555CE
A06B5E9322B1A6CA9DC9E2EF92AA585AA1A47EDBA106A77A5B2C785D236497B2
65D5A302F2406254E8263B967740E12FC75969CC6AFAAEF0EA57C8EEC26EE2F1
5FEEA777735D537130031EED670768E054837C0BDCB8AEAF0AFB5D91542E945D
9EBBE83156D4533EA77D663EC228F4CFC3DD80A059EB9D41723C24A71BD1DDF0
F725592E32B7AAF23EB24FF3851E250DC3AC6688817943EDCA6715C368BD24B3
E6FAB30DA2F1C7FCB4FA1EC300519A36DF860312500274A5207044605865A09E
AD831F25BF86F73C2876F80FE71EC240BE1726990A2F6A7BF97749FFDDCF78A1
714D3F9C90CE7F8D0A47CE18419B34AD6BFC134101D3EB5752C9AD9A28F38719
8962121473215135E2C61CA5A542EA13BF2C5D30ED0D4183D73D7948ADB69D99
75ADA230E03FFA5B36CEF1F238703C5C9255EBFF429A17A6A51657E0899C841B
3E4B8FBCBC19D7E32DA35722C36EB7193DAB553BB62BE540B93BF851F4C62219
807CB90887BA0B9C416D373BBD2C9E307670A8072DC64E96D2C58AF2BD0F4E44
9978B36E5FA1B84B0BEADB59314AE0FE5E3B1A9127806AEB347131EED784AF77
4C6454FED762812F049EA44CD7DC6F714651FBC61DA43E6140D8C39C78168BCF
E359ED3F1EDFE675BF7899DD76280312AA0240DB94442F3E299DD0A7F38E89B0
2770BBF2111A5643D433646853162010FD16FF24FEEAA2BACA051F165F639F9C
F0363000573021F0D3220FD68D1E5F12D02D00C3C5BA1F5FF9C6F2E99403F393
51CA862FEB75F53D07536A32CB405D0D712CCBBF5840D0CC6DB889A1C5C069FE
4A38BEB541847E3A4F411C3E5FAE1BAC2C3E23C5A66F084567136E64075FF065
788A7B529CF5CB576DAD8A569A91A020DA1B86C7DA1F31F69B3DD05DDD24B51E
3702D441BE5B914AD337312CD634497945C44865035B1158CB9A9DD667902D01
50EBEC48A96DE01F45E3776809003E6D283D40868E81755DE0C72567F580998F
9E08DF97665F023BFA7A4F3D14A72A94F57A327C44E941EB62DBAC95A053B2A3
8C80CB0D5520F547413DF93A62F32F2EE37A2CB2647BDBD580F1E800CE2F9CEF
658DD1A4DDBE7CA087B6576A5FCEC638B77376722B7C02FE29798313740B66AD
793BD03E062947EDBB894405800BD35BD2EB58AE5997560A4E68AF10EF7A53AA
29FC34410FAF89A1779F56A0902A7EBF4F8EC88A57C2DF0160B4F28AF9D29F59
99FDC416AC85C18B059A802FFF174F4542587C63986A42B541C80157B0DF7DE7
BA07275F8BD5395DCD50B62288247D55EEBF5D9E2A5446F76534436F83B7B219
70CC7652DBA984AD015374BBA2D4CDA831D7F36A7B3EF6908754242EC5880E1D
82FDCBEA468D63CFE51F1A1610F197AF969703CE9582D9B19235B8B288FAC958
6D23178AD80CB3B7858FF1783DC42D716B90CCF484BFB10D58257F84BF9D6A2A
F1C564C5AFED055A3D9EB1C897F6865260540E7A1825C047628B292A0F2FBB4F
6AD28ABDF6160774C484B41C09C5D96ECBE69BBD0DD540CEC9D1AB2DCE3795EC
90DDFF1BF98F9DD29947AFB42F80254938AAEA61F0C261EAB9CE383B7C5E818F
F5589B4730F1F9A1C92B81CF44DA5535E775A7FF9E8235CDCA3224261089F5EC
225A8CA4CACFD7CEEEB78CF5BE89F5DA4202BA08CE06DA6254CEAFBEB53C0EFB
3538CF270D3BA6137B672141302E0C9A9A82F5E297FC2A7EBD517C7E93896335
DCACBC39AAAA14BE6CB518B59E217CE5F72FF6A8AA689B4970A10BA4F0500313
465AFCAA8EAD6924B0A648E14E5C439561E72A1E7A2EECE0B3AED352BEF58C56
0E44F27B9FCC33D2CA78332A3F1001D0D6072CA4B5D7338A992F587B8670952B
EB56128822AC4F22B2BF3FD5F3785A070EF91780431A0419D95798D880D92CBB
70AEA3C567AACB6CD5BBDF8263613C69175AE76C589CA8B2F48FD7E2FBB2AA55
2F5D4526C2E02C8B69D84C9E5722CB4930EA4CDF0E3AC70DE3246DFCBBD6E131
4C8A5AB155289EA879E74D1016889B947CBE4E2248DBC10CD7454636E97E399A
7FC837EFA0B5B480F7160101E0F3862D618A0EDBD463FF65FA474D01EA2FF8FD
0FCC249D08AEF41240754AD53E76B711DE647B76CC39885604BC92AC6CC3B326
B4DAF2B0511C946BE4C91E6725845D3C5B8E6211C3F1BC96D62F76E7BBC0581A
708D05C1DADAEF5D86DDB7B62582FAB7E034F52B5ABCBEDC4018AE5C2F4FFD2B
AA53E271A305ACFE874B1BC41011E99E552F82A67791BA5B1FEFBEB7EE7CA685
090DD542E5B7CED8E8D3476447E7A6087373AE7E565B43E758D33649A1DA687C
919880FC2AA37E46D93E36A7226F24339AF0C748650DDD36352BEEFD6F0D9923
C03C52DB154B167360BA02BDDA25163335D6D22E5E93D08D35C48A1D19C1013D
40E6185931C7DC99BE66801A26DBF07A92CDD8DE66E7BCB5C50141EA9BAB87EE
221027734E79FCD1EE08B5020837031D7FC78E4562C68AFDCC3B7AF3BA4F8250
E227FB086B5F2B97C7C741D1D24B4CDC6D666CD1F10CF9C2499BEBE2613232E4
866B0F82F15A13F58C3DC4448BA756E74EC71EEA9AFA676677E7B62788F99ED8
3565C28C2D635A28D4CA67BFF9E8E106CEE6E12FF3C51F0E0F1A97F47662E2FF
2F77417386EDFFDAB7E32357547E6AD9B24A0A08AA00186A7C0EF8391150491F
896E03ABDD5712825C0D6421B47C002AE9749617ECDC56F7FE67A29D8A9FA4BB
B81F08BC902809B67DA5A966E6CC55839ADDA1206260ECC414A47801E23C4313
279E6AF739216A327F2B168BD7DDE2B7DB02DD1922B100839CF09E163F750D1C
9E2106A2AB93156FA0A7B99B795351929C276DA6BCDFDCBACC2CE8928534E288
4CF137ACBC298F53510FF395B37DCA2B2CECC580B0B47D54A5462265A76E489C
590278BCF7629CC9BD631820EEBCAE50ADCB996F804288C8F39F5442374D5EAA
DB079A79D398C89EF333B288DA49312A39E005E994785F43EF1EEA3C3AAC825D
9EA3EE7EC7CC499FB012D13DE737ABD7CF62905F7368074BB14D96385D84868B
3B9EDDB359CE69ECB2274E1039EBD4C77E7FF01C58577338076E86F781E3FEBB
A0181B7CA48D127958761C4F0121184E7EEE7F7F27001B0AC6238083F92FCDED
1A4B5B486DC38CE66D51793E3F306668D0D062C83A438F2D3BF45830808D947B
44D40DE8E4742E27AAAD87B34043B4C3DFD87B48339A04000CFA7F464C9B8476
F303A48F30EB3852DFBADC9B7A66A32E96DCB47D21468DF4A518E19F9C4143BD
8D768998B61787CC251135CCCCA607B0D82DA41623152B5A01F5FE27589869F4
8B459290C17CFD1F6D196ACEC1B3C77E5603C08245E09056F4FFE28B76CBD2D0
CDD661B288A9F990D03289C90BEEC7F026D8A5B16C923FCBBF8B641BEC1A1698
2CB9ED91931C47A4FF0A637700A2051368134DFA332725988590B484EE42DD76
20FA0A7BDC2C0CBA921269CB754D5E02DB4E95160BA60802C03E8C65A6B2477A
431704D3EBAB0A0F1B5CA40BC723F32FB844ABB63DD4232BEC8CF5CE7BDFE0D5
D4DF86BC20FD5071BB073459E0D5881A46A4AECA9967B2F25513352B09AEE9A9
66810711D74217115777717DD5D45286464E2B8F44593A92F255CBA38B6EEB75
52CB7BECE71935D6694051D355D6551EE30A263AC1545568649CB2EF3E3FAD1A
45A679B66E326305E90B98EF97D459694D22E52246E336C89AFDCFD2BF63D213
8478CA212A926D4A2CE7A8837435C5405DD22D73253721A7A7ED254EB80B33E7
6444EF6C193365EBAF4DF7F93103FCC5771EB6397C8F8E3D52E999C8D2235665
940EABBEC94020D78EEBCD14BCFF7329BE3AB437BB41D7BF83D376930BC3A2BC
F2071F2755EE953FBA32134B7454F9173110EFE0DD27FF1AEA88773E752D9F22
455D40E76D6AE724FCE0A07B3A35AC6CEE9DB9CE77C78CE89C503651502D5A83
37AC4875CCA030A73FE5DA6DEEA3C27CE6FB1564161D202961B6230BA28D9CAC
F28F6991BE5C3FFE0DD6FA44CE26F6FA469259A906A7C90350E3E7E59FC416F3
E94464561278739540219CB4A5457AC6898D070418858B2F02DB25528F4C563B
A756FC2C28B1D5B1BF76549B641A141916FFD8A0C0FEE30B958693CB11F3490E
6D4F9C584902FD1464B89993EFB414524B9326A3BC1BC39BB63674B3A48016C2
341D3475803EC145C2E47DB54D5DBB755F0465B01CDDD845B6964CA9B97E1A8C
32087D2CD3AE1D865D14C7A85DFFEADF48B0FA6313DB266A2AD7DAF3A5A48398
F1F0591A6620D93018EB49167C88137760321D6FED275675A9E8908E76A71EF7
6A263792573D3AEE6F6BFC1DCF8C51909602DC6C180D6179B51CB42E8AF02C53
2E79CA3FABE2A73052024F7AF81CAEC80F74A734A25BBCFA67165014EF783F74
4F983E4C0A16ECF0749F60EB8D2863195BF7D6A6D3912385FA41092FFBC1C2A7
E6784948DC85D3FDFFC082F730D2A30584488B89903901350F321A72C42CC0B3
6BB97834F3D5A2D1C98CB45C23229DF18F32E361BF03211ECEF5C881D397741C
5792DBE868073CC46E2DB79A314E1631C690DA0445995DE4C3D5407CA4FC958E
7E0AA5CA8F08A10060EB6C0C34C9A413297ECBB530F51A68D74C1C382CF3176D
D623EAC11DEF3445DE2779602F7D1E1D065EB9F456DA69EE6CFC64E9B60479BC
622DF5E6C76355630320BF39D605AE446B463F63D6855B8DC8051EC854465F7E
1ADE53C845A899661DDDBB95F1397D6AF34BA3DD842665F4BC98DB62184F6FCD
91085DFE051109D763FFAC0DBE197541F16CE7845420A75069C35AA1FC18D678
A026B7752797492B8ECEBFA5CBB2B05B53D40AE66AC1DA08F05BF581406B4AEC
9BCB6EBEE4F1A46578B1B11F52252859A6D1C292AD457069BA87A5EF807CA600
4895274C4701A5C6053F55709C19FC6E878DE1B58DAB29D2CA7F0F667D06172C
793CCE6EB749178FACEA539EA66156A1CE4F63CE5EA10B97432CA5572ED6AB71
0F8B201FAC97C416B2073BC98986097F2963622DC3F540A971A2C6BCED9556E1
C980916093CBBA7E522AE53B675DDFC7B9EF1040A7D6F5E43AC231A683D7C4E8
38CAD797544140F56AA3377EC26418FD8F14E14FD894D09872183A6D4979AF56
804C4D54DF02178FED6F5749B26E9EBD6B8ACF2314DA5CF94986BA62E41F8E38
C18991D182D9A193B71C953E8460A9D08A0F19755151C70CC034E24C27A2A272
4E923693A1D922028D347935EBC5D09556154505CD44F2780116DB00B9092CA2
6D385381D96E3A6EDB03D0872F6A9692CAEB0DC8710D9A3416AE7AD3D68BCED1
E3A8481B1E56448AD92E12FD83DF8890F838B1F2DFB608EA4AD7E6ECF2A7595F
6C79F5B631069A4109C0BABEB2C6A60DEBDBB047FF1862999DB1A5912F7345C9
13A9707E19B5BAD78915A4966AF1ECFA5BCBE4416DB9B91E2C50CCDD6EAA91F4
4C391047962B2B3BBD00E36F2C084CD6DB96AB8E8C5F1DDFA837AC997EA9777C
0EE37A9D667D0C164D058A212E2D526001123B81DC05F9E5A2B99DDFEBCBD213
E7F829B8DCE86F31C7B7482C9D94635FB6404DE6616FDD5396C0B66DE8033D35
C21AC92884CB51DFC7F23400822F6BCF4EC231D88E02981287411C542A1795DA
06EF1F20DFD5BA9B01AA050E1E8D93C066A852038C6A9165E44FD9CC5D923D0E
C0A144132EADB5FB3AF0997F5EE511354CC37A1A0AE8EB381E949794E6C8805B
830CAD7E77F45C455BF3961890EB9B748DABDC9FB3767DBD14FE001E28E5A12F
61CCF6C0C713CCEE4EDFEFFF235928F9436E03524D53833C69652F806C4DE7E6
73413A70122E9056A7A90FF9EE95C930FAB13BDA34578F9731958D522F987BC4
315E1C9A6D465580BA96D760CED8DDD7FBB80BB5A6A1A548D55B08130FBFF494
1E2257FC0C0EED208A405978053975F827E6FF6AAD1013AF9C802BFF16068E16
0C5849D052DD7028A80B8C74A14FD977D7DCBBB6D95664AB60878401AB89DB7C
B55A4C70DF8EF4C36D27A287A8D9E8B12BBB58B0190CA01A0011C38CC90AF2E3
F1808A8EDBC8CD26ECC68906BF2269888F24B1778092DBC3E58E078C47DB39BD
23FAA754484C764FC18A499C3CDB48C467CA740CF88589489F9382200896DFE3
32929F93DB49E9BBBD33B4D062D67504C7D9A506F7085987F16BE127A39711DF
3775A9A817546F008E968778760C94F9E8A8A35F257E92E2B0BAAF1B3229E79B
9014950FF71B9ED38431D0CB33D69C7164EB441864801F4EF9ECA40C1C8D6F6D
34721C0EBB00686053200A9557776AA2FCC7FA35B939C00E12172DEB8E1B0923
B5AA0F463BC0BEF519FFE4019CE3E26A7BA915F1E118344D7E545808A0601438
D7DB8F5EDC65513A4526366164738442D1BB90852307CB5DB13D3CE24064D05A
D5A6E4DD76A156FDAD2D014983D3A45F61F56FBC07B99167A038A0F2E54FE0E4
5DB51608B59538062C8F60FCB22688AF83BEE852EC37FDA27780727740D7E09E
4E724C5CD8EF2C7A3726611D370762F6FE52589A0929EABB5EC4CD77D332F988
6DD05B0000AE2D844FCB6B5D6EDB1FF9115288C7CAA3EC9AD580587DDE1F1DDC
0AF73912B296C86EA7D13B153D6808F858DABFCAFCC211485BEB59BC46C2FFE8
8FC2E26BF8988042CFFA3CB3D4CFA3598A265EEE2D0A45CD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFRM1728
%!FontType1-1.0: SFRM1728 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm1728, tcrm1728, larm1728, lbrm1728, lcrm1728, rxrm1728.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM1728 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-174 -318 1347 949}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA4DC69A02016AD2E6C71441AF87012AB28D4F0F6
05A1B80B954FBE39F81BCEE3BB01BA5C5E565B5AA6FC97C7B6B67E84357BA44C
2937AA743FB277BB74912DA3E25E67CB130405792F93CE2E46116C19329DE8BA
EE04B792CB05588004C5CE06F43DA6B4B7A32927F2C6F890A67FF20BB1365D06
3253F39A8AE19D733468E9F5471E11AC6CCD6414D32B064FC8EBD4AF9566E2A6
EEDC38EC94CBA2D168CF68A2446460BEE734A3DBA42E9E603A42A39D56C31B65
CB46AFB15FB6173722CBB1A11340FD4D60C9C1E5FE87804590AFD4CFC5BE2708
DDBCEADB09C259533E430B4969688B9ECFF89E492D13C71C38F5CA9ADD1FF1EA
5616C0A52C7FC2599A22FA881C576B2EEBC0E178815E97DB82FC6C2CEEB0019C
4294AB22B62F31451ED2310FF7D31077065FA4DA0C578E84DC5B45EBE5910053
4705EA0BCD13654FDD9853F9B32E4256CE9281C2A01C858D43FCD28C34BAD1DD
A9438AC1802E3A2F18A13FE940B948290D3423E7E8BB8914B605290D931A5921
2BC316BA868C0A90877010683689700681E32A9F65839CD7E737EAB2B87C9A48
BC2DCD592E530EAD50C8F49FBDDB3E4720A71674E5FC179BC0D407B00919537E
67FB521FF5A4B32317C44EDC5EEB3159FB0E6EDC040841978A5D3210CCB067E4
75A43DF2B7106A8423E4C5FF6A84003A1BE40D879F6805380C89A7A0FD2DA384
B329C74A98351F8B9220CC285996BE5D96BA679E7E673E405F50224B637DBE75
627575F750101AC80E355A8A64AD4BE9FB767FECA90CCFC12980C2ED8C232AE7
812378FCE434163479FB95713E191379AD62E816A2CA0FC200886C93F399D8E7
3ECEE5C370A97A78A6DFDC87274692B7105649C253934138591372BAD90CEC89
926B614ED01565E2CAFA4372E014A669B5EEAC9D16C2D43E99D94227767293A9
F2CA64A5FA797068AB8EE8F3DB72667AA8DEE63EE5D56C3DF27BB14C4E93D0D1
262054F1343532E74B5C69138850D48616F293B715F3C1C75BF59B802FFF174F
4542587C63986A42B54453897489BD392E8E6F9BA6D267FB65BD962A7A9F0CEE
FC0E41E5B4E80F6AAB41B7D68C5084966C420281CC6EA1599773352351F8BB58
7E2687D774A0BBEBDC86146300E4A14A784DE5277A027A91E51C94C882443A36
67BF6AC4874A26CBE7CD05B6BE4DDBC6DF4768664BF14767F0373B02D60CCC22
8343473848BEC02304B79F1C222A3AAA903BA2F075BFF945955B10D06902D005
1AD66140461F97C7AEDD615B9256CF538719621A5C5E9822E8CCF950345D3E76
7F4ACB9D01276FF63B62B80EC04AE863A04DFBF625A80BF2A0449D2FE11F4A25
35E72E07C6A26E593FD47B0297D1B413584325272087D1106B58BAB9C659D71C
4F0786F1445B84139548F119FA8E10CEF8144BE4448FF4EC6D6E5D5F84ECF74C
8115FFA28B23FA77F42AFB0C183102150A98556C86EC1AB27CA50DAB15DA2B27
FC4D6E227A075A554F9FAC65064887899C110A23D2970B441E2C951A003730F1
5B790D08E28822E7347D3A27F9C8408CBD2F26BF5F1842A768776F51C22CBACE
6B2A222BEE7676D8ABC04F72E17D2242E18D23EEDD237344E595169AA0AAE362
31CA92D437129BB809BFDD9D49289F9FA56B907D4E496BB4EC02874B12AB3074
A7418C47789ECECE1886FE8EDEFA7D9B8BB80BD5DBF2BA765273868A1B849F6C
DB0C43B3590D1F350291F9B565C6AE73524708E76F2B889A7B91C4D45DBED812
FE368B717A6973F3BBE556E941F71ECF11A3ADA40E5DB9936C8FE74BC3FD7DF5
41942E0742E2C65E12B77DB6B54C920160633B59C2DE2E7AE4B24F24DC8168F4
7232C0BACE98221FB06025FB4382C8272E752137BCEFC109D831EF664B5F9258
6FEAFF2AF0451329383A216191BFECB1E11E22BE1943425A0ECE0514405834AB
C7308074735AAF319B80E289028B004496EA3FC50820796FFE54927511754171
5FF22CBC9321369F36E9638736E8AA93F3445F830504CC3A8152AEE6AEF20858
EA23C62ED023C011534577D48E858F96DA78DEA0D58E4379CF3DEEB5DE1A7A75
19E343CD69CD441F3C6B4DAB5BBBB38FD3F1EF900D8D5FB86FD9440003BEDCDF
0521B824926A41EF30F91B791B6F7D1EF65BCC732233874CB0849460D974075C
16716CA6352737930E0F89FC00DC0982F064CB6EDADB9CFC98C8A8C9C5F9AAA6
971857C0131A24241A0C3E5839FA69CDAC50C99DE493ED0DCEF137C83C168230
EED2C30678AE0F46A40361DD9DE4D68A8BCAE9B2206A14EB68CC5854E593A5F8
193B2FB0A7BC894B5D381CF175BF4A02A4E11307F6B939DF4E71403DBEECA6CE
AEABB67B5DA1A5FFD49F86D7386E2068818E4044683D59EC4B6A07A18A480743
57B76671CF2A93C77CF3B9B6A5732CD54201286F8FCB4C69B80B9C6D1A29705A
C4163A5277821E7C20DAA4E3FBAC0CA1E1FEE70F196319A811B623E7DB883B1F
2DEBE315567AC1B7B06404E61479138E8CFF7EACDBCA8A7F3C8F0C1521CD2BA8
3608C1DDA20C47B6BDD50D3ECADFC0ED0B9AF7F3A5F0CD1060E54DBE0040F5AC
A6EAB97FFA336F406CC91C048711EF040EDD5A66A02FE509C306CD759B2F6F44
3D3694C0BEA63E78B26E677BF9804BD0F19FDBD133BEDBB60109AE1F4BCB4012
96DD280116C1AE65B5769470BB43DE8DD9BE0E916BCC846FCEDD445FAD9F901D
26B925D76AB111BBE6BAFAC4B35EBCBD82ECC93399F2378E1AB02D7E11E78CF5
EDC8CE8ABF3F247F1EE9335E4581D1D2EF99AA6665F063D0E8AF1E4E777C38B8
39F79D3EB87A0AEDCB65F8D40C743CAB9B48F5D366082E77405CB38C7A634460
38AC10A9087E1E4585E2A6ACCDF43883865AC1C1DC4AAAB6C452EE90D2B38294
ECFC443320FA066094F341FBA2130BA452FBCDBDD35056513B84F74D7C167DE7
86439FAB51DD48344E9DD19EC876CEB1611209D39D38384AF424D69A724D4BF5
E67442EB561D4C1DC4EE507F79A3A776201DBF5848EAD023DCCB9EA474CD386A
EEACE95222A130E97E6D408712B81F790BD5F5E1831922A7172973A1A4A64437
107F8E39D130F15FECC354CE0EC01307C7FC3F0B78BEB3B6C103F633F3FC889C
A314A5D35BCEB6715743F0AEDEFB064DA4BD4BF030D8F3BB97E3988D99878E0F
E8AE9E0887E13D0D965AAD25730449352FCFAF1EC50BA2BE98552911AD5ED98D
F3323A7BB8B711BC075B116894C7BA9316BF20815A75CEE8A0C14CDCF2879A0F
45D16C05A5A7D17103F97F11F9144A0109F7C60572E01929AF1BBDDFFFE449F7
AD9BBD14E39720CD5FFD2D36840A68398FB360A92364C427E102150AE973E128
0C2D1B69EC79E2F70FA5AF7E57AC8EEB3811BE2BC948A926FBBBADD1B7D40219
636D2D1BB7AC0E8B4E338F1F8AE37490C13D19BE00ECAFAE936514885EC58DB2
B04916739586764EBFF4319C13B7C8ACE5F6A072F168B075148D4C3ED2C0CA9F
A172E0551A37C55A715742BE83214E03DD8EC2E8F74E061C8482B0945241080E
19A94D632BB23F86EAE1B0295DB72601D2417B8847590F9EC86E2B28FAF168AC
45A4FEE565620690C78A3DAC4B7E091DCE521CDA21FC0D79430F7F3AA71E7D52
01D312860886BA133EE260F953266090733BA17E46ED19423DEBAFF33E879B05
C584E536D03CFF0EEC9E5060FD20FCED2FD021B8CB1F3E28B02E7E587973C1DC
A5CB5F7B296BCFBED033580A1432B6A5733F2843807638D116FD74FAF826D918
2842260AB1E11B361B175BD9496F6190BEF2632A955EA285C94FA1C6AFEADA04
4ADCC1E1AD42918C8C67320F6395F0D8BC44A1BE58EF810A613DDA0C42204B71
558B53559A8EA91F4E34AF897012B7500FCBBA6DF033CFCE77CDB4FB7E107E1E
E2E5E37D207B168F14EF5BCBE54593D56FE38644E29263F1D44E0332588C5AA6
C52E0F365112606804D0E68D704039DAFC5A920686D26647AD32CE4D234999FC
5108D5EB921566A678954C549E7F2F0E53AD0E88F2420C54576EA7559E6B6114
267FC316FE5FA1B41BB9AE822465013BCD5B69EA89644E364234009EC47D4817
BBA49922824A46BED7EA827FF69D90D0697D7858C28A24FFE9FD610D0DEF5DB3
8D83184BCA6CEC10B494B854649D642C43C1F55CDBA7992AD3888209F33DB6F3
17B9F4AC0A9A99D550366B8B9ED65C0DFE3D104403B4F469068B96F7A8A1F611
76E5ECC2A0BD0EA85D9C7B2418549F7503F6D2E4A09B4F6303D038DAFC2F7A7A
E346DEF8433E93FF75ED0635D5874A354C7CB1E7D98B2C5336772153B097CC1C
26A2A920CA26BA1118B4861C9900C092C3CC9CDF83822F2CDBCA87A1533DB0ED
A641E42B1458C0FF846CAEBA5FBEE789B157842A1DABF99E00178F2D7D52BFFC
01B4B0E12DD9F3C61779DE2D857FFF9BA6167EEFC14E3CA3DDE2C62A9EAA7B5C
AC4A2E427257D4BA6CA997ECDC75C8394C05AC0A20E4A18D66878900B1E50D2F
A8AB9C41181A1A400D3E6F81124F49FA708DCD302D6A3AC106A00DA8E6FC5345
FB9E3DA949129F0F2E62539E6D3B1CA8E2A8BC13AD0FAD9BFD353ACACFC03364
C7CCADC3CD919C54DEDA6D8B06487154099A1C24F67E53DA34DE10D9966F1E0F
DA64CD94A8DBAC6B74F6B4620EF97ADE3EF0D9E495C71C16E8F2201CA9FDA901
47E7A9C01FDD1CAFE089CC39AEA4A2F02E9F1AEF9F795585D5FBC9E8A17FFA5B
8025C729C9DDBF3DE42F97DCA39EBDABA5F3F902396366C48AB203BE7DE00AC5
7C8E984E3D4C399C4903ACB7D82A16D2AB62148A91AF46A71AA8E3D186FA4071
3C2AE046ABC1E67C93D30DA9D450F67B7FA14894599077A92B39B9E306D730D7
1EFFAC02A91ADE9BB638CF6C497D0D1E75DA0DD648A764B9DFBF3BCF6A010D9C
2F9CB9F513EE814AF4FB7A1805286596FDE8EB0520FFFABB84BF7C0744C05802
FBE81074457339B1BE26C031B27379028F3543C4308635E3BCAEF764EA473DFA
88D07E573AB08ADAF6F2D7D9F37C799E68B130781E1660F125AFFDE220C5A25E
1E1FFFB8B1FE4CEBE7C9F250F58B05BCF4189F52FF5723D85F57344BD20B1596
F1AE70CDF44119BDB4EECCD9EB07239AC61762C71784982FA43B4D0BFFB7349F
60E4B349B33A04338CF4144D61D939425066E8CDC4B86D3B1612191EDF088D1B
EFA38DFEDD1682B1C24D95EAA9A52346877976C12BB7A9F83235A845A9EB1DE5
00A42D124B6E86330A5261401970E95C970D7F3EC78BA017098E3EC6B36D2B28
C06E98438154B6054165D1B18A4445F192668A0F4AB8C27EF1DF81905CE54905
2C3BD503061CFDBC321474E63FE271F432F37EFF28D667F72EFF97EAAA7A9ED4
B5921A5C4B2B0B8786052C5E859A52E4BBD8688E4C9A891D0DD80A5A0A0B76C5
7438BCEC02A76A08AB6D73089973381451D49DE799BEEBB5C0AB14FB9BBB316E
DAD6BA02ED8D5E381B0E3ED8525202C1B7D86D151FCD90F0B8FE8868C75E3951
789F2E9B95C82B7CCC2EBA81F8AA33822F095963921F2D5D46BAE10550783523
9CD822885F583A3D862796F2AC06D3AC042AE92652AD5D73B202F32B4021E2BB
3ED6E5863798908013ED3CE631E200296EE741F16B12624008C6DC073673C30F
5ACFE803EEFA09E4752A187C45D80938E44C4004A915C10CE56E2B7DE4BE7E87
F54ABB7A5793953E26EAF91ECFDF555D5ADDC8C06DDF34E806EABF9046C00916
64403524A1C6FE77C016E24356EDEA215B206F6D88F9B651B72955537000EA4B
CAF6C85994F7F0482520A84966502E8436E323A2B45D40F20BC6985291611488
3432F3D294AC6098581E7137627406EDEB635AE0A3C17C821AFFD4047BC31478
092D05A2FEB46984BC19BF6E34E5623D6B111AF277E52D0399EB6F2622FD2F44
F72BA48DDF6C9841236414199EFB82B1D1E2E1210180657236FA7479E8DA89E2
BF9537374299863C85A30A293320E3D2C974E14B87484B9E0AA452F417D2751A
77AB4F090CDB32AC736409162BB25467C1357038C11FD0925003116E7B809502
0065992BC4F548ADBB4AB698BB31621F8B0721BE8C62E847B46BDBAD49BD7043
A0E3C1D6A45FED7F1BBDBD3E727AB1FB411BC698610D52324A9D183B81DB880C
FF2F528C7790816A4492021D30DDE7CEEA8A828EEA6ABDDFC0554329115E4545
F47C4F74446EC03D6EA3220A9C5A55D41C1689C403B5240B78010627DC7E2E43
944A9D23FF9C7B9CC22D63DF3DE93620265E25EA62F758C167B68C2D99A28426
063BE7EAF58F925FE100028D8F4BE63C08737A83BB0A73BAF5344908D15F2707
716ED39E93C8DCEAF27B8879514DD90D7635D08FB4B51621BE4AE110EEE32375
4EEA55375D110A72FE0C4E26078ADF1F6C0B3FA787F9B3B345FF864D3E03C58B
EA6DF13574096C5C946498BF36E7E40E18031D6FAE7F025D40FA70963B02012B
ADD690158D7D0F16B27583666C59C1E145C841EB7BC57EBF15E2760FC4D09904
FB5A656657E642D0A5579D01B5BE8844E9ADD0E992811D407F1FCDB420312E7F
FD19F5ADC52881671C022B3F45EF2D3733E23620B810E0B769E8CF67A88F1EB4
FEF00087922171338CD73DE72BADB0410DECAE5946D988CA737A91244CB15350
D3994CF983115BB100E072EAAD02143212935BEE6D5D134BBB966C93EF303046
0D9BB955D7337DE37F6838E6FF5E435A5FF108DBD2D458E2E69612797D093E9C
97CF96E6C7B2ECB410CE58E8362D50C2BCEEE3D217457420E70284EA60D29599
F68D6C77E1F3BBBFA1E2A6BF26EE6C72BCDE27DD7A49618286C6ABF3AB531AD1
62889822D92210EA339608E8AB2CF9BCF4DFFFE95A3961D1D8FB359176FD0724
9CFD14A0FEB70AABB0647B421567586A3FD002A6CDFEA8E16EFD209CE7244B48
4BD50E28C7F14FF052C1AEAD8DB405CFCCC868BAB1342077659DCEF32AAA5462
535CBAC9F149D25A181C9D0885B4E1F28717E4033623D723AFFE7DD48E28BBB9
879AF889084297202D898B39D404B647F2773160564A67B0089E16D6E968465E
4070A6B4123BDFD06CDDE8F4C207BF769381698DFB0597026793A41DDBC7D4CD
3117102F1CD64A2A0FCC128319D2F36022F725EEADB1703140EC33A6145AA3C3
F87C9E32A373D6F74A7532854D1E5D64A8B60C2432BD7BC94BC58046441D2774
C668055061070A53317F59A78A9A1095C3DF185F8830B56A7190DFB7790AAF4A
68C2B902DEECA5266A5CDB4E1800DA4F7509DBCFB8FF285E30366CB432167EAF
4F39421A86853281967E0C9C9060D4C833585FE24BAD9AC5E7A9EA14EF663469
DDCA7363D91F774FE5E5666A79F4F6D7F2C6FCBA8CBE297EBC75E0FBCD949170
2057DA8FB86D3660103C55BA67E45B92D9FCCD185C226F596BE41FDE89B8DCF5
C8EB047E2673CC92AF7CBBBCB3470F1ACC82AA152D3695785745046DAF5FC147
68EC88ED2EF682789F6AFF887F64FBD8A5128C6275411FC8D65715B4A23118F1
5366D02D1DA7279E36351D3D97F514950C4C1CB1C5B200109B9A48798D8B644F
A5F877828043FCA502AFC5DBBC1ADE0304DD932C9862F6AD65D2C561FC9E77E9
4F79AF02E159E62FAE2150390B875EF06676CAB1E750E68B814C55D8230A9F34
DA3B414D5C0537F687523FF84EFEBE5AB42CB3EF0FECEA1D8477760BCA0EB894
240D80EB4F9B075BAEEB9AC846018D625501430304043CB66EB2AC82CB0B52AE
F71B7291821D9115E693803D3CBE2124F32F49FCBD867611A6E3929022CF4DF5
332D208C39B0E1D64E52AF2DBC2268FC9064856ECF533AB4F7305E4A3B693A8F
9FCDA5A0B96886BA02D247255ADBC59A5038CC6353EBF2A0E2F46AF0972CD2AE
2999DCB4311EEF62105C95D0B450195B0176891818CB6448638875E9B009E4FF
CE4207B2564C680DB85843E589DDD0AC6C1008F8AF5EC26B9766EB93E0F1C8B5
8D5F61586089E0A8105F6122521E5ECBF3249E28F3F24CCD2CCC0C389EA2134F
46A35B1374EAB8D2C009EAC8CC04C3AD73987EB5B2A0CF7C3C7A24ACE7F86BDA
0B73435D593F4C9566A103A9E1F967731DD32BE1CA559C43EBE755BCB7573F05
EDE3DEBC94BD9352DD5840A87563B2F382482C1F40AB47E7859C95863DEC8CF6
7B56D07EFB6F3B057ACD2522E7F3897C4CC1E42C6EDCFB742C28D815CC5A3CCA
3E525F7E48B24F0EBEDA087C857A5DC71379D487BF099738A5446B0561D9FE7B
C5B68BE4BFA8CA0D79ED8176C2B6344532BCC2B1BA6B302AC14F588ECB7DC0ED
3945480A5D0F24227AE7A888925F31552A73F5A2462319549F325D7C2F9DEEC4
E50EC3A41AB02B29AFF4199972968AA40373E93AA24E8B2E4B69AF10FFC5D3BE
49B2BAFE878A4F6F53A9884EF0A99F4E58DFF1F3DF03AB826959C144E60ED6C7
8F70F2A5EA48F6022DB3C603DA63FDBDB05F37B5B660E1C8A2A9027F73D91F38
6F86567CFF660057A87937C2DD1779920766E31AC283073EBEAC4E24EEF1BB6C
5B781629E60A915217863BDE8571A65AC1EBC7AC85B17800DD03F5203AC6BA80
DA78AAB2A5B7C34E8A56D409C74761D9F712C6041EFDC1EA14532F7A63DCB5D9
58C2025A6E924A5E3EB61E19B7CA3B2948835C051BC2B65AB7204EC5F2F5A90B
D6F928E1C86501C4F1781FC6E950F1ACCFEC2E585D805A86D504FC32C764F0BA
C0B7483E85AAE4AD6A7A01254876B3B87516BC0DD59BB4C3E0A321ACFD209ED7
DD4D1DEDF989BBE8FA550C06E47A18D107616F38A274EE657E38EE3E5DB0DFEE
1E2D5030793ED7AA935FDBA5BE7EB6928408FEA3258263FE78083F6784ACFDF3
AFE4C7435677DF4B85F4E06CA47F15CDB93A7BCDA22510CEF2A117448F45324F
685207F6CE0E1F80DC9E395BCA9DD8F145FD2E7F93C7F82FB4739F659AAFEF98
196824D8234E6D9E9A88AA96D088237BFE9708942FF6EEAB33EF59A1D62614FF
245910B74B2AB9DBF7A62AF9C0DF8185628FFFB2D97E5E875224C16657791CF4
6964C40CB9E972A86AD186F4B7D14FA10767D2811612C70AA79AE9D84BCFAD1D
6E7EF1CC0F01E22CE628D0BE48D6379F57D5BFD8479E18AE4A97E94B3AA05CBB
E9CA60F6AA261AE30550859108149AC8E32BB07DB9EBD7CC048BB6DC3F80B8AF
7DBA42C9B95B3E9CD26DB68D1DF6E7CF60E6E199DE83BC759FB953FF0C39EDB3
143BC3634A845E034A67E01E5385D5D595422661CCA3E3BE8FAB58C05BB9FE54
4F009FFC66AF6340EA08CFC6119DE1D74ECEB61DFECA38C41CCFD142D41D0E4C
A58CFBD39730D15A48B921B82F5BDDE6F2940D378E0121047FCE0E91
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099151 1000 600 600 (rapport_tr.dvi)
@start /Fa 130[44 1[44 1[44 44 1[44 44 44 44 44 1[44
44 44 44 44 2[44 2[44 44 44 44 1[44 34[44 44 44 44 9[44
44 2[44 44 44 44 44 44 40[{ T1Encoding ReEncodeFont }32
83.022 /SFTT1000 rf /Fb 134[44 3[44 44 44 44 2[44 44
44 44 2[44 44 1[44 44 44 44 1[44 13[44 12[44 44 44 20[44
1[44 2[44 42[{ T1Encoding ReEncodeFont }23 83.022 /SFIT1000
rf /Fc 136[60 2[32 33 33 1[46 42 46 69 23 2[23 1[42 1[37
1[37 1[42 12[60 22[65 3[42 42 42 42 42 42 42 42 42 42
48[{ T1Encoding ReEncodeFont }26 83.022 /SFRM1000 rf
/Fd 203[33 33 33 33 49[{}4 58.1154 /CMR7 rf /Fe 227[36
28[{}1 83.022 /CMMI10 rf /Ff 199[46 1[46 1[46 46 46 46
46 48[{ TeXBase1Encoding ReEncodeFont }7 83.022 /NimbusSanL-Regu
rf /Fg 173[98 4[125 6[83 86 101 17[66 66 49[{ T1Encoding ReEncodeFont }
7 119.552 /SFBX1440 rf /Fh 138[54 38 38 38 2[49 54 81
5[49 1[43 3[49 24[73 20[49 49 49 49 48[{ T1Encoding ReEncodeFont }15
99.6264 /SFRM1200 rf /Fi 139[52 1[52 2[67 75 112 7[60
75 60 1[67 12[97 1[99 2[105 20[37 2[67 55[{ T1Encoding ReEncodeFont }14
143.462 /SFRM1728 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
0 0 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 0 0 a 0 0 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 0 0 a 0 TeXcolorgray 0
TeXcolorgray 1202 432 a Fi(T7:)46 b(Ordonnancemen)l(t)g(TR)1633
672 y Fh(Hugo)32 b(Henrotte)1668 855 y(31)g(mars)h(2021)0
1213 y Fg(1)131 b(RM)125 2343 y @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 8.94774 T 12 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 0.8 SLW 0.75 
setgray  /ArrowA { moveto } def /ArrowB { } def  [ 375.80544 8.94774
0.0 8.94774   /Lineto /lineto load def 0  setlinejoin false Line  gsave
0.8 SLW 0.75  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore grestore grestore 0.0 8.94774 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  8.94774 0.0 T 41 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 0.8 SLW 0.75 
setgray  /ArrowA { moveto } def /ArrowB { } def  [ 0.0 125.26834 0.0
8.94774   /Lineto /lineto load def 0  setlinejoin false Line  gsave
0.8 SLW 0.75  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore grestore grestore 8.94774 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 0.0 8.94774 375.80544 125.26834 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial 125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2343 a 125 2343
a
tx@Dict begin { 8.94774 8.94774 } PutCoor PutBegin  end
 125 2343 a 102 2435 a Ff(0)125 2343 y
tx@Dict begin  PutEnd  end
 125 2343 a 125
2343 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 26.84322 8.94774 } PutCoor PutBegin  end
 125 2343 a 102 2435 a Ff(2)125
2343 y
tx@Dict begin  PutEnd  end
 125 2343 a 125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 44.7387 8.94774 } PutCoor PutBegin  end
 125
2343 a 102 2435 a Ff(4)125 2343 y
tx@Dict begin  PutEnd  end
 125 2343 a 125 2343
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 62.63417 8.94774 } PutCoor PutBegin  end
 125 2343 a 102 2435 a Ff(6)125
2343 y
tx@Dict begin  PutEnd  end
 125 2343 a 125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 80.52965 8.94774 } PutCoor PutBegin  end
 125
2343 a 102 2435 a Ff(8)125 2343 y
tx@Dict begin  PutEnd  end
 125 2343 a 125 2343
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 98.42513 8.94774 } PutCoor PutBegin  end
 125 2343 a 79 2435 a Ff(10)125
2343 y
tx@Dict begin  PutEnd  end
 125 2343 a 125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 116.3206 8.94774 } PutCoor PutBegin  end
 125
2343 a 79 2435 a Ff(12)125 2343 y
tx@Dict begin  PutEnd  end
 125 2343 a 125 2343
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 134.21608 8.94774 } PutCoor PutBegin  end
 125 2343 a 79 2435 a Ff(14)125
2343 y
tx@Dict begin  PutEnd  end
 125 2343 a 125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 152.11156 8.94774 } PutCoor PutBegin  end
 125
2343 a 79 2435 a Ff(16)125 2343 y
tx@Dict begin  PutEnd  end
 125 2343 a 125 2343
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 170.00703 8.94774 } PutCoor PutBegin  end
 125 2343 a 79 2435 a Ff(18)125
2343 y
tx@Dict begin  PutEnd  end
 125 2343 a 125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 187.90251 8.94774 } PutCoor PutBegin  end
 125
2343 a 79 2435 a Ff(20)125 2343 y
tx@Dict begin  PutEnd  end
 125 2343 a 125 2343
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 205.79799 8.94774 } PutCoor PutBegin  end
 125 2343 a 79 2435 a Ff(22)125
2343 y
tx@Dict begin  PutEnd  end
 125 2343 a 125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 223.69347 8.94774 } PutCoor PutBegin  end
 125
2343 a 79 2435 a Ff(24)125 2343 y
tx@Dict begin  PutEnd  end
 125 2343 a 125 2343
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 241.58894 8.94774 } PutCoor PutBegin  end
 125 2343 a 79 2435 a Ff(26)125
2343 y
tx@Dict begin  PutEnd  end
 125 2343 a 125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 259.48442 8.94774 } PutCoor PutBegin  end
 125
2343 a 79 2435 a Ff(28)125 2343 y
tx@Dict begin  PutEnd  end
 125 2343 a 125 2343
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 277.3799 8.94774 } PutCoor PutBegin  end
 125 2343 a 79 2435 a Ff(30)125
2343 y
tx@Dict begin  PutEnd  end
 125 2343 a 125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 295.27538 8.94774 } PutCoor PutBegin  end
 125
2343 a 79 2435 a Ff(32)125 2343 y
tx@Dict begin  PutEnd  end
 125 2343 a 125 2343
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 313.17085 8.94774 } PutCoor PutBegin  end
 125 2343 a 79 2435 a Ff(34)125
2343 y
tx@Dict begin  PutEnd  end
 125 2343 a 125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 331.06633 8.94774 } PutCoor PutBegin  end
 125
2343 a 79 2435 a Ff(36)125 2343 y
tx@Dict begin  PutEnd  end
 125 2343 a 125 2343
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 348.9618 8.94774 } PutCoor PutBegin  end
 125 2343 a 79 2435 a Ff(38)125
2343 y
tx@Dict begin  PutEnd  end
 125 2343 a 125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 366.85728 8.94774 } PutCoor PutBegin  end
 125
2343 a 79 2435 a Ff(40)125 2343 y
tx@Dict begin  PutEnd  end
 125 2343 a 125 2343
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { -8.94774 116.3206 } PutCoor PutBegin  end
 125 2343 a 102 2412 a Fe(\034)138
2424 y Fd(1)125 2343 y
tx@Dict begin  PutEnd  end
 125 2343 a 125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2343
a 125 2343 a
tx@Dict begin { -8.94774 89.47739 } PutCoor PutBegin  end
 125 2343 a 102 2412 a Fe(\034)138 2424 y
Fd(2)125 2343 y
tx@Dict begin  PutEnd  end
 125 2343 a 125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2343 a 125
2343 a
tx@Dict begin { -8.94774 62.63417 } PutCoor PutBegin  end
 125 2343 a 102 2412 a Fe(\034)138 2424 y Fd(3)125
2343 y
tx@Dict begin  PutEnd  end
 125 2343 a 125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { -8.94774 35.79095 } PutCoor PutBegin  end
 125
2343 a 102 2412 a Fe(\034)138 2424 y Fd(4)125 2343 y
tx@Dict begin  PutEnd  end

125 2343 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 366.8577 17.89548 8.94774 17.89548   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 366.8577 44.7387 8.94774 44.7387   /Lineto /lineto load def
0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 366.8577 71.58191 8.94774 71.58191   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 366.8577 98.42513 8.94774 98.42513   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 8.94774 116.3206 8.94774 98.42513   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 8.94774 89.47739 8.94774 71.58191   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 8.94774 62.63417 8.94774 44.7387   /Lineto /lineto load def
0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 8.94774 35.79095 8.94774 17.89548   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 8.94774 98.42513 17.89548 107.37286 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 13.4216 98.42513 } PutCoor PutBegin  end
 125 2343 a 125 2343
a
tx@Dict begin  PutEnd  end
 125 2343 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 17.89548 98.42513 26.84322 107.37286
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
2343 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 22.36934 98.42513 } PutCoor PutBegin  end
 125 2343 a 125 2343 a
tx@Dict begin  PutEnd  end
 125
2343 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 26.84322 71.58191 35.79095 80.52965 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2343
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 31.31708 71.58191 } PutCoor PutBegin  end
 125 2343 a 125 2343 a
tx@Dict begin  PutEnd  end
 125 2343
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 35.79095 71.58191 44.7387 80.52965 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
2343 a 125 2343 a
tx@Dict begin { 40.26482 71.58191 } PutCoor PutBegin  end
 125 2343 a 125 2343 a
tx@Dict begin  PutEnd  end
 125 2343 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 44.7387 44.7387 53.68643 53.68643 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2343 a 125 2343
a
tx@Dict begin { 49.21255 44.7387 } PutCoor PutBegin  end
 125 2343 a 125 2343 a
tx@Dict begin  PutEnd  end
 125 2343 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 53.68643 98.42513 62.63417 107.37286
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 58.1603 98.42513 } PutCoor PutBegin  end
 125 2343
a 125 2343 a
tx@Dict begin  PutEnd  end
 125 2343 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 62.63417 98.42513 71.58191 107.37286
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 67.10803 98.42513 } PutCoor PutBegin  end
 125 2343 a 125 2343
a
tx@Dict begin  PutEnd  end
 125 2343 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 71.58191 71.58191 80.52965 80.52965 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
2343 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 76.05577 71.58191 } PutCoor PutBegin  end
 125 2343 a 125 2343 a
tx@Dict begin  PutEnd  end
 125
2343 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 80.52965 71.58191 89.47739 80.52965 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2343
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 85.00351 71.58191 } PutCoor PutBegin  end
 125 2343 a 125 2343 a
tx@Dict begin  PutEnd  end
 125 2343
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 89.47739 44.7387 98.42513 53.68643 .5
Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
2343 a 125 2343 a
tx@Dict begin { 93.95125 44.7387 } PutCoor PutBegin  end
 125 2343 a 125 2343 a
tx@Dict begin  PutEnd  end
 125 2343 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 98.42513 98.42513 107.37286 107.37286
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2343 a 125 2343
a
tx@Dict begin { 102.89899 98.42513 } PutCoor PutBegin  end
 125 2343 a 125 2343 a
tx@Dict begin  PutEnd  end
 125 2343 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 107.37286 98.42513 116.3206 107.37286
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 111.84673 98.42513 } PutCoor PutBegin  end
 125 2343
a 125 2343 a
tx@Dict begin  PutEnd  end
 125 2343 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 116.3206 71.58191 125.26834 80.52965
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 120.79446 71.58191 } PutCoor PutBegin  end
 125 2343 a 125 2343
a
tx@Dict begin  PutEnd  end
 125 2343 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 125.26834 71.58191 134.21608 80.52965
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
2343 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 129.7422 71.58191 } PutCoor PutBegin  end
 125 2343 a 125 2343 a
tx@Dict begin  PutEnd  end
 125
2343 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 134.21608 44.7387 143.16382 53.68643
.5 Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2343
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 138.68994 44.7387 } PutCoor PutBegin  end
 125 2343 a 125 2343 a
tx@Dict begin  PutEnd  end
 125 2343
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 143.16382 98.42513 152.11156 107.37286
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
2343 a 125 2343 a
tx@Dict begin { 147.63768 98.42513 } PutCoor PutBegin  end
 125 2343 a 125 2343 a
tx@Dict begin  PutEnd  end
 125 2343 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 152.11156 98.42513 161.0593 107.37286
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2343 a 125 2343
a
tx@Dict begin { 156.58542 98.42513 } PutCoor PutBegin  end
 125 2343 a 125 2343 a
tx@Dict begin  PutEnd  end
 125 2343 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 161.0593 44.7387 170.00703 53.68643 .5
Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 165.53316 44.7387 } PutCoor PutBegin  end
 125 2343
a 125 2343 a
tx@Dict begin  PutEnd  end
 125 2343 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 170.00703 71.58191 178.95477 80.52965
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 174.4809 71.58191 } PutCoor PutBegin  end
 125 2343 a 125 2343
a
tx@Dict begin  PutEnd  end
 125 2343 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 178.95477 71.58191 187.90251 80.52965
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
2343 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 183.42863 71.58191 } PutCoor PutBegin  end
 125 2343 a 125 2343 a
tx@Dict begin  PutEnd  end
 125
2343 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 187.90251 98.42513 196.85025 107.37286
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2343
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 192.37637 98.42513 } PutCoor PutBegin  end
 125 2343 a 125 2343 a
tx@Dict begin  PutEnd  end
 125 2343
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 196.85025 98.42513 205.79799 107.37286
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
2343 a 125 2343 a
tx@Dict begin { 201.32411 98.42513 } PutCoor PutBegin  end
 125 2343 a 125 2343 a
tx@Dict begin  PutEnd  end
 125 2343 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 205.79799 44.7387 214.74573 53.68643
.5 Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2343 a 125 2343
a
tx@Dict begin { 210.27185 44.7387 } PutCoor PutBegin  end
 125 2343 a 125 2343 a
tx@Dict begin  PutEnd  end
 125 2343 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 214.74573 44.7387 223.69347 53.68643
.5 Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 219.21959 44.7387 } PutCoor PutBegin  end
 125 2343
a 125 2343 a
tx@Dict begin  PutEnd  end
 125 2343 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 223.69347 71.58191 232.6412 80.52965
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 228.16733 71.58191 } PutCoor PutBegin  end
 125 2343 a 125 2343
a
tx@Dict begin  PutEnd  end
 125 2343 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 232.6412 98.42513 241.58894 107.37286
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
2343 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 237.11507 98.42513 } PutCoor PutBegin  end
 125 2343 a 125 2343 a
tx@Dict begin  PutEnd  end
 125
2343 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 241.58894 98.42513 250.53668 107.37286
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2343
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 246.0628 98.42513 } PutCoor PutBegin  end
 125 2343 a 125 2343 a
tx@Dict begin  PutEnd  end
 125 2343
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 250.53668 71.58191 259.48442 80.52965
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
2343 a 125 2343 a
tx@Dict begin { 255.01054 71.58191 } PutCoor PutBegin  end
 125 2343 a 125 2343 a
tx@Dict begin  PutEnd  end
 125 2343 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 259.48442 44.7387 268.43216 53.68643
.5 Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2343 a 125 2343
a
tx@Dict begin { 263.95828 44.7387 } PutCoor PutBegin  end
 125 2343 a 125 2343 a
tx@Dict begin  PutEnd  end
 125 2343 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 268.43216 44.7387 277.3799 53.68643 .5
Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 272.90602 44.7387 } PutCoor PutBegin  end
 125 2343
a 125 2343 a
tx@Dict begin  PutEnd  end
 125 2343 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 277.3799 98.42513 286.32764 107.37286
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 281.85376 98.42513 } PutCoor PutBegin  end
 125 2343 a 125 2343
a
tx@Dict begin  PutEnd  end
 125 2343 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 286.32764 98.42513 295.27538 107.37286
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
2343 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 290.8015 98.42513 } PutCoor PutBegin  end
 125 2343 a 125 2343 a
tx@Dict begin  PutEnd  end
 125
2343 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 295.27538 71.58191 304.22311 80.52965
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2343
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 299.74924 71.58191 } PutCoor PutBegin  end
 125 2343 a 125 2343 a
tx@Dict begin  PutEnd  end
 125 2343
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 304.22311 71.58191 313.17085 80.52965
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
2343 a 125 2343 a
tx@Dict begin { 308.69698 71.58191 } PutCoor PutBegin  end
 125 2343 a 125 2343 a
tx@Dict begin  PutEnd  end
 125 2343 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 313.17085 44.7387 322.11859 53.68643
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2343 a 125 2343
a
tx@Dict begin { 317.64471 44.7387 } PutCoor PutBegin  end
 125 2343 a 125 2343 a
tx@Dict begin  PutEnd  end
 125 2343 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 322.11859 98.42513 331.06633 107.37286
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 326.59245 98.42513 } PutCoor PutBegin  end
 125 2343
a 125 2343 a
tx@Dict begin  PutEnd  end
 125 2343 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 331.06633 98.42513 340.01407 107.37286
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 335.54019 98.42513 } PutCoor PutBegin  end
 125 2343 a 125 2343
a
tx@Dict begin  PutEnd  end
 125 2343 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 340.01407 71.58191 348.9618 80.52965
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
2343 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 344.48793 71.58191 } PutCoor PutBegin  end
 125 2343 a 125 2343 a
tx@Dict begin  PutEnd  end
 125
2343 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 348.9618 71.58191 357.90955 80.52965
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2343
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 2343 a 125 2343 a
tx@Dict begin { 353.43567 71.58191 } PutCoor PutBegin  end
 125 2343 a 125 2343 a
tx@Dict begin  PutEnd  end
 125 2343
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 357.90955 44.7387 366.85728 53.68643
.5 Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 2343 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
2343 a 125 2343 a
tx@Dict begin { 362.3834 44.7387 } PutCoor PutBegin  end
 125 2343 a 125 2343 a
tx@Dict begin  PutEnd  end
 125 2343 a 0
2542 a Fc(T)-7 b(otal)27 b(completion)g(time)h(=)g(90)0
2642 y(T)-7 b(otal)27 b(w)n(aiting)g(time)h(=)f(50)0
2742 y(T)-7 b(otal)27 b(resp)r(onse)f(time)j(=)e(38)p
76 3021 4 100 v 96 3021 V 0 2991 a(1)p 0.3 0 0.1 TeXcolorrgb
89 w Fb(/)6 b(*)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 63 w(-)h(-)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 11 w(S)h(c)g(h)g(e)g(d)g(u)g(l)g(e)g(r)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 59 w(r)t(m)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
12 w(-)h(-)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 62 w(*)d(/)p 0 TeXcolorgray 76
3120 V 96 3120 V 0 3090 a Fc(2)p 0 TeXcolorgray 90 w
Fa(t)h(p)g(r)g(o)g(c)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
62 w(r)f(m)p 0 TeXcolorgray 8 w(\()p 0 TeXcolorgray 12
w(t)h(l)g(i)g(s)g(t)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
62 w(p)f(r)g(o)g(c)g(s)p 0 TeXcolorgray 16 w(,)p 0 TeXcolorgray
63 w(t)h(l)g(i)g(s)g(t)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
62 w(r)f(e)g(a)g(d)g(y)p 0 TeXcolorgray 16 w(,)p 0 0.4 0
TeXcolorrgb 63 w(i)h(n)g(t)p 0 TeXcolorgray 61 w(*)p
0 TeXcolorgray 63 w(d)g(e)g(l)g(t)g(a)p 0 TeXcolorgray
11 w(\))61 b({)p 76 3220 V 96 3220 V 0 3190 a Fc(3)p
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
193 w Fb(/)6 b(*)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(m)i(o)g(n)g(o)g(t)g(o)g(n)g
(i)g(c)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 63 w(a)g(n)g(a)g(l)g(y)g(s)g(i)g(s)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 61 w(*)e(/)p 0 TeXcolorgray 76 3319 V 96
3319 V 0 3290 a Fc(4)p 0 TeXcolorgray 194 w Fa(t)h(n)g(o)g(d)g(e)p
0 TeXcolorgray 63 w(*)p 0 TeXcolorgray 60 w(p)p 0 TeXcolorgray
61 w(=)p 0 TeXcolorgray 63 w(r)f(e)g(a)g(d)g(y)p 0 TeXcolorgray
15 w(-)j(>)p 0 TeXcolorgray 11 w(f)e(i)g(r)g(s)g(t)p
0 TeXcolorgray 10 w(;)p 76 3419 V 96 3419 V 0 3389 a
Fc(5)p 0 TeXcolorgray 194 w Fa(t)g(n)g(o)g(d)g(e)p 0
TeXcolorgray 63 w(*)p 0 TeXcolorgray 63 w(m)g(i)g(n)p
0 TeXcolorgray 61 w(=)p 0 TeXcolorgray 62 w(r)f(e)g(a)g(d)g(y)p
0 TeXcolorgray 16 w(-)j(>)p 0 TeXcolorgray 10 w(f)e(i)g(r)g(s)g(t)p
0 TeXcolorgray 11 w(;)p 76 3519 V 96 3519 V 0 3489 a
Fc(6)p 0 0.4 0 TeXcolorrgb 194 w Fa(f)g(o)g(r)p 0 TeXcolorgray
61 w(\()p 0 0.4 0 TeXcolorrgb 11 w(i)g(n)g(t)p 0 TeXcolorgray
0 TeXcolorgray 60 w(i)p 0 TeXcolorgray 11 w(=)g(0)g(;)p
0 TeXcolorgray 60 w(i)p 0 TeXcolorgray 63 w(<)p 0 TeXcolorgray
61 w(l)g(e)g(n)p 0 TeXcolorgray 8 w(\()p 0 TeXcolorgray
12 w(r)g(e)g(a)g(d)g(y)p 0 TeXcolorgray 10 w(\))i(;)p
0 TeXcolorgray 8 w(i)p 0 TeXcolorgray 11 w(+)e(+)g(\))p
76 3618 V 96 3618 V 0 3588 a Fc(7)191 b Fa({)p 76 3718
V 96 3718 V 0 3688 a Fc(8)p 0 0.4 0 TeXcolorrgb 298 w
Fa(i)6 b(f)p 0 TeXcolorgray 62 w(\()g(\()p 0 TeXcolorgray
8 w(p)p 0 TeXcolorgray 9 w(-)j(>)p 0 TeXcolorgray 10
w(p)d(r)g(o)g(c)p 0 TeXcolorgray 13 w(-)j(>)p 0 TeXcolorgray
11 w(p)e(e)g(r)g(i)g(o)g(d)p 0 TeXcolorgray 12 w(\))62
b(<)d(\()p 0 TeXcolorgray 9 w(m)5 b(i)g(n)p 0 TeXcolorgray
14 w(-)k(>)p 0 TeXcolorgray 9 w(p)d(r)g(o)g(c)p 0 TeXcolorgray
14 w(-)j(>)p 0 TeXcolorgray 10 w(p)e(e)g(r)g(i)g(o)g(d)p
0 TeXcolorgray 12 w(\))i(\))p 76 3818 V 96 3818 V 0 3788
a Fc(9)296 b Fa({)p 76 3917 V 96 3917 V -41 3887 a Fc(10)p
0 TeXcolorgray 507 w Fa(m)7 b(i)g(n)p 0 TeXcolorgray
60 w(=)p 0 TeXcolorgray 61 w(p)p 0 TeXcolorgray 8 w(;)p
76 4017 V 96 4017 V -41 3987 a Fc(11)295 b Fa(})p 76
4116 V 96 4116 V -41 4087 a Fc(12)p 0 TeXcolorgray 295
w Fa(p)p 0 TeXcolorgray 61 w(=)p 0 TeXcolorgray 59 w(p)p
0 TeXcolorgray 9 w(-)9 b(>)p 0 TeXcolorgray 11 w(n)e(e)g(x)g(t)p
0 TeXcolorgray 9 w(;)p 76 4216 V 96 4216 V -41 4186 a
Fc(13)190 b Fa(})p 76 4316 V 96 4316 V -41 4286 a Fc(14)g
Fa(*)p 0 TeXcolorgray 11 w(d)7 b(e)g(l)g(t)g(a)p 0 TeXcolorgray
64 w(=)62 b(1)6 b(;)p 76 4415 V 96 4415 V -41 4385 a
Fc(15)p 0 0.4 0 TeXcolorrgb 193 w Fa(r)h(e)g(t)g(u)g(r)g(n)p
0 TeXcolorgray 0 TeXcolorgray 65 w(m)e(i)g(n)p 0 TeXcolorgray
14 w(-)k(>)p 0 TeXcolorgray 11 w(p)e(r)g(o)g(c)p 0 TeXcolorgray
9 w(;)p 76 4515 V 96 4515 V -41 4485 a Fc(16)86 b Fa(})p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1929 5400
a Fc(1)p 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 83 a Fg(2)131 b(EDF)125 1214 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 8.94774 T 12 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 0.8 SLW 0.75 
setgray  /ArrowA { moveto } def /ArrowB { } def  [ 375.80544 8.94774
0.0 8.94774   /Lineto /lineto load def 0  setlinejoin false Line  gsave
0.8 SLW 0.75  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore grestore grestore 0.0 8.94774 T } repeat end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  8.94774 0.0 T 41 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 0.8 SLW 0.75 
setgray  /ArrowA { moveto } def /ArrowB { } def  [ 0.0 125.26834 0.0
8.94774   /Lineto /lineto load def 0  setlinejoin false Line  gsave
0.8 SLW 0.75  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore grestore grestore 8.94774 0.0 T } repeat end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 0.0 8.94774 375.80544 125.26834 .5 Frame
 gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
1214 a 125 1214 a
tx@Dict begin { 8.94774 8.94774 } PutCoor PutBegin  end
 125 1214 a 102 1306 a Ff(0)125 1214
y
tx@Dict begin  PutEnd  end
 125 1214 a 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 26.84322 8.94774 } PutCoor PutBegin  end
 125 1214
a 102 1306 a Ff(2)125 1214 y
tx@Dict begin  PutEnd  end
 125 1214 a 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
1214 a 125 1214 a
tx@Dict begin { 44.7387 8.94774 } PutCoor PutBegin  end
 125 1214 a 102 1306 a Ff(4)125 1214
y
tx@Dict begin  PutEnd  end
 125 1214 a 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 62.63417 8.94774 } PutCoor PutBegin  end
 125 1214
a 102 1306 a Ff(6)125 1214 y
tx@Dict begin  PutEnd  end
 125 1214 a 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
1214 a 125 1214 a
tx@Dict begin { 80.52965 8.94774 } PutCoor PutBegin  end
 125 1214 a 102 1306 a Ff(8)125 1214
y
tx@Dict begin  PutEnd  end
 125 1214 a 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 98.42513 8.94774 } PutCoor PutBegin  end
 125 1214
a 79 1306 a Ff(10)125 1214 y
tx@Dict begin  PutEnd  end
 125 1214 a 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
1214 a 125 1214 a
tx@Dict begin { 116.3206 8.94774 } PutCoor PutBegin  end
 125 1214 a 79 1306 a Ff(12)125 1214
y
tx@Dict begin  PutEnd  end
 125 1214 a 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 134.21608 8.94774 } PutCoor PutBegin  end
 125 1214
a 79 1306 a Ff(14)125 1214 y
tx@Dict begin  PutEnd  end
 125 1214 a 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
1214 a 125 1214 a
tx@Dict begin { 152.11156 8.94774 } PutCoor PutBegin  end
 125 1214 a 79 1306 a Ff(16)125 1214
y
tx@Dict begin  PutEnd  end
 125 1214 a 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 170.00703 8.94774 } PutCoor PutBegin  end
 125 1214
a 79 1306 a Ff(18)125 1214 y
tx@Dict begin  PutEnd  end
 125 1214 a 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
1214 a 125 1214 a
tx@Dict begin { 187.90251 8.94774 } PutCoor PutBegin  end
 125 1214 a 79 1306 a Ff(20)125 1214
y
tx@Dict begin  PutEnd  end
 125 1214 a 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 205.79799 8.94774 } PutCoor PutBegin  end
 125 1214
a 79 1306 a Ff(22)125 1214 y
tx@Dict begin  PutEnd  end
 125 1214 a 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
1214 a 125 1214 a
tx@Dict begin { 223.69347 8.94774 } PutCoor PutBegin  end
 125 1214 a 79 1306 a Ff(24)125 1214
y
tx@Dict begin  PutEnd  end
 125 1214 a 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 241.58894 8.94774 } PutCoor PutBegin  end
 125 1214
a 79 1306 a Ff(26)125 1214 y
tx@Dict begin  PutEnd  end
 125 1214 a 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
1214 a 125 1214 a
tx@Dict begin { 259.48442 8.94774 } PutCoor PutBegin  end
 125 1214 a 79 1306 a Ff(28)125 1214
y
tx@Dict begin  PutEnd  end
 125 1214 a 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 277.3799 8.94774 } PutCoor PutBegin  end
 125 1214
a 79 1306 a Ff(30)125 1214 y
tx@Dict begin  PutEnd  end
 125 1214 a 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
1214 a 125 1214 a
tx@Dict begin { 295.27538 8.94774 } PutCoor PutBegin  end
 125 1214 a 79 1306 a Ff(32)125 1214
y
tx@Dict begin  PutEnd  end
 125 1214 a 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 313.17085 8.94774 } PutCoor PutBegin  end
 125 1214
a 79 1306 a Ff(34)125 1214 y
tx@Dict begin  PutEnd  end
 125 1214 a 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
1214 a 125 1214 a
tx@Dict begin { 331.06633 8.94774 } PutCoor PutBegin  end
 125 1214 a 79 1306 a Ff(36)125 1214
y
tx@Dict begin  PutEnd  end
 125 1214 a 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 348.9618 8.94774 } PutCoor PutBegin  end
 125 1214
a 79 1306 a Ff(38)125 1214 y
tx@Dict begin  PutEnd  end
 125 1214 a 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125
1214 a 125 1214 a
tx@Dict begin { 366.85728 8.94774 } PutCoor PutBegin  end
 125 1214 a 79 1306 a Ff(40)125 1214
y
tx@Dict begin  PutEnd  end
 125 1214 a 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { -8.94774 116.3206 } PutCoor PutBegin  end
 125 1214
a 102 1282 a Fe(\034)138 1294 y Fd(1)125 1214 y
tx@Dict begin  PutEnd  end
 125 1214
a 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { -8.94774 89.47739 } PutCoor PutBegin  end
 125 1214 a 102 1282
a Fe(\034)138 1294 y Fd(2)125 1214 y
tx@Dict begin  PutEnd  end
 125 1214 a 125 1214
a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { -8.94774 62.63417 } PutCoor PutBegin  end
 125 1214 a 102 1282 a Fe(\034)138
1294 y Fd(3)125 1214 y
tx@Dict begin  PutEnd  end
 125 1214 a 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle -90  def grestore  end
 125 1214
a 125 1214 a
tx@Dict begin { -8.94774 35.79095 } PutCoor PutBegin  end
 125 1214 a 102 1282 a Fe(\034)138 1294 y
Fd(4)125 1214 y
tx@Dict begin  PutEnd  end
 125 1214 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 366.8577 17.89548 8.94774 17.89548   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 366.8577 44.7387 8.94774 44.7387   /Lineto /lineto load def
0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 366.8577 71.58191 8.94774 71.58191   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 366.8577 98.42513 8.94774 98.42513   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 8.94774 116.3206 8.94774 98.42513   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 8.94774 89.47739 8.94774 71.58191   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 8.94774 62.63417 8.94774 44.7387   /Lineto /lineto load def
0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 8.94774 35.79095 8.94774 17.89548   /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 8.94774 98.42513 17.89548 107.37286 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214
a
tx@Dict begin { 13.4216 98.42513 } PutCoor PutBegin  end
 125 1214 a 125 1214 a
tx@Dict begin  PutEnd  end
 125 1214 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 17.89548 98.42513 26.84322 107.37286
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 22.36934 98.42513 } PutCoor PutBegin  end
 125 1214
a 125 1214 a
tx@Dict begin  PutEnd  end
 125 1214 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 26.84322 71.58191 35.79095 80.52965 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 31.31708 71.58191 } PutCoor PutBegin  end
 125 1214 a 125 1214
a
tx@Dict begin  PutEnd  end
 125 1214 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 35.79095 71.58191 44.7387 80.52965 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 40.26482 71.58191 } PutCoor PutBegin  end
 125 1214 a 125 1214 a
tx@Dict begin  PutEnd  end
 125
1214 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 44.7387 44.7387 53.68643 53.68643 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1214
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 49.21255 44.7387 } PutCoor PutBegin  end
 125 1214 a 125 1214 a
tx@Dict begin  PutEnd  end
 125 1214
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 53.68643 44.7387 62.63417 53.68643 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
1214 a 125 1214 a
tx@Dict begin { 58.1603 44.7387 } PutCoor PutBegin  end
 125 1214 a 125 1214 a
tx@Dict begin  PutEnd  end
 125 1214 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 62.63417 17.89548 71.58191 26.84322 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214
a
tx@Dict begin { 67.10803 17.89548 } PutCoor PutBegin  end
 125 1214 a 125 1214 a
tx@Dict begin  PutEnd  end
 125 1214 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 71.58191 17.89548 80.52965 26.84322 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 76.05577 17.89548 } PutCoor PutBegin  end
 125 1214
a 125 1214 a
tx@Dict begin  PutEnd  end
 125 1214 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 80.52965 98.42513 89.47739 107.37286
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 85.00351 98.42513 } PutCoor PutBegin  end
 125 1214 a 125 1214
a
tx@Dict begin  PutEnd  end
 125 1214 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 89.47739 98.42513 98.42513 107.37286
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 93.95125 98.42513 } PutCoor PutBegin  end
 125 1214 a 125 1214 a
tx@Dict begin  PutEnd  end
 125
1214 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 98.42513 71.58191 107.37286 80.52965
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1214
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 102.89899 71.58191 } PutCoor PutBegin  end
 125 1214 a 125 1214 a
tx@Dict begin  PutEnd  end
 125 1214
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 107.37286 71.58191 116.3206 80.52965
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
1214 a 125 1214 a
tx@Dict begin { 111.84673 71.58191 } PutCoor PutBegin  end
 125 1214 a 125 1214 a
tx@Dict begin  PutEnd  end
 125 1214 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 116.3206 44.7387 125.26834 53.68643 .5
Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214
a
tx@Dict begin { 120.79446 44.7387 } PutCoor PutBegin  end
 125 1214 a 125 1214 a
tx@Dict begin  PutEnd  end
 125 1214 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 125.26834 44.7387 134.21608 53.68643
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 129.7422 44.7387 } PutCoor PutBegin  end
 125 1214
a 125 1214 a
tx@Dict begin  PutEnd  end
 125 1214 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 134.21608 98.42513 143.16382 107.37286
.5 Frame  gsave 0.5  setgray  1. .setopacityalpha  fill  grestore gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 138.68994 98.42513 } PutCoor PutBegin  end
 125 1214 a 125 1214
a
tx@Dict begin  PutEnd  end
 125 1214 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 143.16382 98.42513 152.11156 107.37286
.5 Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 147.63768 98.42513 } PutCoor PutBegin  end
 125 1214 a 125 1214 a
tx@Dict begin  PutEnd  end
 125
1214 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 152.11156 17.89548 161.0593 26.84322
.5 Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1214
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 156.58542 17.89548 } PutCoor PutBegin  end
 125 1214 a 125 1214 a
tx@Dict begin  PutEnd  end
 125 1214
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 161.0593 17.89548 170.00703 26.84322
.5 Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
1214 a 125 1214 a
tx@Dict begin { 165.53316 17.89548 } PutCoor PutBegin  end
 125 1214 a 125 1214 a
tx@Dict begin  PutEnd  end
 125 1214 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 170.00703 71.58191 178.95477 80.52965
.5 Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214
a
tx@Dict begin { 174.4809 71.58191 } PutCoor PutBegin  end
 125 1214 a 125 1214 a
tx@Dict begin  PutEnd  end
 125 1214 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 178.95477 71.58191 187.90251 80.52965
.5 Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 183.42863 71.58191 } PutCoor PutBegin  end
 125 1214
a 125 1214 a
tx@Dict begin  PutEnd  end
 125 1214 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 187.90251 98.42513 196.85025 107.37286
.5 Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 192.37637 98.42513 } PutCoor PutBegin  end
 125 1214 a 125 1214
a
tx@Dict begin  PutEnd  end
 125 1214 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 196.85025 98.42513 205.79799 107.37286
.5 Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 201.32411 98.42513 } PutCoor PutBegin  end
 125 1214 a 125 1214 a
tx@Dict begin  PutEnd  end
 125
1214 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 205.79799 44.7387 214.74573 53.68643
.5 Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1214
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 210.27185 44.7387 } PutCoor PutBegin  end
 125 1214 a 125 1214 a
tx@Dict begin  PutEnd  end
 125 1214
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 214.74573 44.7387 223.69347 53.68643
.5 Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
1214 a 125 1214 a
tx@Dict begin { 219.21959 44.7387 } PutCoor PutBegin  end
 125 1214 a 125 1214 a
tx@Dict begin  PutEnd  end
 125 1214 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 223.69347 17.89548 232.6412 26.84322
.5 Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214
a
tx@Dict begin { 228.16733 17.89548 } PutCoor PutBegin  end
 125 1214 a 125 1214 a
tx@Dict begin  PutEnd  end
 125 1214 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 232.6412 17.89548 241.58894 26.84322
.5 Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 237.11507 17.89548 } PutCoor PutBegin  end
 125 1214
a 125 1214 a
tx@Dict begin  PutEnd  end
 125 1214 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 241.58894 71.58191 250.53668 80.52965
.5 Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 246.0628 71.58191 } PutCoor PutBegin  end
 125 1214 a 125 1214
a
tx@Dict begin  PutEnd  end
 125 1214 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 250.53668 71.58191 259.48442 80.52965
.5 Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 255.01054 71.58191 } PutCoor PutBegin  end
 125 1214 a 125 1214 a
tx@Dict begin  PutEnd  end
 125
1214 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 259.48442 98.42513 268.43216 107.37286
.5 Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1214
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 263.95828 98.42513 } PutCoor PutBegin  end
 125 1214 a 125 1214 a
tx@Dict begin  PutEnd  end
 125 1214
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 268.43216 98.42513 277.3799 107.37286
.5 Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
1214 a 125 1214 a
tx@Dict begin { 272.90602 98.42513 } PutCoor PutBegin  end
 125 1214 a 125 1214 a
tx@Dict begin  PutEnd  end
 125 1214 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 277.3799 44.7387 286.32764 53.68643 .5
Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214
a
tx@Dict begin { 281.85376 44.7387 } PutCoor PutBegin  end
 125 1214 a 125 1214 a
tx@Dict begin  PutEnd  end
 125 1214 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 286.32764 44.7387 295.27538 53.68643
.5 Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 290.8015 44.7387 } PutCoor PutBegin  end
 125 1214
a 125 1214 a
tx@Dict begin  PutEnd  end
 125 1214 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 295.27538 71.58191 304.22311 80.52965
.5 Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 299.74924 71.58191 } PutCoor PutBegin  end
 125 1214 a 125 1214
a
tx@Dict begin  PutEnd  end
 125 1214 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 304.22311 71.58191 313.17085 80.52965
.5 Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 308.69698 71.58191 } PutCoor PutBegin  end
 125 1214 a 125 1214 a
tx@Dict begin  PutEnd  end
 125
1214 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 313.17085 98.42513 322.11859 107.37286
.5 Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1214
a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 317.64471 98.42513 } PutCoor PutBegin  end
 125 1214 a 125 1214 a
tx@Dict begin  PutEnd  end
 125 1214
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 322.11859 98.42513 331.06633 107.37286
.5 Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125
1214 a 125 1214 a
tx@Dict begin { 326.59245 98.42513 } PutCoor PutBegin  end
 125 1214 a 125 1214 a
tx@Dict begin  PutEnd  end
 125 1214 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 331.06633 17.89548 340.01407 26.84322
.5 Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214
a
tx@Dict begin { 335.54019 17.89548 } PutCoor PutBegin  end
 125 1214 a 125 1214 a
tx@Dict begin  PutEnd  end
 125 1214 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 340.01407 17.89548 348.9618 26.84322
.5 Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end


@endspecial 125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 344.48793 17.89548 } PutCoor PutBegin  end
 125 1214
a 125 1214 a
tx@Dict begin  PutEnd  end
 125 1214 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 348.9618 44.7387 357.90955 53.68643 .5
Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
125 1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 353.43567 44.7387 } PutCoor PutBegin  end
 125 1214 a 125 1214
a
tx@Dict begin  PutEnd  end
 125 1214 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray   0. true 357.90955 44.7387 366.85728 53.68643
.5 Frame  gsave 1 0 0  setrgbcolor  1. .setopacityalpha  fill  grestore
gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 125
1214 a
tx@Dict begin  gsave STV CP T /ps@refangle 90  def grestore  end
 125 1214 a 125 1214 a
tx@Dict begin { 362.3834 44.7387 } PutCoor PutBegin  end
 125 1214 a 125 1214 a
tx@Dict begin  PutEnd  end
 125
1214 a 0 1413 a Fc(T)-7 b(otal)27 b(completion)g(time)h(=)g(167)0
1512 y(T)-7 b(otal)27 b(w)n(aiting)g(time)h(=)f(127)0
1612 y(T)-7 b(otal)27 b(resp)r(onse)f(time)j(=)e(127)p
76 1891 4 100 v 96 1891 V 0 1861 a(1)p 0.3 0 0.1 TeXcolorrgb
89 w Fb(/)6 b(*)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 63 w(-)h(-)p 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 11 w(S)h(c)g(h)g(e)g(d)g(u)g(l)g(e)g(r)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 60 w(e)d(d)g(f)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 14 w(-)k(-)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 62 w(*)d(/)p 0 TeXcolorgray
76 1991 V 96 1991 V 0 1961 a Fc(2)p 0 TeXcolorgray 90
w Fa(t)h(p)g(r)g(o)g(c)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
63 w(e)g(d)g(f)p 0 TeXcolorgray 8 w(\()p 0 TeXcolorgray
11 w(t)g(l)g(i)g(s)g(t)p 0 TeXcolorgray 63 w(*)p 0 TeXcolorgray
62 w(p)f(r)g(o)g(c)g(s)p 0 TeXcolorgray 16 w(,)p 0 TeXcolorgray
63 w(t)h(l)g(i)g(s)g(t)p 0 TeXcolorgray 64 w(*)p 0 TeXcolorgray
62 w(r)f(e)g(a)g(d)g(y)p 0 TeXcolorgray 15 w(,)p 0 0.4 0
TeXcolorrgb 64 w(i)h(n)g(t)p 0 TeXcolorgray 60 w(*)p
0 TeXcolorgray 64 w(d)g(e)g(l)g(t)g(a)p 0 TeXcolorgray
10 w(\))61 b({)p 76 2090 V 96 2090 V 0 2060 a Fc(3)p
0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
193 w Fb(/)6 b(*)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(E)i(a)g(r)g(l)g(i)g(e)g(s)g
(t)p 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray
0.3 0 0.1 TeXcolorrgb 63 w(D)g(e)g(a)g(d)g(l)g(i)g(n)g(e)p
0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 61 w(F)f(i)g(r)g(s)g(t)p 0 TeXcolorgray 0.3 0 0.1
TeXcolorrgb 0 TeXcolorgray 0.3 0 0.1 TeXcolorrgb 65 w(*)f(/)p
0 TeXcolorgray 76 2190 V 96 2190 V 0 2160 a Fc(4)p 0
TeXcolorgray 194 w Fa(t)h(n)g(o)g(d)g(e)p 0 TeXcolorgray
63 w(*)p 0 TeXcolorgray 60 w(p)p 0 TeXcolorgray 61 w(=)p
0 TeXcolorgray 63 w(r)f(e)g(a)g(d)g(y)p 0 TeXcolorgray
15 w(-)j(>)p 0 TeXcolorgray 11 w(f)e(i)g(r)g(s)g(t)p
0 TeXcolorgray 10 w(;)p 76 2289 V 96 2289 V 0 2260 a
Fc(5)p 0 TeXcolorgray 194 w Fa(t)g(n)g(o)g(d)g(e)p 0
TeXcolorgray 63 w(*)p 0 TeXcolorgray 63 w(m)g(i)g(n)p
0 TeXcolorgray 61 w(=)p 0 TeXcolorgray 62 w(r)f(e)g(a)g(d)g(y)p
0 TeXcolorgray 16 w(-)j(>)p 0 TeXcolorgray 10 w(f)e(i)g(r)g(s)g(t)p
0 TeXcolorgray 11 w(;)p 76 2389 V 96 2389 V 0 2359 a
Fc(6)p 0 0.4 0 TeXcolorrgb 194 w Fa(f)g(o)g(r)p 0 TeXcolorgray
61 w(\()p 0 0.4 0 TeXcolorrgb 11 w(i)g(n)g(t)p 0 TeXcolorgray
0 TeXcolorgray 60 w(i)p 0 TeXcolorgray 11 w(=)g(0)g(;)p
0 TeXcolorgray 60 w(i)p 0 TeXcolorgray 63 w(<)p 0 TeXcolorgray
61 w(l)g(e)g(n)p 0 TeXcolorgray 8 w(\()p 0 TeXcolorgray
12 w(r)g(e)g(a)g(d)g(y)p 0 TeXcolorgray 10 w(\))i(;)p
0 TeXcolorgray 8 w(i)p 0 TeXcolorgray 11 w(+)e(+)g(\))60
b({)p 76 2489 V 96 2489 V 0 2459 a Fc(7)p 0 0.4 0 TeXcolorrgb
298 w Fa(i)6 b(f)p 0 TeXcolorgray 62 w(\()g(\()p 0 TeXcolorgray
8 w(p)p 0 TeXcolorgray 9 w(-)j(>)p 0 TeXcolorgray 10
w(p)d(r)g(o)g(c)p 0 TeXcolorgray 13 w(-)j(>)p 0 TeXcolorgray
12 w(a)f(c)g(t)g(i)g(v)g(a)g(t)g(i)g(o)g(n)p 0 TeXcolorgray
59 w(+)p 0 TeXcolorgray 60 w(p)p 0 TeXcolorgray 9 w(-)h(>)p
0 TeXcolorgray 9 w(p)d(r)g(o)g(c)p 0 TeXcolorgray 14
w(-)j(>)p 0 TeXcolorgray 10 w(p)e(e)g(r)g(i)g(o)g(d)p
0 TeXcolorgray 12 w(\))62 b(<)d(\()p 0 TeXcolorgray 9
w(m)5 b(i)g(n)p 0 TeXcolorgray 14 w(-)k(>)p 0 TeXcolorgray
10 w(p)d(r)g(o)g(c)p 0 TeXcolorgray 13 w(-)j(>)p 0 TeXcolorgray
12 w(a)f(c)g(t)g(i)g(v)g(a)g(t)g(i)g(o)g(n)p 76 2588
V 96 2588 V 0 TeXcolorgray 556 2558 a(+)p 0 TeXcolorgray
62 w(m)d(i)g(n)p 0 TeXcolorgray 13 w(-)k(>)p 0 TeXcolorgray
10 w(p)d(r)g(o)g(c)p 0 TeXcolorgray 13 w(-)j(>)p 0 TeXcolorgray
11 w(p)e(e)g(r)g(i)g(o)g(d)p 0 TeXcolorgray 12 w(\))h(\))61
b({)p 76 2688 V 96 2688 V 0 2658 a Fc(8)p 0 TeXcolorgray
403 w Fa(m)7 b(i)g(n)p 0 TeXcolorgray 61 w(=)p 0 TeXcolorgray
60 w(p)p 0 TeXcolorgray 8 w(;)p 76 2788 V 96 2788 V 0
2758 a Fc(9)296 b Fa(})p 76 2887 V 96 2887 V -41 2857
a Fc(10)p 0 TeXcolorgray 295 w Fa(p)p 0 TeXcolorgray
61 w(=)p 0 TeXcolorgray 59 w(p)p 0 TeXcolorgray 9 w(-)9
b(>)p 0 TeXcolorgray 11 w(n)e(e)g(x)g(t)p 0 TeXcolorgray
9 w(;)p 76 2987 V 96 2987 V -41 2957 a Fc(11)190 b Fa(})p
76 3086 V 96 3086 V -41 3057 a Fc(12)g Fa(*)p 0 TeXcolorgray
11 w(d)7 b(e)g(l)g(t)g(a)p 0 TeXcolorgray 64 w(=)62 b(1)6
b(;)p 76 3186 V 96 3186 V -41 3156 a Fc(13)p 0 0.4 0
TeXcolorrgb 193 w Fa(r)h(e)g(t)g(u)g(r)g(n)p 0 TeXcolorgray
0 TeXcolorgray 65 w(m)e(i)g(n)p 0 TeXcolorgray 14 w(-)k(>)p
0 TeXcolorgray 11 w(p)e(r)g(o)g(c)p 0 TeXcolorgray 9
w(;)p 76 3286 V 96 3286 V -41 3256 a Fc(14)86 b Fa(})p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1929 5400
a Fc(2)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
